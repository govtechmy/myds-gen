[
    {
        "name": "Date Range Picker",
        "description": "Allows users to select a date range from an interactive calendar.",
        "docs": {
            "import": "import { DateRangePicker } from \"@govtechmy/myds-react/date-picker\";",
            "use": "export default () => <DateRangePicker />;",
            "props": {
                "DateRangePicker": {
                    "size": {
                        "description": "Size of the daterange picker",
                        "type": "enum",
                        "typeDescription": "small | medium | large",
                        "default": "small"
                    },
                    "defaultValue": {
                        "description": "Initial state of the daterange picker (uncontrolled)",
                        "type": "boolean | indeterminate",
                        "default": "false"
                    },
                    "value": {
                        "description": "State of the daterange picker (controlled)",
                        "type": "boolean | indeterminate",
                        "default": "false"
                    },
                    "onValueChange": {
                        "description": "Change event listener (controlled)",
                        "type": "(date: Date ) => void"
                    },
                    "placeholder": {
                        "description": "Placeholder text for the daterange picker",
                        "type": "string",
                        "default": "dd / mm / yyyy"
                    },
                    "disabled": {
                        "description": "Disabled state for daterange picker",
                        "type": "boolean | Matcher | Matcher[]",
                        "default": "false"
                    },
                    "maxYear": {
                        "description": "Maximum year for the daterange picker",
                        "type": "number",
                        "default": "2099"
                    },
                    "minYear": {
                        "description": "Minimum year for the daterange picker",
                        "type": "number",
                        "default": "1900"
                    },
                    "yearOrder": {
                        "description": "Sorting order for the year selection",
                        "type": "asc | desc",
                        "default": "asc"
                    },
                    "locale": {
                        "description": "Locale for the daterange picker",
                        "type": "en | ms",
                        "default": "en"
                    }
                }
            },
            "examples": [
                "import { DateRangePicker } from \"@govtechmy/myds-react/date-picker\";\nexport default function component() {\n\treturn (<DateRangePicker size=\"small\" />\n\t\t<DateRangePicker size=\"medium\" />\n\t\t<DateRangePicker size=\"large\" />\n\t);\n}",
                "import { DateRangePicker } from \"@govtechmy/myds-react/date-picker\";\nexport default function component() {\n\treturn (// Uncontrolled state\n\t\t<DatePicker defaultValue={{ from: new Date(/* yesterday */), to: new Date(/* tomorrow */) }} />\n\t\t\n\t\t// Controlled state\n\t\t<DatePicker value={{ from: new Date(/* yesterday */), to: new Date(/* tomorrow */) }} />\n\t);\n}",
                "import { DateRangePicker } from \"@govtechmy/myds-react/date-picker\";\nexport default function component() {\n\treturn (// Disable all dates\n\t\t<DateRangePicker defaultValue={{ from: new Date(/* yesterday */), to: new Date(/* tomorrow */) }} disabled />\n\t\t\n\t\t// Disable dates before yesterday\n\t\t<DateRangePicker defaultValue={{ from: new Date(/* yesterday */), to: new Date(/* tomorrow */) }} disabled={{ before: new Date(/* yesterday */) }} />\n\t\t\n\t\t// Disable dates after tomorrow\n\t\t<DateRangePicker defaultValue={{ from: new Date(/* yesterday */), to: new Date(/* tomorrow */) }} disabled={{ after: new Date(/* tomorrow */) }} />\n\t\t\n\t\t// Disable dates outside of range\n\t\t<DateRangePicker\n\t\t  defaultValue={{ from: new Date(/* yesterday */), to: new Date(/* tomorrow */) }}\n\t\t  disabled={{\n\t\t    before: new Date().setDate(new Date().getDate() - 1),\n\t\t    after: new Date().setDate(new Date().getDate() + 1),\n\t\t  }}\n\t\t/>\n\t\t\n\t\t// Disable dates by days of week (eg. Saturday and Sunday)\n\t\t<DateRangePicker\n\t\t  defaultValue={{ from: new Date(/* yesterday */), to: new Date(/* tomorrow */) }}\n\t\t  disabled={{\n\t\t    dayOfWeek: [0, 6],\n\t\t  }}\n\t\t/>\n\t\t\n\t\t// Disable dates by callback function (eg. disable every 13th of the month)\n\t\t<DateRangePicker\n\t\t  defaultValue={{ from: new Date(/* yesterday */), to: new Date(/* tomorrow */) }}\n\t\t  disabled={(date) => date.getDate() === 13}\n\t\t/>\n\t);\n}",
                "import { DateRangePicker } from \"@govtechmy/myds-react/date-picker\";\nexport default function component() {\n\treturn (<DateRangePicker\n\t\t  defaultValue={{\n\t\t    from: new Date(/* yesterday */),\n\t\t    to: new Date(/* tomorrow */),\n\t\t  }}\n\t\t  maxYear={2030}\n\t\t  minYear={2020}\n\t\t/>\n\t);\n}",
                "import { DateRangePicker } from \"@govtechmy/myds-react/date-picker\";\nexport default function component() {\n\treturn (<DatePicker defaultValue={{ from: new Date(/* yesterday */), to: new Date(/* tomorrow */) }} yearOrder=\"asc\" />\n\t\t\n\t\t<DatePicker defaultValue={{ from: new Date(/* yesterday */), to: new Date(/* tomorrow */) }} yearOrder=\"desc\" />\n\t);\n}",
                "import { DateRangePicker } from \"@govtechmy/myds-react/date-picker\";\nexport default function component() {\n\treturn (<DatePicker defaultValue={{ from: new Date(/* yesterday */), to: new Date(/* tomorrow */) }} locale=\"en\" />\n\t\t\n\t\t<DatePicker defaultValue={{ from: new Date(/* yesterday */), to: new Date(/* tomorrow */) }} locale=\"ms\" />\n\t);\n}"
            ]
        }
    },
    {
        "name": "Skiplink",
        "description": "This component enables users to bypass repetitive navigation links and jumps directly to the main content. It enhances accessibility for keyboard and screen reader users by improving navigation efficiency and is typically hidden until focused.",
        "docs": {
            "import": "import { Skiplink } from \"@govtechmy/myds-react/skiplink\";",
            "use": "export default () => (\n  <Skiplink href=\"#main-content\">\n    <span>Skip to main content</span>\n  </Skiplink>\n  <main id=\"main-content\">\n    <span className=\"text-slate-600\">\n      Main content here\n    </span>\n  </main>\n);",
            "props": {
                "Skiplink": {
                    "href": {
                        "description": "Specifies the target destination's ID that the skip link should navigate to when activated.",
                        "type": "string",
                        "typeDescription": "-",
                        "default": "-"
                    }
                }
            },
            "examples": []
        }
    },
    {
        "name": "Tooltip",
        "description": "This component offers brief, contextual info when users hover or focus on an element, enhancing clarity without cluttering the interface. Typically used to explain icons, buttons, or any interactive elements where the meaning might not be immediately clear.",
        "docs": {
            "import": "import {\n  Tooltip,\n  TooltipTrigger,\n  TooltipContent,\n} from \"@govtechmy/myds-react/tooltip\";",
            "use": "<Tooltip>\n  <TooltipTrigger />\n  <TooltipContent />\n</Tooltip>",
            "props": {
                "Tooltip": {
                    "defaultOpen": {
                        "description": "The initial open state of the tooltip when it's first rendered.",
                        "type": "boolean"
                    },
                    "open": {
                        "description": "Allows direct manipulation of the open state.",
                        "type": "boolean"
                    },
                    "onOpenChange": {
                        "description": "Allows a callback to be fired when the open state changes.",
                        "type": "function"
                    },
                    "delayDuration": {
                        "description": "The time delay before showing the tooltip when hovering.",
                        "type": "number",
                        "default": "700ms"
                    },
                    "disableHoverableContent": {
                        "description": "When true, prevents the user from hovering over the tooltip content.",
                        "type": "boolean"
                    }
                },
                "TooltipContent": {
                    "container": {
                        "description": "The element to portal the tooltip content into.",
                        "type": "HTMLElement",
                        "default": "document.body"
                    },
                    "arrowPadding": {
                        "description": "Space between the arrow and the tooltip content edges.",
                        "type": "number"
                    },
                    "align": {
                        "description": "Alignment along the tooltip's side.",
                        "type": "enum",
                        "typeDescription": "start | center | end",
                        "default": "center"
                    },
                    "side": {
                        "description": "Preferred position of the tooltip.",
                        "type": "enum",
                        "typeDescription": "top | right | bottom | left",
                        "default": "top"
                    }
                }
            },
            "examples": [
                "import {\n  Tooltip,\n  TooltipTrigger,\n  TooltipContent,\n} from \"@govtechmy/myds-react/tooltip\";\nexport default function component() {\n\treturn (import { Tooltip, TooltipTrigger, TooltipContent } from \"@govtechmy/myds-react/tooltip\";\n\t\t\n\t\t  <Tooltip open={true}>\n\t\t    <TooltipTrigger>\n\t\t        <QuestionCircleIcon />\n\t\t    </TooltipTrigger>\n\t\t    <TooltipContent>This is a helpful description.</TooltipContent>\n\t\t\n\t\t</Tooltip>\n\t\t  \n\t);\n}",
                "import {\n  Tooltip,\n  TooltipTrigger,\n  TooltipContent,\n} from \"@govtechmy/myds-react/tooltip\";\nexport default function component() {\n\treturn (import { Tooltip, TooltipTrigger, TooltipContent } from \"@govtechmy/myds-react/tooltip\";\n\t\t\n\t\t<Tooltip>\n\t\t  <TooltipTrigger>\n\t\t      <QuestionCircleIcon />\n\t\t  </TooltipTrigger>\n\t\t  <TooltipContent side={\"left\"}>This helpful description is placed on the left.</TooltipContent>\n\t\t</Tooltip>\n\t\t<Tooltip>\n\t\t  <TooltipTrigger>\n\t\t      <QuestionCircleIcon />\n\t\t  </TooltipTrigger>\n\t\t  <TooltipContent side={\"right\"}>This helpful description is placed on the right.</TooltipContent>\n\t\t</Tooltip>\n\t\t<Tooltip>\n\t\t  <TooltipTrigger>\n\t\t      <QuestionCircleIcon />\n\t\t  </TooltipTrigger>\n\t\t  <TooltipContent side={\"top\"}>This helpful description is placed on the top.</TooltipContent>\n\t\t</Tooltip>\n\t\t<Tooltip>\n\t\t  <TooltipTrigger>\n\t\t      <QuestionCircleIcon />\n\t\t  </TooltipTrigger>\n\t\t  <TooltipContent side={\"bottom\"}>This helpful description is placed on the bottom.</TooltipContent>\n\t\t</Tooltip>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Tag",
        "description": "Tag is a visual indicator. It can be used to show the current state or status of an item, process, or entity. It likely comes in various styles to represent different states. Available in multiple sizes to fit your design needs. Use the appropriate variant to effectively communicate status at a glance.",
        "docs": {
            "import": "import { Tag } from \"@govtechmy/myds-react/tag\";",
            "use": "export default () => (\n  <Tag size=\"medium\" dot={true}>Default</Tag>\n  <Tag size=\"small\" dot={false} variant=\"warning\" mode=\"default\">\n    <span>Default</span>\n  </Tag>\n);",
            "props": {
                "Tag": {
                    "variant": {
                        "description": "Style variant of the tag",
                        "type": "enum",
                        "typeDescription": "default | primary | success | danger | warning",
                        "default": "default"
                    },
                    "size": {
                        "description": "Sizes of the tag",
                        "type": "enum",
                        "typeDescription": "small | medium | large",
                        "default": "small"
                    },
                    "dot": {
                        "description": "Whether to show a status dot in the tag",
                        "type": "boolean",
                        "default": "false"
                    },
                    "mode": {
                        "description": "The style of the tag (rounded or not)",
                        "type": "enum",
                        "typeDescription": "pill | default",
                        "default": "pill"
                    }
                }
            },
            "examples": [
                "import { Tag } from \"@govtechmy/myds-react/tag\";\nexport default function component() {\n\treturn (import { Tag } from \"@govtechmy/myds-react/tag\";\n\t\t\n\t\t<Tag size=\"medium\" dot={true} variant=\"default\">\n\t\t  Default\n\t\t</Tag>\n\t\t<Tag size=\"medium\" dot={true} variant=\"primary\">\n\t\t  Primary\n\t\t</Tag>\n\t\t<Tag size=\"medium\" dot={true} variant=\"success\">\n\t\t  Success\n\t\t</Tag>\n\t\t<Tag size=\"medium\" dot={true} variant=\"danger\">\n\t\t  Danger\n\t\t</Tag>\n\t\t<Tag size=\"medium\" dot={true} variant=\"warning\">\n\t\t  Warning\n\t\t</Tag>\n\t);\n}",
                "import { Tag } from \"@govtechmy/myds-react/tag\";\nexport default function component() {\n\treturn (import { Tag } from \"@govtechmy/myds-react/tag\";\n\t\t\n\t\t<Tag size=\"small\" dot={true} variant=\"primary\">Small</Tag>\n\t\t<Tag size=\"medium\" dot={true} variant=\"primary\">Medium</Tag>\n\t\t<Tag size=\"large\" dot={true} variant=\"primary\">Large</Tag>\n\t);\n}",
                "import { Tag } from \"@govtechmy/myds-react/tag\";\nexport default function component() {\n\treturn (import { Tag } from \"@govtechmy/myds-react/tag\";\n\t\t\n\t\t<Tag size=\"medium\" dot={true} variant=\"success\" mode=\"default\">\n\t\t  Default\n\t\t</Tag>\n\t\t<Tag size=\"medium\" dot={true} variant=\"success\" mode=\"pill\">\n\t\t  Pill\n\t\t</Tag>\n\t);\n}",
                "import { Tag } from \"@govtechmy/myds-react/tag\";\nexport default function component() {\n\treturn (import { Tag } from \"@govtechmy/myds-react/tag\";\n\t\t\n\t\t<Tag size=\"medium\" dot={false} variant=\"warning\" mode=\"default\">No Dot</Tag>\n\t\t<Tag size=\"medium\" dot={true} variant=\"warning\" mode=\"default\">Dot</Tag>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Label",
        "description": "The Label component is a standardized form element used to associate descriptive text with controls such as checkboxes and toggles. This component ensures accessibility and consistent styling for Malaysian government websites.",
        "docs": {
            "import": "import { Label } from \"@govtechmy/myds-react/label\";\nimport { Checkbox } from \"@govtechmy/myds-react/checkbox\";\nimport { Toggle, ToggleThumb } from \"@govtechmy/myds-react/toggle\";",
            "use": "export default () => (\n  <>\n    <div className=\"flex items-center justify-between\">\n      <Label htmlFor=\"checkbox\">Auto-delete notifications</Label>\n      <Checkbox id=\"checkbox\"></Checkbox>\n    </div>\n    <div className=\"flex items-center justify-between\">\n      <Label htmlFor=\"toggle\">Enable 2FA security?</Label>\n      <Toggle id=\"toggle\">\n        <ToggleThumb />\n      </Toggle>\n    </div>\n  </>\n);",
            "props": {
                "LabelProps": {
                    "asChild": {
                        "description": "If `true`, renders the label using the `Slot` component instead of a `label` element.",
                        "type": "boolean",
                        "default": "false"
                    },
                    "size": {
                        "description": "Determines the size of the label text. Inherits from `label_cva`.",
                        "type": "enum",
                        "typeDescription": "small | medium | large",
                        "default": "medium"
                    },
                    "className": {
                        "description": "Additional CSS classes to override or extend default styles.",
                        "type": "string"
                    }
                }
            },
            "examples": [
                "import { Label } from \"@govtechmy/myds-react/label\";\nimport { Checkbox } from \"@govtechmy/myds-react/checkbox\";\nimport { Toggle, ToggleThumb } from \"@govtechmy/myds-react/toggle\";\nexport default function component() {\n\treturn (import { Label } from \"@govtechmy/myds-react/label\";\n\t\timport { Checkbox } from \"@govtechmy/myds-react/checkbox\";\n\t\timport { Toggle, ToggleThumb } from \"@govtechmy/myds-react/toggle\";\n\t\t\n\t\t/** Size **/\n\t\t\n\t\t<>\n\t\t  <Tab value=\"Preview\">\n\t\t  <div className=\"flex items-center\">\n\t\t    <Label size=\"small\" className=\"items-center flex justify-between w-full\">\n\t\t      Enable 2FA security?\n\t\t      <Toggle size=\"small\">\n\t\t        <ToggleThumb />\n\t\t      </Toggle>\n\t\t    </Label>\n\t\t\n\t\t  </div>\n\t\t  <div className=\"flex items-center\">\n\t\t    <Label size=\"medium\" className=\"items-center flex justify-between w-full\">\n\t\t      Enable 2FA security?\n\t\t      <Toggle size=\"medium\">\n\t\t        <ToggleThumb />\n\t\t      </Toggle>\n\t\t    </Label>\n\t\t\n\t\t  </div>\n\t\t  <div className=\"flex items-center\">\n\t\t    <Label size=\"large\" className=\"items-center flex justify-between w-full\">\n\t\t      Enable 2FA security?\n\t\t      <Toggle size=\"large\">\n\t\t        <ToggleThumb />\n\t\t      </Toggle>\n\t\t    </Label>\n\t\t\n\t\t  </div>\n\t\t  </Tab>\n\t\t</>\n\t);\n}",
                "import { Label } from \"@govtechmy/myds-react/label\";\nimport { Checkbox } from \"@govtechmy/myds-react/checkbox\";\nimport { Toggle, ToggleThumb } from \"@govtechmy/myds-react/toggle\";\nexport default function component() {\n\treturn (import { Label } from \"@govtechmy/myds-react/label\";\n\t\t\n\t\t/** Use as Slot **/\n\t\t\n\t\t<Label asChild>\n\t\t    <span>Custom Rendered Label</span>\n\t\t</Label>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Cookies Banner",
        "description": "Notifies users that the website uses cookies to improve their experience and gives them the option to manage their consent preferences through cookie settings. It typically appears when a user lands on the website for the first time.",
        "docs": {
            "import": "import {\n  CookieBanner,\n  CookieBannerClose,\n  CookieBannerPreferencesToggle,\n  CookieBannerPreferencesDisplay,\n  CookieBannerDescription,\n  CookieBannerFooter,\n  CookieBannerHeader,\n  CookieBannerPreferences,\n  CookieBannerTitle,\n} from \"@govtechmy/myds-react/cookie-banner\";",
            "use": "export default () => (\n  <CookieBanner>\n    <CookieBannerHeader>\n      <CookieBannerTitle />\n      <CookieBannerDescription />\n    </CookieBannerHeader>\n    <CookieBannerPreferences />\n    <CookieBannerFooter>\n      <CookieBannerPreferencesToggle>\n        <CookieBannerPreferencesDisplay>\n          <CookieBannerClose />\n        </CookieBannerPreferencesDisplay>\n      </CookieBannerPreferencesToggle>\n    </CookieBannerFooter>\n  </CookieBanner>\n);",
            "props": {
                "CookieBanner": {
                    "open": {
                        "description": "State to control cookie banners open or close",
                        "type": "boolean",
                        "typeDescription": "true | false",
                        "default": "false"
                    },
                    "dismissible": {
                        "description": "To control whether the cookie banner should have a close button",
                        "type": "boolean",
                        "default": "true"
                    },
                    "onDismiss": {
                        "description": "Event listener for when the cookie banner is dismissed",
                        "type": "() => void"
                    },
                    "onOpenChange": {
                        "description": "Event listener for when the cookie banner is opened or closed (controlled)",
                        "type": "(open: boolean) => void"
                    }
                },
                "CookieBannerPreferencesDisplay": {
                    "showWhen": {
                        "description": "The visibility of the component depends on the value of 'showPreferences' props.",
                        "type": "enum",
                        "typeDescription": "preferences-hidden | preferences-shown",
                        "default": "preferences-hidden"
                    }
                }
            },
            "examples": []
        }
    },
    {
        "name": "Accordion",
        "description": "Organize and display content in a compact, collapsible format, commonly used for FAQ sections.",
        "docs": {
            "import": "import {\n  Accordion,\n  AccordionTrigger,\n  AccordionContent,\n  AccordionItem,\n} from \"@govtechmy/myds-react/accordion\";",
            "use": "export default () => (\n  <Accordion>\n    <AccordionItem>\n      <AccordionTrigger />\n      <AccordionContent />\n    </AccordionItem>\n  </Accordion>\n);",
            "props": {
                "Accordion": {
                    "type": {
                        "type": "enum",
                        "typeDescription": "single | multiple",
                        "default": "small"
                    },
                    "value": {
                        "description": "The controlled value of the item to expand. Must be used in conjunction with onValueChange.",
                        "type": "string|string[]"
                    },
                    "defaultValue": {
                        "description": "The value of the item to expand when initially rendered. Use when you do not need to control the state of the items.",
                        "type": "string|string[]"
                    },
                    "onValueChange": {
                        "description": "Event handler called when the expanded state of an item changes and type is 'single'.",
                        "type": "string|string[]"
                    },
                    "collapsible": {
                        "description": "When type is 'single', allows closing content when clicking trigger for an open item.",
                        "type": "string|string[]"
                    },
                    "disabled": {
                        "description": "When true, prevents the user from interacting with the accordion and all its items.",
                        "type": "string|string[]"
                    }
                },
                "AccordionItem": {
                    "asChild": {
                        "description": "The controlled value of the item to expand. Must be used in conjunction with onValueChange.",
                        "type": "boolean",
                        "default": "false"
                    },
                    "value": {
                        "description": "The controlled value of the item to expand. Must be used in conjunction with onValueChange.",
                        "type": "string|string[]"
                    },
                    "disabled": {
                        "description": "When true, prevents the user from interacting with the accordion and all its items.",
                        "type": "string|string[]"
                    }
                },
                "AccordionTrigger": {
                    "asChild": {
                        "description": "The controlled value of the item to expand. Must be used in conjunction with onValueChange.",
                        "type": "boolean",
                        "default": "false"
                    }
                },
                "AccordionContent": {
                    "asChild": {
                        "description": "The controlled value of the item to expand. Must be used in conjunction with onValueChange.",
                        "type": "boolean",
                        "default": "false"
                    }
                }
            },
            "examples": [
                "import {\n  Accordion,\n  AccordionTrigger,\n  AccordionContent,\n  AccordionItem,\n} from \"@govtechmy/myds-react/accordion\";\nexport default function component() {\n\treturn (<Accordion type=\"multiple\" defaultValue=\"item-1\">\n\t\t  <AccordionItem key=\"item-1\" value=\"item-1\">\n\t\t    <AccordionTrigger>What is MYDS?</AccordionTrigger>\n\t\t    <AccordionContent>\n\t\t      MYDS is a design system for building official Malaysian government\n\t\t      products over the web. MYDS provides beautiful pre-built components\n\t\t      which streamline development and promote consistency across government\n\t\t      products.\n\t\t    </AccordionContent>\n\t\t  </AccordionItem>\n\t\t  <AccordionItem key=\"item-2\" value=\"item-2\">\n\t\t    <AccordionTrigger>Who is it built for?</AccordionTrigger>\n\t\t    <AccordionContent>\n\t\t      It is built for developers and designers who are working on Malaysian\n\t\t      government products. It is also built for anyone in public service who\n\t\t      wants to try building Malaysian inspired products.\n\t\t    </AccordionContent>\n\t\t  </AccordionItem>\n\t\t  <AccordionItem key=\"item-3\" value=\"item-3\">\n\t\t    <AccordionTrigger>Is it open source?</AccordionTrigger>\n\t\t    <AccordionContent>\n\t\t      Yes, we are open source. You can find the source code on our GitHub{\" \"}\n\t\t      <a\n\t\t        className=\"text-txt-primary\"\n\t\t        href=\"https://github.com/govtechmy/myds\"\n\t\t      >\n\t\t        (@govtechmy)\n\t\t      </a>\n\t\t      repository.\n\t\t    </AccordionContent>\n\t\t  </AccordionItem>\n\t\t</Accordion>\n\t);\n}",
                "import {\n  Accordion,\n  AccordionTrigger,\n  AccordionContent,\n  AccordionItem,\n} from \"@govtechmy/myds-react/accordion\";\nexport default function component() {\n\treturn (<Accordion type=\"single\" defaultValue=\"item-1\" collapsible={false}>\n\t\t  <AccordionItem key=\"item-1\" value=\"item-1\">\n\t\t    <AccordionTrigger>What is MYDS?</AccordionTrigger>\n\t\t    <AccordionContent>\n\t\t      MYDS is a design system for building official Malaysian government\n\t\t      products over the web. MYDS provides beautiful pre-built components\n\t\t      which streamline development and promote consistency across government\n\t\t      products.\n\t\t    </AccordionContent>\n\t\t  </AccordionItem>\n\t\t  <AccordionItem key=\"item-2\" value=\"item-2\">\n\t\t    <AccordionTrigger>Who is it built for?</AccordionTrigger>\n\t\t    <AccordionContent>\n\t\t      It is built for developers and designers who are working on Malaysian\n\t\t      government products. It is also built for anyone in public service who\n\t\t      wants to try building Malaysian inspired products.\n\t\t    </AccordionContent>\n\t\t  </AccordionItem>\n\t\t  <AccordionItem key=\"item-3\" value=\"item-3\">\n\t\t    <AccordionTrigger>Is it open source?</AccordionTrigger>\n\t\t    <AccordionContent>\n\t\t      Yes, we are open source. You can find the source code on our GitHub{\" \"}\n\t\t      <a className=\"text-txt-primary\" href=\"https://github.com/govtechmy/myds\">\n\t\t        (@govtechmy)\n\t\t      </a>\n\t\t      repository.\n\t\t    </AccordionContent>\n\t\t  </AccordionItem>\n\t\t</Accordion>\n\t);\n}",
                "import {\n  Accordion,\n  AccordionTrigger,\n  AccordionContent,\n  AccordionItem,\n} from \"@govtechmy/myds-react/accordion\";\nexport default function component() {\n\treturn (<Accordion type=\"single\" defaultValue=\"item-1\">\n\t\t  <AccordionItem key=\"item-1\" value=\"item-1\">\n\t\t    <AccordionTrigger>What is MYDS?</AccordionTrigger>\n\t\t    <AccordionContent>\n\t\t      MYDS is a design system for building official Malaysian government\n\t\t      products over the web. MYDS provides beautiful pre-built components\n\t\t      which streamline development and promote consistency across government\n\t\t      products.\n\t\t    </AccordionContent>\n\t\t  </AccordionItem>\n\t\t  <AccordionItem key=\"item-2\" value=\"item-2\" disabled>\n\t\t    <AccordionTrigger>Who is it built for?</AccordionTrigger>\n\t\t    <AccordionContent>\n\t\t      It is built for developers and designers who are working on Malaysian\n\t\t      government products. It is also built for anyone in public service who\n\t\t      wants to try building Malaysian inspired products.\n\t\t    </AccordionContent>\n\t\t  </AccordionItem>\n\t\t  <AccordionItem key=\"item-3\" value=\"item-3\">\n\t\t    <AccordionTrigger>Is it open source?</AccordionTrigger>\n\t\t    <AccordionContent>\n\t\t      Yes, we are open source. You can find the source code on our GitHub{\" \"}\n\t\t      <a\n\t\t        className=\"text-txt-primary\"\n\t\t        href=\"https://github.com/govtechmy/myds\"\n\t\t      >\n\t\t        (@govtechmy)\n\t\t      </a>\n\t\t      repository.\n\t\t    </AccordionContent>\n\t\t  </AccordionItem>\n\t\t</Accordion>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Search Bar",
        "description": "Allow users to enter a query or keyword to search through content within a website.",
        "docs": {
            "import": "import {\n  SearchBar,\n  SearchBarInput,\n  SearchBarInputContainer,\n  SearchBarSearchButton,\n  SearchBarResults,\n  SearchBarResultsList,\n  SearchBarResultsItem,\n  SearchBarClearButton,\n  SearchBarHint,\n} from \"@govtechmy/myds-react/search-bar\";",
            "use": "export default () => (\n  <SearchBar size=\"large\">\n    <SearchBarInputContainer>\n      <SearchBarInput value={query} onValueChange={setQuery} />\n      <SearchBarHint>\n        Press <Pill size=\"small\">/</Pill> to search\n      </SearchBarHint>\n      <SearchBarClearButton />\n      <SearchBarSearchButton />\n    </SearchBarInputContainer>\n    <SearchBarResults open={true}>\n      <SearchBarResultsList>\n        <SearchBarResultsItem value=\"foo\" onSelect={...} >\n          Foo\n        </SearchBarResultsItem>\n        <SearchBarResultsItem value=\"bar\" onSelect={...} >\n          Bar\n        </SearchBarResultsItem>\n      </SearchBarResultsList>\n    </SearchBarResults>\n  </SearchBar>\n);",
            "props": {
                "SearchBar": {
                    "size": {
                        "description": "Sizes of the search bar",
                        "type": "enum",
                        "typeDescription": "small | medium | large",
                        "default": "medium"
                    }
                },
                "SearchBarInput": {
                    "value": {
                        "description": "Input value",
                        "type": "string"
                    },
                    "onValueChange": {
                        "description": "Callback function when the input changes",
                        "type": "function",
                        "typeDescription": "(value: string) => void"
                    }
                },
                "SearchBarResults": {
                    "open": {
                        "description": "Whether the results pop-up is open or closed",
                        "type": "boolean"
                    }
                }
            },
            "examples": [
                "import {\n  SearchBar,\n  SearchBarInput,\n  SearchBarInputContainer,\n  SearchBarSearchButton,\n  SearchBarResults,\n  SearchBarResultsList,\n  SearchBarResultsItem,\n  SearchBarClearButton,\n  SearchBarHint,\n} from \"@govtechmy/myds-react/search-bar\";\nexport default function component() {\n\treturn (import {\n\t\t    SearchBar,\n\t\t    SearchBarInput,\n\t\t    SearchBarInputContainer,\n\t\t    SearchBarSearchButton,\n\t\t} from \"@govtechmy/myds-react/search-bar\";\n\t\t\n\t\t<SearchBar size=\"small\">\n\t\t  <SearchBarInputContainer>\n\t\t    <SearchBarInput placeholder=\"Search by name\" />\n\t\t    <SearchBarSearchButton />\n\t\t  </SearchBarInputContainer>\n\t\t</SearchBar>\n\t\t\n\t\t<SearchBar size=\"medium\">\n\t\t  <SearchBarInputContainer>\n\t\t    <SearchBarInput placeholder=\"Search by name\" />\n\t\t    <SearchBarSearchButton />\n\t\t  </SearchBarInputContainer>\n\t\t</SearchBar>\n\t\t\n\t\t<SearchBar size=\"large\">\n\t\t  <SearchBarInputContainer>\n\t\t    <SearchBarInput placeholder=\"Search by name\" />\n\t\t    <SearchBarSearchButton />\n\t\t  </SearchBarInputContainer>\n\t\t</SearchBar>\n\t);\n}",
                "import {\n  SearchBar,\n  SearchBarInput,\n  SearchBarInputContainer,\n  SearchBarSearchButton,\n  SearchBarResults,\n  SearchBarResultsList,\n  SearchBarResultsItem,\n  SearchBarClearButton,\n  SearchBarHint,\n} from \"@govtechmy/myds-react/search-bar\";\nexport default function component() {\n\treturn (import {\n\t\t    SearchBar,\n\t\t    SearchBarInput,\n\t\t    SearchBarInputContainer,\n\t\t    SearchBarSearchButton,\n\t\t    SearchBarClearButton,\n\t\t} from \"@govtechmy/myds-react/search-bar\";\n\t\t\n\t\tconst [query, setQuery] = useState(\"Hello world!\");\n\t\tconst showClearButton = query.length > 0;\n\t\t\n\t\t<SearchBar size=\"large\">\n\t\t  <SearchBarInputContainer>\n\t\t    <SearchBarInput\n\t\t      placeholder=\"Search by name\"\n\t\t      value={query}\n\t\t      onValueChange={setQuery}\n\t\t    />\n\t\t    {showClearButton && (\n\t\t      <SearchBarClearButton onClick={() => setQuery(\"\")} />\n\t\t    )}\n\t\t    <SearchBarSearchButton />\n\t\t  </SearchBarInputContainer>\n\t\t</SearchBar>\n\t);\n}",
                "import {\n  SearchBar,\n  SearchBarInput,\n  SearchBarInputContainer,\n  SearchBarSearchButton,\n  SearchBarResults,\n  SearchBarResultsList,\n  SearchBarResultsItem,\n  SearchBarClearButton,\n  SearchBarHint,\n} from \"@govtechmy/myds-react/search-bar\";\nexport default function component() {\n\treturn (import {\n\t\t    SearchBar,\n\t\t    SearchBarInput,\n\t\t    SearchBarInputContainer,\n\t\t    SearchBarSearchButton,\n\t\t    SearchBarHint,\n\t\t} from \"@govtechmy/myds-react/search-bar\";\n\t\timport { Pill } from \"@govtechmy/myds-react/pill\";\n\t\t\n\t\t<SearchBar size=\"large\">\n\t\t  <SearchBarInputContainer>\n\t\t    <SearchBarInput placeholder=\"Search by name\" />\n\t\t    <SearchBarHint className=\"hidden lg:flex\">\n\t\t      Press <Pill size=\"small\">/</Pill> to search\n\t\t    </SearchBarHint>\n\t\t    <SearchBarSearchButton />\n\t\t  </SearchBarInputContainer>\n\t\t</SearchBar>\n\t);\n}",
                "import {\n  SearchBar,\n  SearchBarInput,\n  SearchBarInputContainer,\n  SearchBarSearchButton,\n  SearchBarResults,\n  SearchBarResultsList,\n  SearchBarResultsItem,\n  SearchBarClearButton,\n  SearchBarHint,\n} from \"@govtechmy/myds-react/search-bar\";\nexport default function component() {\n\treturn (import {\n\t\t  SearchBar,\n\t\t  SearchBarInput,\n\t\t  SearchBarInputContainer,\n\t\t  SearchBarSearchButton,\n\t\t  SearchBarResults,\n\t\t  SearchBarResultsList,\n\t\t  SearchBarResultsItem,\n\t\t} from \"@govtechmy/myds-react/search-bar\";\n\t\timport {\n\t\t  ChevronRightIcon,\n\t\t  UserIcon,\n\t\t} from \"@govtechmy/myds-react/icon\";\n\t\t\n\t\t<SearchBar size=\"large\">\n\t\t  <SearchBarInputContainer>\n\t\t    <SearchBarInput placeholder=\"Search by name\" />\n\t\t    <SearchBarSearchButton />\n\t\t  </SearchBarInputContainer>\n\t\t  <SearchBarResults open>\n\t\t    <SearchBarResultsList className=\"max-h-[400px] overflow-y-scroll\">\n\t\t      {results.map((item) => (\n\t\t        <SearchBarResultsItem key={item.name} value={item.name}>\n\t\t          <span className=\"bg-primary-50 text-txt-primary rounded-full p-px\">\n\t\t            <UserIcon className=\"size-4\" />\n\t\t          </span>\n\t\t          <p className=\"line-clamp-1 flex-1\">\n\t\t            {item.name}{\" \"}\n\t\t            <span className=\"text-txt-black-500 text-xs\">\n\t\t              {item.note}\n\t\t            </span>\n\t\t          </p>\n\t\t          <ChevronRightIcon />\n\t\t        </SearchBarResultsItem>\n\t\t      ))}\n\t\t    </SearchBarResultsList>\n\t\t  </SearchBarResults>\n\t\t</SearchBar>\n\t);\n}",
                "import {\n  SearchBar,\n  SearchBarInput,\n  SearchBarInputContainer,\n  SearchBarSearchButton,\n  SearchBarResults,\n  SearchBarResultsList,\n  SearchBarResultsItem,\n  SearchBarClearButton,\n  SearchBarHint,\n} from \"@govtechmy/myds-react/search-bar\";\nexport default function component() {\n\treturn (import {\n\t\t  SearchBar,\n\t\t  SearchBarInput,\n\t\t  SearchBarInputContainer,\n\t\t  SearchBarSearchButton,\n\t\t  SearchBarResults,\n\t\t  SearchBarResultsList,\n\t\t  SearchBarResultsItem,\n\t\t} from \"@govtechmy/myds-react/search-bar\";\n\t\timport {\n\t\t  ChevronRightIcon,\n\t\t  MoneyIcon,\n\t\t  StarIcon,\n\t\t  TrophyIcon,\n\t\t  UserIcon,\n\t\t} from \"@govtechmy/myds-react/icon\";\n\t\t\n\t\t<SearchBar size=\"large\">\n\t\t  <SearchBarInputContainer>\n\t\t    <SearchBarInput placeholder=\"Search by name\" />\n\t\t    <SearchBarSearchButton />\n\t\t  </SearchBarInputContainer>\n\t\t  <SearchBarResults open>\n\t\t    <SearchBarResultsList className=\"max-h-[400px] overflow-y-scroll\">\n\t\t      {Object.entries(groupedResults).map(([group, items]) => (\n\t\t        <SearchBarResultsGroup key={group} heading={group}>\n\t\t          {items.map((item) => (\n\t\t            <SearchBarResultsItem key={item.name} value={item.name}>\n\t\t              <span className=\"bg-primary-50 text-txt-primary rounded-full p-px\">\n\t\t                {group === \"Arts\" ? (\n\t\t                  <StarIcon className=\"size-4\" />\n\t\t                ) : group === \"Sports\" ? (\n\t\t                  <TrophyIcon className=\"size-4\" />\n\t\t                ) : (\n\t\t                  <MoneyIcon className=\"size-4\" />\n\t\t                )}\n\t\t              </span>\n\t\t              <p className=\"line-clamp-1 flex-1\">\n\t\t                {item.name}{\" \"}\n\t\t                <span className=\"text-txt-black-500 text-xs\">\n\t\t                  {item.note}\n\t\t                </span>\n\t\t              </p>\n\t\t              <ChevronRightIcon />\n\t\t            </SearchBarResultsItem>\n\t\t          ))}\n\t\t        </SearchBarResultsGroup>\n\t\t      ))}\n\t\t    </SearchBarResultsList>\n\t\t  </SearchBarResults>\n\t\t</SearchBar>\n\t);\n}",
                "import {\n  SearchBar,\n  SearchBarInput,\n  SearchBarInputContainer,\n  SearchBarSearchButton,\n  SearchBarResults,\n  SearchBarResultsList,\n  SearchBarResultsItem,\n  SearchBarClearButton,\n  SearchBarHint,\n} from \"@govtechmy/myds-react/search-bar\";\nexport default function component() {\n\treturn (import {\n\t\t  SearchBar,\n\t\t  SearchBarInput,\n\t\t  SearchBarInputContainer,\n\t\t  SearchBarSearchButton,\n\t\t  SearchBarResults,\n\t\t  SearchBarResultsList,\n\t\t  SearchBarResultsItem,\n\t\t  SearchBarClearButton,\n\t\t  SearchBarHint,\n\t\t} from \"@govtechmy/myds-react/search-bar\";\n\t\timport { Pill } from \"@govtechmy/myds-react/pill\";\n\t\timport {\n\t\t  ChevronRightIcon,\n\t\t  MoneyIcon,\n\t\t  StarIcon,\n\t\t  TrophyIcon,\n\t\t  UserIcon,\n\t\t} from \"@govtechmy/myds-react/icon\";\n\t\t\n\t\tconst [hasFocus, setHasFocus] = useState(false);\n\t\tconst [query, setQuery] = useState(\"\");\n\t\tconst hasQuery = query.length > 0;\n\t\t\n\t\tconst results = notableMalaysians.filter((person) =>\n\t\t  person.name.toLowerCase().includes(query.toLocaleLowerCase()),\n\t\t);\n\t\t\n\t\t<SearchBar\n\t\t  size=\"large\"\n\t\t  onBlur={(e) => {\n\t\t    const blurredByChild = e.currentTarget.contains(e.relatedTarget);\n\t\t    if (blurredByChild) return;\n\t\t    setHasFocus(false);\n\t\t  }}\n\t\t>\n\t\t  <SearchBarInputContainer>\n\t\t    <SearchBarInput\n\t\t      placeholder=\"Search by name\"\n\t\t      value={query}\n\t\t      onValueChange={setQuery}\n\t\t      onFocus={() => setHasFocus(true)}\n\t\t      onBlur={() => setHasFocus(false)}\n\t\t    />\n\t\t    {query && <SearchBarClearButton onClick={() => setQuery(\"\")} />}\n\t\t    <SearchBarSearchButton />\n\t\t    {!hasFocus && (\n\t\t      <SearchBarHint className=\"hidden lg:flex\">\n\t\t        Press <Pill size=\"small\">/</Pill> to search\n\t\t      </SearchBarHint>\n\t\t    )}\n\t\t  </SearchBarInputContainer>\n\t\t  <SearchBarResults open={hasQuery && hasFocus}>\n\t\t    {hasQuery && !results.length && (\n\t\t      <p className=\"text-txt-black-900 text-center\">No results found</p>\n\t\t    )}\n\t\t    {hasQuery && results.length > 0 && (\n\t\t      <SearchBarResultsList className=\"max-h-[400px] overflow-y-scroll\">\n\t\t        {results.map((item) => (\n\t\t          <SearchBarResultsItem key={item.name} value={item.name}>\n\t\t            <span className=\"bg-primary-50 text-txt-primary rounded-full p-px\">\n\t\t              <UserIcon className=\"size-4\" />\n\t\t            </span>\n\t\t            <p className=\"line-clamp-1 flex-1\">\n\t\t              {item.name}{\" \"}\n\t\t              <span className=\"text-txt-black-500 text-xs\">\n\t\t                {item.note}\n\t\t              </span>\n\t\t            </p>\n\t\t            <ChevronRightIcon />\n\t\t          </SearchBarResultsItem>\n\t\t        ))}\n\t\t      </SearchBarResultsList>\n\t\t    )}\n\t\t  </SearchBarResults>\n\t\t</SearchBar>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Pagination",
        "description": "Allows users to navigate through a large set of content divided into discrete pages.",
        "docs": {
            "import": "import { AutoPagination } from \"@govtechmy/myds-react/pagination\";",
            "use": "<AutoPagination />",
            "props": {
                "AutoPagination": {
                    "count": {
                        "description": "The total number of items to be displayed.",
                        "type": "number"
                    },
                    "limit": {
                        "description": "The number of items per page.",
                        "type": "number"
                    },
                    "page": {
                        "description": "The current page number.",
                        "type": "number"
                    },
                    "maxDisplay": {
                        "description": "The number of items to display for paginated number before ellipsis.",
                        "type": "number",
                        "default": 4
                    },
                    "type": {
                        "description": "Style variant of the pagination",
                        "type": "enum",
                        "typeDescription": "simple | default | full",
                        "default": "default"
                    },
                    "onPageChange": {
                        "description": "A callback function that is invoked when the page changes.",
                        "type": "function",
                        "typeDescription": "(page: number) => void"
                    },
                    "fullText": {
                        "description": "The long description of the pagination information.",
                        "type": "string"
                    },
                    "next": {
                        "description": "Optional ReactNode to replace the default PaginationNext button.",
                        "type": "ReactNode"
                    },
                    "previous": {
                        "description": "Optional ReactNode to replace the default PaginationPrevious button.",
                        "type": "ReactNode"
                    }
                },
                "Pagination": {
                    "count": {
                        "description": "The total number of items to be displayed.",
                        "type": "number"
                    },
                    "limit": {
                        "description": "The number of items per page.",
                        "type": "number"
                    },
                    "page": {
                        "description": "The current page number.",
                        "type": "number"
                    },
                    "type": {
                        "description": "Style variant of the pagination",
                        "type": "enum",
                        "typeDescription": "simple | default | full",
                        "default": "default"
                    },
                    "onPageChange": {
                        "description": "A callback function that is invoked when the page changes.",
                        "type": "function",
                        "typeDescription": "(page: number) => void"
                    }
                },
                "PaginationLabel": {
                    "content": {
                        "description": "The long description of the pagination information.",
                        "type": "string"
                    }
                }
            },
            "examples": [
                "import { AutoPagination } from \"@govtechmy/myds-react/pagination\";\nexport default function component() {\n\treturn (import { AutoPagination } from \"@govtechmy/myds-react/pagination\";\n\t\t\n\t\t// default type\n\t\t<AutoPagination\n\t\t  page={2}\n\t\t  limit={10}\n\t\t  count={200}\n\t\t  type=\"default\"\n\t\t  maxDisplay={4}\n\t\t/>\n\t\t\n\t\t// simple type\n\t\t<AutoPagination\n\t\t  page={2}\n\t\t  limit={10}\n\t\t  count={200}\n\t\t  type=\"simple\"\n\t\t  maxDisplay={4}\n\t\t/>\n\t\t\n\t\t// full type\n\t\t<AutoPagination\n\t\t  page={2}\n\t\t  limit={10}\n\t\t  count={200}\n\t\t  type=\"full\"\n\t\t  maxDisplay={4}\n\t\t/>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Summary List",
        "description": "The summary list component displays information in a structured key-value format, making it ideal for presenting form summaries, application details, or any data that needs to be reviewed. It supports headers, action buttons, and custom styling.",
        "docs": {
            "import": "import {\n  SummaryList,\n  SummaryListAction,\n  SummaryListBody,\n  SummaryListHeader,\n  SummaryListTerm,\n  SummaryListDetail,\n  SummaryListRow,\n} from \"@govtechmy/myds-react/summary-list\";",
            "use": "export default () => (\n  <SummaryList>\n    <SummaryListHeader />\n    <SummaryListBody>\n      <SummaryListRow>\n        <SummaryListTerm />\n        <SummaryListDetail />\n        <SummaryListAction />\n      </SummaryListRow>\n    </SummaryListBody>\n  </SummaryList>\n);",
            "props": {
                "SummaryList": {
                    "className": {
                        "description": "Additional styles for the main wrapper.",
                        "type": "string"
                    },
                    "children": {
                        "description": "Content inside the summary list.",
                        "type": "ReactNode"
                    }
                },
                "SummaryListHeader": {
                    "className": {
                        "description": "Additional styles for the header.",
                        "type": "string"
                    },
                    "children": {
                        "description": "Header content, typically a title. ",
                        "type": "ReactNode"
                    }
                },
                "SummaryListBody": {
                    "className": {
                        "description": "Additional styles for the body container.",
                        "type": "string"
                    },
                    "children": {
                        "description": "Tabular data to be rendered inside the body. Inherits all table attributes.",
                        "type": "ReactNode"
                    }
                },
                "SummaryListRow": {
                    "className": {
                        "description": "Additional styles for the row.",
                        "type": "string"
                    },
                    "children": {
                        "description": "Row content, typically includes term and detail components. Inherits all tr attributes.",
                        "type": "ReactNode"
                    }
                },
                "SummaryListTerm": {
                    "className": {
                        "description": "Additional styles for the term cell.",
                        "type": "string"
                    },
                    "children": {
                        "description": "Term content, such as labels or titles. Inherits all td attributes.",
                        "type": "ReactNode"
                    }
                },
                "SummaryListDetail": {
                    "className": {
                        "description": "Additional styles for the detail cell. ",
                        "type": "string"
                    },
                    "children": {
                        "description": "Detail content, typically descriptions or data. Inherits all td attributes.",
                        "type": "ReactNode"
                    }
                },
                "SummaryListAction": {
                    "className": {
                        "description": "Additional styles for the action cell. ",
                        "type": "string"
                    },
                    "children": {
                        "description": "Actions related to the row, such as buttons or links. Inherits all td attributes.",
                        "type": "ReactNode"
                    }
                },
                "SummaryListAddition": {
                    "className": {
                        "description": "Additional styles for the addition cell.",
                        "type": "string"
                    },
                    "children": {
                        "description": "Auxiliary or extra content in the row. Inherits all td attributes.",
                        "type": "ReactNode"
                    }
                }
            },
            "examples": [
                "import {\n  SummaryList,\n  SummaryListAction,\n  SummaryListBody,\n  SummaryListHeader,\n  SummaryListTerm,\n  SummaryListDetail,\n  SummaryListRow,\n} from \"@govtechmy/myds-react/summary-list\";\nexport default function component() {\n\treturn (<SummaryListHeader>Summary Title</SummaryListHeader>\n\t\t    \n\t);\n}"
            ]
        }
    },
    {
        "name": "Alert Dialog",
        "description": "A modal pop-up designed to capture user attention for important actions or messages. It consists of three main components, which are Header, Content, and Footer. These elements together form a flexible and cohesive dialog structure that can accommodate different types of alerts or forms.",
        "docs": {
            "import": "import {\n  AlertDialog,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n  AlertDialogAction,\n  AlertDialogClose,\n} from \"@govtechmy/myds-react/alert-dialog\";",
            "use": "export default () => (\n  <AlertDialog variant=\"default\">\n    <AlertDialogTrigger />\n    <AlertDialogBody>\n      <AlertDialogHeader>\n        <AlertDialogTitle />\n      </AlertDialogHeader>\n      <AlertDialogContent>\n        <AlertDialogDescription />\n      </AlertDialogContent>\n      <AlertDialogFooter>\n        <AlertDialogClose />\n      </AlertDialogFooter>\n    </AlertDialogBody>\n  </AlertDialog>\n);",
            "props": {
                "AlertDialog": {
                    "variant": {
                        "description": "Variant of the alert dialog",
                        "type": "enum",
                        "typeDescription": "default | info | success | warning | danger",
                        "default": "success"
                    },
                    "open": {
                        "description": "State of the alert dialog (controlled)",
                        "type": "boolean",
                        "default": "false"
                    },
                    "defaultOpen": {
                        "description": "Initial state of the alert dialog (uncontrolled)",
                        "type": "boolean",
                        "default": "false"
                    },
                    "onOpenChange": {
                        "description": "Change event listener (controlled)",
                        "type": "(open: boolean) => void"
                    }
                },
                "AlertDialogContent": {
                    "dismissible": {
                        "description": "Whether the alert dialog can be dismissed",
                        "type": "boolean",
                        "default": "true"
                    },
                    "onDismiss": {
                        "description": "Change event listener for dismiss event",
                        "type": "() => void"
                    }
                },
                "AlertDialogAction": {
                    "align": {
                        "description": "Aligns the layout of the content",
                        "type": "start | end | full",
                        "default": "end"
                    },
                    "action": {
                        "description": "Additional action to be added to the footer",
                        "type": "ReactNode"
                    }
                }
            },
            "examples": [
                "import {\n  AlertDialog,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n  AlertDialogAction,\n  AlertDialogClose,\n} from \"@govtechmy/myds-react/alert-dialog\";\nexport default function component() {\n\treturn (// Default\n\t\t <AlertDialog variant=\"default\">\n\t\t    <AlertDialogTrigger>\n\t\t      <Button variant=\"primary-fill\">Default</Button>\n\t\t    </AlertDialogTrigger>\n\t\t  <AlertDialogContent>\n\t\t    <AlertDialogTitle>AlertDialog Title</AlertDialogTitle>\n\t\t    <AlertDialogDescription>AlertDialog content goes here.</AlertDialogDescription>\n\t\t    <AlertDialogAction>\n\t\t      <AlertDialogClose>\n\t\t        <Button variant=\"default-outline\">Secondary Action</Button>\n\t\t      </AlertDialogClose>\n\t\t      <AlertDialogClose>\n\t\t        <Button variant=\"primary-fill\">Primary Action</Button>\n\t\t      </AlertDialogClose>\n\t\t    </AlertDialogAction>\n\t\t  </AlertDialogContent>\n\t\t</AlertDialog>\n\t\t// Info\n\t\t  <AlertDialog variant=\"info\">\n\t\t    <AlertDialogTrigger>\n\t\t      <Button variant=\"primary-fill\">Info</Button>\n\t\t    </AlertDialogTrigger>\n\t\t  <AlertDialogContent>\n\t\t    <AlertDialogTitle>AlertDialog Title</AlertDialogTitle>\n\t\t    <AlertDialogDescription>AlertDialog content goes here.</AlertDialogDescription>\n\t\t    <AlertDialogAction>\n\t\t      <AlertDialogClose>\n\t\t        <Button variant=\"default-outline\">Secondary Action</Button>\n\t\t      </AlertDialogClose>\n\t\t      <AlertDialogClose>\n\t\t        <Button variant=\"primary-fill\">Primary Action</Button>\n\t\t      </AlertDialogClose>\n\t\t    </AlertDialogAction>\n\t\t  </AlertDialogContent>\n\t\t</AlertDialog>\n\t\t\n\t\t// Success\n\t\t  <AlertDialog variant=\"success\">\n\t\t    <AlertDialogTrigger>\n\t\t      <Button variant=\"primary-fill\">Success</Button>\n\t\t    </AlertDialogTrigger>\n\t\t    <AlertDialogContent>\n\t\t      <AlertDialogTitle>AlertDialog Title</AlertDialogTitle>\n\t\t      <AlertDialogDescription>AlertDialog content goes here.</AlertDialogDescription>\n\t\t      <AlertDialogAction>\n\t\t        <AlertDialogClose>\n\t\t          <Button variant=\"default-outline\">Secondary Action</Button>\n\t\t        </AlertDialogClose>\n\t\t        <AlertDialogClose>\n\t\t          <Button variant=\"primary-fill\">Primary Action</Button>\n\t\t        </AlertDialogClose>\n\t\t      </AlertDialogAction>\n\t\t    </AlertDialogContent>\n\t\t  </AlertDialog>\n\t\t\n\t\t  // Warning\n\t\t  <AlertDialog variant=\"warning\">\n\t\t    <AlertDialogTrigger>\n\t\t      <Button variant=\"primary-fill\">Warning</Button>\n\t\t    </AlertDialogTrigger>\n\t\t    <AlertDialogContent>\n\t\t      <AlertDialogTitle>AlertDialog Title</AlertDialogTitle>\n\t\t      <AlertDialogDescription>AlertDialog content goes here.</AlertDialogDescription>\n\t\t\n\t\t      <AlertDialogAction>\n\t\t        <AlertDialogClose>\n\t\t          <Button variant=\"default-outline\">Secondary Action</Button>\n\t\t        </AlertDialogClose>\n\t\t        <AlertDialogClose>\n\t\t          <Button variant=\"primary-fill\">Primary Action</Button>\n\t\t        </AlertDialogClose>\n\t\t      </AlertDialogAction>\n\t\t    </AlertDialogContent>\n\t\t  </AlertDialog>\n\t\t\n\t\t  // Danger\n\t\t  <AlertDialog variant=\"danger\">\n\t\t    <AlertDialogTrigger>\n\t\t      <Button variant=\"primary-fill\">Danger</Button>\n\t\t    </AlertDialogTrigger>\n\t\t    <AlertDialogContent>\n\t\t      <AlertDialogTitle>AlertDialog Title</AlertDialogTitle>\n\t\t      <AlertDialogDescription>AlertDialog content goes here.</AlertDialogDescription>\n\t\t      <AlertDialogAction>\n\t\t        <AlertDialogClose>\n\t\t          <Button variant=\"default-outline\">Secondary Action</Button>\n\t\t        </AlertDialogClose>\n\t\t        <AlertDialogClose>\n\t\t          <Button variant=\"primary-fill\">Primary Action</Button>\n\t\t        </AlertDialogClose>\n\t\t      </AlertDialogAction>\n\t\t    </AlertDialogContent>\n\t\t  </AlertDialog>\n\t);\n}",
                "import {\n  AlertDialog,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n  AlertDialogAction,\n  AlertDialogClose,\n} from \"@govtechmy/myds-react/alert-dialog\";\nexport default function component() {\n\treturn (<AlertDialog variant=\"success\">\n\t\t    <AlertDialogTrigger>\n\t\t        <Button variant=\"primary-fill\">Open AlertDialog 1</Button>\n\t\t    </AlertDialogTrigger>\n\t\t    <AlertDialogTrigger>\n\t\t        <Button variant=\"primary-outline\">Open AlertDialog 2</Button>\n\t\t    </AlertDialogTrigger>\n\t\t    <AlertDialogTrigger>\n\t\t        <Button variant=\"primary-ghost\">Open AlertDialog 3</Button>\n\t\t    </AlertDialogTrigger>\n\t\t    <AlertDialogContent>\n\t\t        <AlertDialogTitle>AlertDialog Title</AlertDialogTitle>\n\t\t        <AlertDialogDescription>AlertDialog content goes here.</AlertDialogDescription>\n\t\t        <AlertDialogAction>\n\t\t        <AlertDialogClose>\n\t\t            <Button variant=\"default-outline\">Secondary Action</Button>\n\t\t        </AlertDialogClose>\n\t\t        <AlertDialogClose>\n\t\t            <Button variant=\"primary-fill\">Primary Action</Button>\n\t\t        </AlertDialogClose>\n\t\t        </AlertDialogAction>\n\t\t    </AlertDialogContent>\n\t\t</AlertDialog>\n\t);\n}",
                "import {\n  AlertDialog,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n  AlertDialogAction,\n  AlertDialogClose,\n} from \"@govtechmy/myds-react/alert-dialog\";\nexport default function component() {\n\treturn (// Uncontrolled state\n\t\t<AlertDialog variant=\"success\" defaultOpen={false}>\n\t\t    <AlertDialogTrigger>\n\t\t        <Button variant=\"primary-fill\">Open Dialog (Uncontrolled)</Button>\n\t\t    </AlertDialogTrigger>\n\t\t    <AlertDialogContent>\n\t\t        <AlertDialogTitle>AlertDialog Title</AlertDialogTitle>\n\t\t        <AlertDialogDescription>AlertDialog content goes here.</AlertDialogDescription>\n\t\t        <AlertDialogAction>\n\t\t        <AlertDialogClose>\n\t\t            <Button variant=\"default-outline\">Secondary Action</Button>\n\t\t        </AlertDialogClose>\n\t\t        <AlertDialogClose>\n\t\t            <Button variant=\"primary-fill\">Primary Action</Button>\n\t\t        </AlertDialogClose>\n\t\t        </AlertDialogAction>\n\t\t    </AlertDialogContent>\n\t\t</AlertDialog>\n\t\t\n\t\t// Controlled state\n\t\t<AlertDialog variant=\"success\" open={false}>\n\t\t    <AlertDialogTrigger>\n\t\t        <Button variant=\"primary-fill\">Open Dialog (Controlled)</Button>\n\t\t    </AlertDialogTrigger>\n\t\t\n\t\t    <AlertDialogContent>\n\t\t        <AlertDialogTitle>AlertDialog Title</AlertDialogTitle>\n\t\t        <AlertDialogDescription>AlertDialog content goes here.</AlertDialogDescription>\n\t\t        <AlertDialogAction>\n\t\t        <AlertDialogClose>\n\t\t            <Button variant=\"default-outline\">Secondary Action</Button>\n\t\t        </AlertDialogClose>\n\t\t        <AlertDialogClose>\n\t\t            <Button variant=\"primary-fill\">Primary Action</Button>\n\t\t        </AlertDialogClose>\n\t\t        </AlertDialogAction>\n\t\t    </AlertDialogContent>\n\t\t</AlertDialog>\n\t);\n}",
                "import {\n  AlertDialog,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n  AlertDialogAction,\n  AlertDialogClose,\n} from \"@govtechmy/myds-react/alert-dialog\";\nexport default function component() {\n\treturn (<AlertDialog variant=\"warning\">\n\t\t  <AlertDialogTrigger>\n\t\t    <Button variant=\"primary-fill\">\n\t\t      Dismissible + onDismiss AlertDialog\n\t\t    </Button>\n\t\t  </AlertDialogTrigger>\n\t\t  <AlertDialogContent\n\t\t    dismissible={true}\n\t\t    onDismiss={() => alert(\"AlertDialog dismissed...\")}\n\t\t  >\n\t\t    <AlertDialogTitle>AlertDialog Title</AlertDialogTitle>\n\t\t    <AlertDialogDescription>\n\t\t      AlertDialog content goes here.\n\t\t    </AlertDialogDescription>\n\t\t\n\t\t    <AlertDialogAction>\n\t\t      <AlertDialogClose>\n\t\t        <Button variant=\"default-outline\">Secondary Action</Button>\n\t\t      </AlertDialogClose>\n\t\t      <AlertDialogClose>\n\t\t        <Button variant=\"primary-fill\">Primary Action</Button>\n\t\t      </AlertDialogClose>\n\t\t    </AlertDialogAction>\n\t\t  </AlertDialogContent>\n\t\t</AlertDialog>\n\t);\n}",
                "import {\n  AlertDialog,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n  AlertDialogAction,\n  AlertDialogClose,\n} from \"@govtechmy/myds-react/alert-dialog\";\nexport default function component() {\n\treturn (// Start\n\t\t <AlertDialog variant=\"danger\">\n\t\t  <AlertDialogTrigger>\n\t\t      <Button variant=\"primary-fill\">Align Alert Dialog (start)</Button>\n\t\t  </AlertDialogTrigger>\n\t\t  <AlertDialogContent>\n\t\t      <AlertDialogTitle>AlertDialog Title</AlertDialogTitle>\n\t\t      <AlertDialogDescription>AlertDialog content goes here.</AlertDialogDescription>\n\t\t      <AlertDialogAction align=\"start\">\n\t\t        <AlertDialogClose>\n\t\t            <Button variant=\"default-outline\">Secondary Action</Button>\n\t\t        </AlertDialogClose>\n\t\t        <AlertDialogClose>\n\t\t            <Button variant=\"primary-fill\">Primary Action</Button>\n\t\t        </AlertDialogClose>\n\t\t      </AlertDialogAction>\n\t\t  </AlertDialogContent>\n\t\t</AlertDialog>\n\t\t\n\t\t// Full\n\t\t\n\t\t<AlertDialog variant=\"danger\">\n\t\t  <AlertDialogTrigger>\n\t\t    <Button variant=\"primary-fill\">Align Alert Dialog (full)</Button>\n\t\t  </AlertDialogTrigger>\n\t\t  <AlertDialogContent>\n\t\t    <AlertDialogTitle>AlertDialog Title</AlertDialogTitle>\n\t\t    <AlertDialogDescription>\n\t\t      AlertDialog content goes here.\n\t\t    </AlertDialogDescription>\n\t\t    <AlertDialogAction align=\"full\">\n\t\t      <AlertDialogClose>\n\t\t        <Button variant=\"default-outline\">Secondary Action</Button>\n\t\t      </AlertDialogClose>\n\t\t      <AlertDialogClose>\n\t\t        <Button variant=\"primary-fill\">Primary Action</Button>\n\t\t      </AlertDialogClose>\n\t\t    </AlertDialogAction>\n\t\t  </AlertDialogContent>\n\t\t</AlertDialog>\n\t\t\n\t\t// End\n\t\t\n\t\t<AlertDialog variant=\"danger\">\n\t\t  <AlertDialogTrigger>\n\t\t    <Button variant=\"primary-fill\">Align Alert Dialog (end)</Button>\n\t\t  </AlertDialogTrigger>\n\t\t  <AlertDialogContent>\n\t\t    <AlertDialogTitle>AlertDialog Title</AlertDialogTitle>\n\t\t    <AlertDialogDescription>\n\t\t      AlertDialog content goes here.\n\t\t    </AlertDialogDescription>\n\t\t    <AlertDialogAction align=\"end\">\n\t\t      <AlertDialogClose>\n\t\t        <Button variant=\"default-outline\">Secondary Action</Button>\n\t\t      </AlertDialogClose>\n\t\t      <AlertDialogClose>\n\t\t        <Button variant=\"primary-fill\">Primary Action</Button>\n\t\t      </AlertDialogClose>\n\t\t    </AlertDialogAction>\n\t\t  </AlertDialogContent>\n\t\t</AlertDialog>\n\t);\n}",
                "import {\n  AlertDialog,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n  AlertDialogAction,\n  AlertDialogClose,\n} from \"@govtechmy/myds-react/alert-dialog\";\nexport default function component() {\n\treturn (<AlertDialog variant=\"danger\">\n\t\t  <AlertDialogTrigger>\n\t\t      <Button variant=\"primary-fill\">Additional Action Alert Dialog</Button>\n\t\t  </AlertDialogTrigger>\n\t\t  <AlertDialogContent>\n\t\t      <AlertDialogTitle>AlertDialog Title</AlertDialogTitle>\n\t\t      <AlertDialogDescription>AlertDialog content goes here.</AlertDialogDescription>\n\t\t      <AlertDialogAction action={<Button variant=\"primary-ghost\">Tertiary</Button>}>\n\t\t        <AlertDialogClose>\n\t\t            <Button variant=\"default-outline\">Secondary Action</Button>\n\t\t        </AlertDialogClose>\n\t\t        <AlertDialogClose>\n\t\t            <Button variant=\"primary-fill\">Primary Action</Button>\n\t\t        </AlertDialogClose>\n\t\t      </AlertDialogAction>\n\t\t  </AlertDialogContent>\n\t\t</AlertDialog>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Data Table",
        "description": "Organizes information into rows and columns for easy readability. It accommodates various data types, including text, numbers, codes, call-to-action and links, enabling efficient presentation and comparison.",
        "docs": {
            "import": "import { DataTable } from \"@govtechmy/myds-react/data-table\";",
            "use": "export default () => <DataTable />;",
            "props": {
                "DataTable": {
                    "columns": {
                        "description": "Column Definition (Refer to TanStack/table documentation)",
                        "type": "ColumnDef"
                    },
                    "data": {
                        "description": "Data to be displayed in the table",
                        "type": "Array<T = {}>"
                    },
                    "nest": {
                        "description": "Specifies which key in the data object contains the nested data",
                        "type": "{ id_by: string }"
                    },
                    "pin": {
                        "description": "Specifies which columns to pin. Column IDs should be passed as an array",
                        "type": "{ left: Array<string>, right: Array<string> }"
                    }
                },
                "DataTable `ColumnDef`": {
                    "id": {
                        "description": "Unique identifier for the column",
                        "type": "string"
                    },
                    "accessorKey": {
                        "description": "Object key to access the data",
                        "type": "string"
                    },
                    "accessorFn": {
                        "description": "Callback function to access the data",
                        "type": "(row) => any"
                    },
                    "header": {
                        "description": "Header of the column",
                        "type": "string | (context) => ReactNode"
                    },
                    "footer": {
                        "description": "Header of the column",
                        "type": "string | (context) => ReactNode"
                    },
                    "size": {
                        "description": "Custom width of the column",
                        "type": "number"
                    },
                    "cell": {
                        "description": "Custom cell renderer",
                        "type": "(context) => ReactNode"
                    },
                    "meta.expandable": {
                        "description": "Expandable column",
                        "type": "boolean"
                    },
                    "meta.sortable": {
                        "description": "Sortable column",
                        "type": "boolean"
                    },
                    "meta.tooltip": {
                        "description": "Tooltip for the column header",
                        "type": "ReactNode"
                    }
                }
            },
            "examples": [
                "import { DataTable } from \"@govtechmy/myds-react/data-table\";\nexport default function component() {\n\treturn (<DataTable\n\t\t  data={[\n\t\t    {\n\t\t      age: 25,\n\t\t      id: 1,\n\t\t      name: \"John Doe\",\n\t\t      position: \"Software Engineer\",\n\t\t    },\n\t\t    {\n\t\t      age: 30,\n\t\t      id: 2,\n\t\t      name: \"Jane Doe\",\n\t\t      position: \"Product Manager\",\n\t\t    },\n\t\t    {\n\t\t      age: 22,\n\t\t      id: 3,\n\t\t      name: \"Alice\",\n\t\t      position: \"Designer\",\n\t\t    },\n\t\t    {\n\t\t      age: 35,\n\t\t      id: 4,\n\t\t      name: \"Bob 'With A Very Long Middle Name' Smith\",\n\t\t      position: \"Software Engineer\",\n\t\t    },\n\t\t    {\n\t\t      age: 28,\n\t\t      id: 5,\n\t\t      name: \"Charlie\",\n\t\t      position: \"Data Scientist\",\n\t\t    },\n\t\t  ]}\n\t\t  columns={[\n\t\t    {\n\t\t      accessorKey: \"name\",\n\t\t      header: \"Name\",\n\t\t      id: \"name\",\n\t\t      meta: {\n\t\t        expandable: true,\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      accessorKey: \"age\",\n\t\t      header: \"Age\",\n\t\t      id: \"age\",\n\t\t      meta: {\n\t\t        expandable: false,\n\t\t        tooltip: \"Age of the employee\",\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      accessorKey: \"position\",\n\t\t      header: \"Position\",\n\t\t      id: \"position\",\n\t\t      meta: {\n\t\t        expandable: true,\n\t\t        sortable: true,\n\t\t        tooltip: \"Position of the employee\",\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      cell: () => {\n\t\t        return (\n\t\t            <Tag variant=\"success\" size={\"small\"} mode=\"pill\">\n\t\t            Success\n\t\t            </Tag>\n\t\t        );\n\t\t      },\n\t\t      header: \"Status\",\n\t\t      id: \"status\",\n\t\t    },\n\t\t    {\n\t\t      cell: () => {\n\t\t        return <Button variant=\"default-outline\">Edit</Button>;\n\t\t      },\n\t\t      header: \"Action\",\n\t\t      id: \"action\",\n\t\t    },\n\t\t  ]}\n\t\t/>\n\t);\n}",
                "import { DataTable } from \"@govtechmy/myds-react/data-table\";\nexport default function component() {\n\treturn (<DataTable\n\t\t  data={[\n\t\t    {\n\t\t      age: 25,\n\t\t      id: 1,\n\t\t      name: \"John Doe\",\n\t\t      position: \"Software Engineer\",\n\t\t    },\n\t\t    {\n\t\t      age: 30,\n\t\t      id: 2,\n\t\t      name: \"Jane Doe\",\n\t\t      position: \"Product Manager\",\n\t\t    },\n\t\t    {\n\t\t      age: 22,\n\t\t      id: 3,\n\t\t      name: \"Alice\",\n\t\t      position: \"Designer\",\n\t\t    },\n\t\t    {\n\t\t      age: 35,\n\t\t      id: 4,\n\t\t      name: \"Bob 'With A Very Long Middle Name' Smith\",\n\t\t      position: \"Software Engineer\",\n\t\t    },\n\t\t    {\n\t\t      age: 28,\n\t\t      id: 5,\n\t\t      name: \"Charlie\",\n\t\t      position: \"Data Scientist\",\n\t\t    },\n\t\t  ]}\n\t\t  columns={[\n\t\t    {\n\t\t      accessorKey: \"name\",\n\t\t      header: \"Name\",\n\t\t      id: \"name\",\n\t\t      meta: {\n\t\t        expandable: true,\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      accessorKey: \"age\",\n\t\t      header: \"Age\",\n\t\t      id: \"age\",\n\t\t      meta: {\n\t\t        expandable: false,\n\t\t        tooltip: \"Age of the employee\",\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      accessorKey: \"position\",\n\t\t      header: \"Position\",\n\t\t      id: \"position\",\n\t\t      meta: {\n\t\t        expandable: true,\n\t\t        sortable: true,\n\t\t        tooltip: \"Position of the employee\",\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      cell: () => {\n\t\t        return (\n\t\t            <Tag variant=\"success\" size={\"small\"} mode=\"pill\">\n\t\t            Success\n\t\t            </Tag>\n\t\t        );\n\t\t      },\n\t\t      header: \"Status\",\n\t\t      id: \"status\",\n\t\t    },\n\t\t    {\n\t\t      cell: () => {\n\t\t        return <Button variant=\"default-outline\">Edit</Button>;\n\t\t      },\n\t\t      header: \"Action\",\n\t\t      id: \"action\",\n\t\t    },\n\t\t  ]}\n\t\t/>\n\t);\n}",
                "import { DataTable } from \"@govtechmy/myds-react/data-table\";\nexport default function component() {\n\treturn (<DataTable\n\t\t  data={[\n\t\t    {\n\t\t      age: 25,\n\t\t      id: 1,\n\t\t      name: \"John Doe\",\n\t\t      position: \"Software Engineer\",\n\t\t    },\n\t\t    {\n\t\t      age: 30,\n\t\t      id: 2,\n\t\t      name: \"Jane Doe\",\n\t\t      position: \"Product Manager\",\n\t\t    },\n\t\t    {\n\t\t      age: 22,\n\t\t      id: 3,\n\t\t      name: \"Alice\",\n\t\t      position: \"Designer\",\n\t\t    },\n\t\t    {\n\t\t      age: 35,\n\t\t      id: 4,\n\t\t      name: \"Bob 'With A Very Long Middle Name' Smith\",\n\t\t      position: \"Software Engineer\",\n\t\t    },\n\t\t    {\n\t\t      age: 28,\n\t\t      id: 5,\n\t\t      name: \"Charlie\",\n\t\t      position: \"Data Scientist\",\n\t\t    },\n\t\t  ]}\n\t\t  columns={[\n\t\t    {\n\t\t      accessorKey: \"name\",\n\t\t      header: \"Name\",\n\t\t      id: \"name\",\n\t\t      meta: {\n\t\t        expandable: true,\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      accessorKey: \"age\",\n\t\t      header: \"Age\",\n\t\t      id: \"age\",\n\t\t      meta: {\n\t\t        expandable: false,\n\t\t        tooltip: \"Age of the employee\",\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      accessorKey: \"position\",\n\t\t      header: \"Position\",\n\t\t      id: \"position\",\n\t\t      meta: {\n\t\t        expandable: true,\n\t\t        sortable: true,\n\t\t        tooltip: \"Position of the employee\",\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      cell: () => {\n\t\t        return (\n\t\t            <Tag variant=\"success\" size={\"small\"} mode=\"pill\">\n\t\t            Success\n\t\t            </Tag>\n\t\t        );\n\t\t      },\n\t\t      header: \"Status\",\n\t\t      id: \"status\",\n\t\t    },\n\t\t    {\n\t\t      cell: () => {\n\t\t        return <Button variant=\"default-outline\">Edit</Button>;\n\t\t      },\n\t\t      header: \"Action\",\n\t\t      id: \"action\",\n\t\t    },\n\t\t  ]}\n\t\t/>\n\t);\n}",
                "import { DataTable } from \"@govtechmy/myds-react/data-table\";\nexport default function component() {\n\treturn (<DataTable\n\t\t  data={[\n\t\t    {\n\t\t      age: 25,\n\t\t      id: 1,\n\t\t      name: \"John Doe\",\n\t\t      position: \"Software Engineer\",\n\t\t    },\n\t\t    {\n\t\t      age: 30,\n\t\t      id: 2,\n\t\t      name: \"Jane Doe\",\n\t\t      position: \"Product Manager\",\n\t\t    },\n\t\t    {\n\t\t      age: 22,\n\t\t      id: 3,\n\t\t      name: \"Alice\",\n\t\t      position: \"Designer\",\n\t\t    },\n\t\t    {\n\t\t      age: 35,\n\t\t      id: 4,\n\t\t      name: \"Bob 'With A Very Long Middle Name' Smith\",\n\t\t      position: \"Software Engineer\",\n\t\t    },\n\t\t    {\n\t\t      age: 28,\n\t\t      id: 5,\n\t\t      name: \"Charlie\",\n\t\t      position: \"Data Scientist\",\n\t\t    },\n\t\t  ]}\n\t\t  columns={[\n\t\t    {\n\t\t      accessorKey: \"name\",\n\t\t      header: \"Name\",\n\t\t      id: \"name\",\n\t\t      meta: {\n\t\t        expandable: true,\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      accessorKey: \"age\",\n\t\t      header: \"Age\",\n\t\t      id: \"age\",\n\t\t      meta: {\n\t\t        expandable: false,\n\t\t        tooltip: \"Age of the employee\",\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      accessorKey: \"position\",\n\t\t      header: \"Position\",\n\t\t      id: \"position\",\n\t\t      meta: {\n\t\t        expandable: true,\n\t\t        sortable: true,\n\t\t        tooltip: \"Position of the employee\",\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      cell: () => {\n\t\t        return (\n\t\t            <Tag variant=\"success\" size={\"small\"} mode=\"pill\">\n\t\t            Success\n\t\t            </Tag>\n\t\t        );\n\t\t      },\n\t\t      header: \"Status\",\n\t\t      id: \"status\",\n\t\t    },\n\t\t    {\n\t\t      cell: () => {\n\t\t        return <Button variant=\"default-outline\">Edit</Button>;\n\t\t      },\n\t\t      header: \"Action\",\n\t\t      id: \"action\",\n\t\t    },\n\t\t  ]}\n\t\t/>\n\t);\n}",
                "import { DataTable } from \"@govtechmy/myds-react/data-table\";\nexport default function component() {\n\treturn (<DataTable\n\t\t  loading\n\t\t  data={[\n\t\t    {\n\t\t      age: 25,\n\t\t      id: 1,\n\t\t      name: \"John Doe\",\n\t\t      position: \"Software Engineer\",\n\t\t    },\n\t\t    {\n\t\t      age: 30,\n\t\t      id: 2,\n\t\t      name: \"Jane Doe\",\n\t\t      position: \"Product Manager\",\n\t\t    },\n\t\t    {\n\t\t      age: 22,\n\t\t      id: 3,\n\t\t      name: \"Alice\",\n\t\t      position: \"Designer\",\n\t\t    },\n\t\t    {\n\t\t      age: 35,\n\t\t      id: 4,\n\t\t      name: \"Bob 'With A Very Long Middle Name' Smith\",\n\t\t      position: \"Software Engineer\",\n\t\t    },\n\t\t    {\n\t\t      age: 28,\n\t\t      id: 5,\n\t\t      name: \"Charlie\",\n\t\t      position: \"Data Scientist\",\n\t\t    },\n\t\t  ]}\n\t\t  columns={[\n\t\t    {\n\t\t      accessorKey: \"name\",\n\t\t      header: \"Name\",\n\t\t      id: \"name\",\n\t\t      meta: {\n\t\t        expandable: true,\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      accessorKey: \"age\",\n\t\t      header: \"Age\",\n\t\t      id: \"age\",\n\t\t      meta: {\n\t\t        expandable: false,\n\t\t        tooltip: \"Age of the employee\",\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      accessorKey: \"position\",\n\t\t      header: \"Position\",\n\t\t      id: \"position\",\n\t\t      meta: {\n\t\t        expandable: true,\n\t\t        sortable: true,\n\t\t        tooltip: \"Position of the employee\",\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      cell: () => {\n\t\t        return (\n\t\t            <Tag variant=\"success\" size={\"small\"} mode=\"pill\">\n\t\t            Success\n\t\t            </Tag>\n\t\t        );\n\t\t      },\n\t\t      header: \"Status\",\n\t\t      id: \"status\",\n\t\t    },\n\t\t    {\n\t\t      cell: () => {\n\t\t        return <Button variant=\"default-outline\">Edit</Button>;\n\t\t      },\n\t\t      header: \"Action\",\n\t\t      id: \"action\",\n\t\t    },\n\t\t  ]}\n\t\t/>\n\t);\n}",
                "import { DataTable } from \"@govtechmy/myds-react/data-table\";\nexport default function component() {\n\treturn (<DataTable\n\t\t  data={[]}\n\t\t  columns={[\n\t\t    {\n\t\t      accessorKey: \"name\",\n\t\t      header: \"Name\",\n\t\t      id: \"name\",\n\t\t      meta: {\n\t\t        expandable: true,\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      accessorKey: \"age\",\n\t\t      header: \"Age\",\n\t\t      id: \"age\",\n\t\t      meta: {\n\t\t        expandable: false,\n\t\t        tooltip: \"Age of the employee\",\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      accessorKey: \"position\",\n\t\t      header: \"Position\",\n\t\t      id: \"position\",\n\t\t      meta: {\n\t\t        expandable: true,\n\t\t        sortable: true,\n\t\t        tooltip: \"Position of the employee\",\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      cell: () => {\n\t\t        return (\n\t\t            <Tag variant=\"success\" size={\"small\"} mode=\"pill\">\n\t\t            Success\n\t\t            </Tag>\n\t\t        );\n\t\t      },\n\t\t      header: \"Status\",\n\t\t      id: \"status\",\n\t\t    },\n\t\t    {\n\t\t      cell: () => {\n\t\t        return <Button variant=\"default-outline\">Edit</Button>;\n\t\t      },\n\t\t      header: \"Action\",\n\t\t      id: \"action\",\n\t\t    },\n\t\t  ]}\n\t\t/>\n\t);\n}",
                "import { DataTable } from \"@govtechmy/myds-react/data-table\";\nexport default function component() {\n\treturn (// Checkbox Selection\n\t\t<DataTable\n\t\t  data={[\n\t\t    {\n\t\t      age: 25,\n\t\t      id: 1,\n\t\t      name: \"John Doe\",\n\t\t      position: \"Software Engineer\",\n\t\t    },\n\t\t    {\n\t\t      age: 30,\n\t\t      id: 2,\n\t\t      name: \"Jane Doe\",\n\t\t      position: \"Product Manager\",\n\t\t    },\n\t\t    {\n\t\t      age: 22,\n\t\t      id: 3,\n\t\t      name: \"Alice\",\n\t\t      position: \"Designer\",\n\t\t    },\n\t\t    {\n\t\t      age: 35,\n\t\t      id: 4,\n\t\t      name: \"Bob 'With A Very Long Middle Name' Smith\",\n\t\t      position: \"Software Engineer\",\n\t\t    },\n\t\t    {\n\t\t      age: 28,\n\t\t      id: 5,\n\t\t      name: \"Charlie\",\n\t\t      position: \"Data Scientist\",\n\t\t    },\n\t\t  ]}\n\t\t  columns={[\n\t\t    {\n\t\t      accessorKey: \"name\",\n\t\t      header: \"Name\",\n\t\t      id: \"name\",\n\t\t      meta: {\n\t\t        expandable: true,\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      accessorKey: \"age\",\n\t\t      header: \"Age\",\n\t\t      id: \"age\",\n\t\t      meta: {\n\t\t        expandable: false,\n\t\t        tooltip: \"Age of the employee\",\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      accessorKey: \"position\",\n\t\t      header: \"Position\",\n\t\t      id: \"position\",\n\t\t      meta: {\n\t\t        expandable: true,\n\t\t        sortable: true,\n\t\t        tooltip: \"Position of the employee\",\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      cell: () => {\n\t\t        return (\n\t\t            <Tag variant=\"success\" size={\"small\"} mode=\"pill\">\n\t\t            Success\n\t\t            </Tag>\n\t\t        );\n\t\t      },\n\t\t      header: \"Status\",\n\t\t      id: \"status\",\n\t\t    },\n\t\t    {\n\t\t      cell: () => {\n\t\t        return <Button variant=\"default-outline\">Edit</Button>;\n\t\t      },\n\t\t      header: \"Action\",\n\t\t      id: \"action\",\n\t\t    },\n\t\t  ]}\n\t\t  selection={\n\t\t    {\n\t\t      mode: \"checkbox\",\n\t\t      onSelectionChange: (id: string) => {\n\t\t        console.log(\"Selected Rows: \", id);\n\t\t      },\n\t\t      rowId: \"id\",\n\t\t    }\n\t\t  }\n\t\t/>\n\t\t\n\t\t// Radio Selection\n\t\t<DataTable\n\t\t  data={[\n\t\t    {\n\t\t      age: 25,\n\t\t      id: 1,\n\t\t      name: \"John Doe\",\n\t\t      position: \"Software Engineer\",\n\t\t    },\n\t\t    {\n\t\t      age: 30,\n\t\t      id: 2,\n\t\t      name: \"Jane Doe\",\n\t\t      position: \"Product Manager\",\n\t\t    },\n\t\t    {\n\t\t      age: 22,\n\t\t      id: 3,\n\t\t      name: \"Alice\",\n\t\t      position: \"Designer\",\n\t\t    },\n\t\t    {\n\t\t      age: 35,\n\t\t      id: 4,\n\t\t      name: \"Bob 'With A Very Long Middle Name' Smith\",\n\t\t      position: \"Software Engineer\",\n\t\t    },\n\t\t    {\n\t\t      age: 28,\n\t\t      id: 5,\n\t\t      name: \"Charlie\",\n\t\t      position: \"Data Scientist\",\n\t\t    },\n\t\t  ]}\n\t\t  columns={[\n\t\t    {\n\t\t      accessorKey: \"name\",\n\t\t      header: \"Name\",\n\t\t      id: \"name\",\n\t\t      meta: {\n\t\t        expandable: true,\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      accessorKey: \"age\",\n\t\t      header: \"Age\",\n\t\t      id: \"age\",\n\t\t      meta: {\n\t\t        expandable: false,\n\t\t        tooltip: \"Age of the employee\",\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      accessorKey: \"position\",\n\t\t      header: \"Position\",\n\t\t      id: \"position\",\n\t\t      meta: {\n\t\t        expandable: true,\n\t\t        sortable: true,\n\t\t        tooltip: \"Position of the employee\",\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      cell: () => {\n\t\t        return (\n\t\t            <Tag variant=\"success\" size={\"small\"} mode=\"pill\">\n\t\t            Success\n\t\t            </Tag>\n\t\t        );\n\t\t      },\n\t\t      header: \"Status\",\n\t\t      id: \"status\",\n\t\t    },\n\t\t    {\n\t\t      cell: () => {\n\t\t        return <Button variant=\"default-outline\">Edit</Button>;\n\t\t      },\n\t\t      header: \"Action\",\n\t\t      id: \"action\",\n\t\t    },\n\t\t  ]}\n\t\t  selection={\n\t\t    {\n\t\t      mode: \"radio\",\n\t\t      onSelectionChange: (id: string) => {\n\t\t        console.log(\"Selected Rows: \", id);\n\t\t      },\n\t\t      rowId: \"id\",\n\t\t    }\n\t\t  }\n\t\t/>\n\t);\n}",
                "import { DataTable } from \"@govtechmy/myds-react/data-table\";\nexport default function component() {\n\treturn (<DataTable\n\t\t  data={[\n\t\t    {\n\t\t      age: 25,\n\t\t      id: 1,\n\t\t      name: \"John Doe\",\n\t\t      position: \"Software Engineer\",\n\t\t    },\n\t\t    {\n\t\t      age: 30,\n\t\t      id: 2,\n\t\t      name: \"Jane Doe\",\n\t\t      position: \"Product Manager\",\n\t\t    },\n\t\t    {\n\t\t      age: 22,\n\t\t      id: 3,\n\t\t      name: \"Alice\",\n\t\t      position: \"Designer\",\n\t\t    },\n\t\t    {\n\t\t      age: 35,\n\t\t      id: 4,\n\t\t      name: \"Bob 'With A Very Long Middle Name' Smith\",\n\t\t      position: \"Software Engineer\",\n\t\t    },\n\t\t    {\n\t\t      age: 28,\n\t\t      id: 5,\n\t\t      name: \"Charlie\",\n\t\t      position: \"Data Scientist\",\n\t\t    },\n\t\t  ]}\n\t\t  columns={[\n\t\t    {\n\t\t      id: \"employee\",\n\t\t      header: \"Employee\",\n\t\t      columns: [\n\t\t        {\n\t\t          id: \"name\",\n\t\t          header: \"Name\",\n\t\t          accessorKey: \"name\",\n\t\t          size: 180,\n\t\t          meta: {\n\t\t            expandable: true,\n\t\t          },\n\t\t        },\n\t\t        {\n\t\t          id: \"age\",\n\t\t          header: \"Age\",\n\t\t          accessorKey: \"age\",\n\t\t\n\t\t          meta: {\n\t\t            expandable: false,\n\t\t          },\n\t\t        },\n\t\t        {\n\t\t          id: \"position\",\n\t\t          header: \"Position\",\n\t\t          accessorKey: \"position\",\n\t\t          meta: {\n\t\t            expandable: true,\n\t\t          },\n\t\t        },\n\t\t      ],\n\t\t    },\n\t\t    {\n\t\t      id: \"status\",\n\t\t      header: \"Application\",\n\t\t      columns: [\n\t\t        {\n\t\t          id: \"status\",\n\t\t          header: \"Status\",\n\t\t          cell: () => {\n\t\t            return (\n\t\t              <Tag variant=\"success\" size={\"small\"} mode=\"pill\">\n\t\t                Success\n\t\t              </Tag>\n\t\t            );\n\t\t          },\n\t\t        },\n\t\t        {\n\t\t          id: \"action\",\n\t\t          header: \"Action\",\n\t\t          cell: () => {\n\t\t            return <Button variant=\"default-outline\">Edit</Button>;\n\t\t          },\n\t\t        },\n\t\t      ],\n\t\t    }\n\t\t  ]\n\t\t  }\n\t\t/>\n\t);\n}",
                "import { DataTable } from \"@govtechmy/myds-react/data-table\";\nexport default function component() {\n\treturn (<DataTable\n\t\t  className=\"max-h-[300px]\"\n\t\t  data={[\n\t\t    {\n\t\t      age: 25,\n\t\t      id: 1,\n\t\t      name: \"John Doe\",\n\t\t      position: \"Software Engineer\",\n\t\t    },\n\t\t    {\n\t\t      age: 30,\n\t\t      id: 2,\n\t\t      name: \"Jane Doe\",\n\t\t      position: \"Product Manager\",\n\t\t    },\n\t\t    {\n\t\t      age: 22,\n\t\t      id: 3,\n\t\t      name: \"Alice\",\n\t\t      position: \"Designer\",\n\t\t    },\n\t\t    {\n\t\t      age: 35,\n\t\t      id: 4,\n\t\t      name: \"Bob 'With A Very Long Middle Name' Smith\",\n\t\t      position: \"Software Engineer\",\n\t\t    },\n\t\t    {\n\t\t      age: 28,\n\t\t      id: 5,\n\t\t      name: \"Charlie\",\n\t\t      position: \"Data Scientist\",\n\t\t    },\n\t\t  ]}\n\t\t  columns={[\n\t\t    {\n\t\t      id: \"employee\",\n\t\t      header: \"Employee\",\n\t\t      columns: [\n\t\t        {\n\t\t          id: \"name\",\n\t\t          header: \"Name\",\n\t\t          accessorKey: \"name\",\n\t\t          size: 180,\n\t\t          meta: {\n\t\t            expandable: true,\n\t\t          },\n\t\t        },\n\t\t        {\n\t\t          id: \"age\",\n\t\t          header: \"Age\",\n\t\t          accessorKey: \"age\",\n\t\t\n\t\t          meta: {\n\t\t            expandable: false,\n\t\t          },\n\t\t        },\n\t\t        {\n\t\t          id: \"position\",\n\t\t          header: \"Position\",\n\t\t          accessorKey: \"position\",\n\t\t          meta: {\n\t\t            expandable: true,\n\t\t          },\n\t\t        },\n\t\t      ],\n\t\t    },\n\t\t    {\n\t\t      id: \"status\",\n\t\t      header: \"Application\",\n\t\t      columns: [\n\t\t        {\n\t\t          id: \"status\",\n\t\t          header: \"Status\",\n\t\t          cell: () => {\n\t\t            return (\n\t\t              <Tag variant=\"success\" size={\"small\"} mode=\"pill\">\n\t\t                Success\n\t\t              </Tag>\n\t\t            );\n\t\t          },\n\t\t        },\n\t\t        {\n\t\t          id: \"action\",\n\t\t          header: \"Action\",\n\t\t          cell: () => {\n\t\t            return <Button variant=\"default-outline\">Edit</Button>;\n\t\t          },\n\t\t        },\n\t\t      ],\n\t\t    }\n\t\t  ]\n\t\t  }\n\t\t/>\n\t);\n}",
                "import { DataTable } from \"@govtechmy/myds-react/data-table\";\nexport default function component() {\n\treturn (<DataTable\n\t\t  data={[\n\t\t    {\n\t\t      id: 1,\n\t\t      name: \"John Doe\",\n\t\t      age: 25,\n\t\t      position: \"Software Engineer\",\n\t\t      children: [\n\t\t        {\n\t\t          id: 11,\n\t\t          name: \"John Doe Jr.\",\n\t\t          age: 5,\n\t\t          position: \"Software Engineer\",\n\t\t          children: [\n\t\t            {\n\t\t              id: 111,\n\t\t              name: \"John Doe-raemon\",\n\t\t              age: 5,\n\t\t              position: \"Software Engineer\",\n\t\t            },\n\t\t            {\n\t\t              id: 112,\n\t\t              name: \"John 'Penat' Doe\",\n\t\t              age: 5,\n\t\t              position: \"Software Engineer\",\n\t\t            },\n\t\t          ],\n\t\t        },\n\t\t        {\n\t\t          id: 12,\n\t\t          name: \"John Doe Jr.\",\n\t\t          age: 5,\n\t\t          position: \"Software Engineer\",\n\t\t        },\n\t\t      ],\n\t\t    },\n\t\t    {\n\t\t      id: 2,\n\t\t      name: \"Jane Doe\",\n\t\t      age: 30,\n\t\t      position: \"Product Manager\",\n\t\t      children: [\n\t\t        {\n\t\t          id: 21,\n\t\t          name: \"Jane Doe Jr. 1\",\n\t\t          age: 5,\n\t\t          position: \"Software Engineer\",\n\t\t        },\n\t\t        {\n\t\t          id: 22,\n\t\t          name: \"Jane Doe Jr. 2\",\n\t\t          age: 5,\n\t\t          position: \"Software Engineer\",\n\t\t        },\n\t\t      ],\n\t\t    },\n\t\t    {\n\t\t      id: 3,\n\t\t      name: \"Alice\",\n\t\t      age: 22,\n\t\t      position: \"Designer\",\n\t\t      children: [\n\t\t        {\n\t\t          id: 31,\n\t\t          name: \"Alice Jr. 1\",\n\t\t          age: 5,\n\t\t          position: \"Software Engineer\",\n\t\t        },\n\t\t        {\n\t\t          id: 32,\n\t\t          name: \"Alice Jr. 2\",\n\t\t          age: 5,\n\t\t          position: \"Software Engineer\",\n\t\t        },\n\t\t      ],\n\t\t    },\n\t\t    {\n\t\t      id: 4,\n\t\t      name: \"Bob\",\n\t\t      age: 35,\n\t\t      position: \"Software Engineer\",\n\t\t      children: [\n\t\t        {\n\t\t          id: 41,\n\t\t          name: \"Bob Jr. 1\",\n\t\t          age: 5,\n\t\t          position: \"Software Engineer\",\n\t\t        },\n\t\t        {\n\t\t          id: 42,\n\t\t          name: \"Bob Jr. 2\",\n\t\t          age: 5,\n\t\t          position: \"Software Engineer\",\n\t\t        },\n\t\t      ],\n\t\t    },\n\t\t    {\n\t\t      id: 5,\n\t\t      name: \"Charlie\",\n\t\t      age: 28,\n\t\t      position: \"Data Scientist\",\n\t\t      children: [\n\t\t        {\n\t\t          id: 51,\n\t\t          name: \"Charlie Jr. 1\",\n\t\t          age: 5,\n\t\t          position: \"Software Engineer\",\n\t\t        },\n\t\t        {\n\t\t          id: 52,\n\t\t          name: \"Charlie Jr. 2\",\n\t\t          age: 5,\n\t\t          position: \"Software Engineer\",\n\t\t        },\n\t\t      ],\n\t\t    },\n\t\t  ]}\n\t\t  columns={[\n\t\t    {\n\t\t      accessorKey: \"name\",\n\t\t      header: \"Name\",\n\t\t      id: \"name\",\n\t\t      meta: {\n\t\t        expandable: true,\n\t\t      },\n\t\t      cell: Cell.Expand\n\t\t    },\n\t\t    {\n\t\t      accessorKey: \"age\",\n\t\t      header: \"Age\",\n\t\t      id: \"age\",\n\t\t      meta: {\n\t\t        expandable: false,\n\t\t        tooltip: \"Age of the employee\",\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      accessorKey: \"position\",\n\t\t      header: \"Position\",\n\t\t      id: \"position\",\n\t\t      meta: {\n\t\t        expandable: true,\n\t\t        sortable: true,\n\t\t        tooltip: \"Position of the employee\",\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      cell: () => {\n\t\t        return (\n\t\t            <Tag variant=\"success\" size={\"small\"} mode=\"pill\">\n\t\t            Success\n\t\t            </Tag>\n\t\t        );\n\t\t      },\n\t\t      header: \"Status\",\n\t\t      id: \"status\",\n\t\t    },\n\t\t    {\n\t\t      cell: () => {\n\t\t        return <Button variant=\"default-outline\">Edit</Button>;\n\t\t      },\n\t\t      header: \"Action\",\n\t\t      id: \"action\",\n\t\t    }\n\t\t  ]}\n\t\t  nest={{ id_by: \"children\" }}\n\t\t/>\n\t);\n}",
                "import { DataTable } from \"@govtechmy/myds-react/data-table\";\nexport default function component() {\n\treturn (<DataTable\n\t\t  data={[\n\t\t    {\n\t\t      age: 25,\n\t\t      id: 1,\n\t\t      name: \"John Doe\",\n\t\t      position: \"Software Engineer\",\n\t\t    },\n\t\t    {\n\t\t      age: 30,\n\t\t      id: 2,\n\t\t      name: \"Jane Doe\",\n\t\t      position: \"Product Manager\",\n\t\t    },\n\t\t    {\n\t\t      age: 22,\n\t\t      id: 3,\n\t\t      name: \"Alice\",\n\t\t      position: \"Designer\",\n\t\t    },\n\t\t    {\n\t\t      age: 35,\n\t\t      id: 4,\n\t\t      name: \"Bob 'With A Very Long Middle Name' Smith\",\n\t\t      position: \"Software Engineer\",\n\t\t    },\n\t\t    {\n\t\t      age: 28,\n\t\t      id: 5,\n\t\t      name: \"Charlie\",\n\t\t      position: \"Data Scientist\",\n\t\t    },\n\t\t  ]}\n\t\t  columns={[\n\t\t    {\n\t\t      accessorKey: \"name\",\n\t\t      header: \"Name\",\n\t\t      id: \"name\",\n\t\t      meta: {\n\t\t        expandable: true,\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      accessorKey: \"age\",\n\t\t      header: \"Age\",\n\t\t      id: \"age\",\n\t\t      meta: {\n\t\t        expandable: false,\n\t\t        tooltip: \"Age of the employee\",\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      accessorKey: \"position\",\n\t\t      header: \"Position\",\n\t\t      id: \"position\",\n\t\t      meta: {\n\t\t        expandable: true,\n\t\t        sortable: true,\n\t\t        tooltip: \"Position of the employee\",\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      cell: () => {\n\t\t        return (\n\t\t            <Tag variant=\"success\" size={\"small\"} mode=\"pill\">\n\t\t            Success\n\t\t            </Tag>\n\t\t        );\n\t\t      },\n\t\t      header: \"Status\",\n\t\t      id: \"status\",\n\t\t    },\n\t\t    {\n\t\t      cell: () => {\n\t\t        return <Button variant=\"default-outline\">Edit</Button>;\n\t\t      },\n\t\t      header: \"Action\",\n\t\t      id: \"action\",\n\t\t    },\n\t\t  ]}\n\t\t  pin={{ left: [\"name\"], right: [\"action\"]}}\n\t\t/>\n\t);\n}",
                "import { DataTable } from \"@govtechmy/myds-react/data-table\";\nexport default function component() {\n\treturn (<DataTable\n\t\t  data={[\n\t\t    {\n\t\t      age: 25,\n\t\t      id: 1,\n\t\t      name: \"John Doe\",\n\t\t      position: \"Software Engineer\",\n\t\t    },\n\t\t    {\n\t\t      age: 30,\n\t\t      id: 2,\n\t\t      name: \"Jane Doe\",\n\t\t      position: \"Product Manager\",\n\t\t    },\n\t\t    {\n\t\t      age: 22,\n\t\t      id: 3,\n\t\t      name: \"Alice\",\n\t\t      position: \"Designer\",\n\t\t    },\n\t\t    {\n\t\t      age: 35,\n\t\t      id: 4,\n\t\t      name: \"Bob 'With A Very Long Middle Name' Smith\",\n\t\t      position: \"Software Engineer\",\n\t\t    },\n\t\t    {\n\t\t      age: 28,\n\t\t      id: 5,\n\t\t      name: \"Charlie\",\n\t\t      position: \"Data Scientist\",\n\t\t    },\n\t\t  ]}\n\t\t  columns={[\n\t\t    {\n\t\t      accessorKey: \"name\",\n\t\t      header: \"Name\",\n\t\t      id: \"name\",\n\t\t      meta: {\n\t\t        expandable: true,\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      accessorKey: \"age\",\n\t\t      header: \"Age\",\n\t\t      id: \"age\",\n\t\t      meta: {\n\t\t        expandable: false,\n\t\t        tooltip: \"Age of the employee\",\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      accessorKey: \"position\",\n\t\t      header: \"Position\",\n\t\t      id: \"position\",\n\t\t      meta: {\n\t\t        expandable: true,\n\t\t        sortable: true,\n\t\t        tooltip: \"Position of the employee\",\n\t\t      },\n\t\t    },\n\t\t    {\n\t\t      cell: () => {\n\t\t        return (\n\t\t            <Tag variant=\"success\" size={\"small\"} mode=\"pill\">\n\t\t            Success\n\t\t            </Tag>\n\t\t        );\n\t\t      },\n\t\t      header: \"Status\",\n\t\t      id: \"status\",\n\t\t    },\n\t\t    {\n\t\t      cell: () => {\n\t\t        return <Button variant=\"default-outline\">Edit</Button>;\n\t\t      },\n\t\t      header: \"Action\",\n\t\t      id: \"action\",\n\t\t    },\n\t\t  ]}\n\t\t  pin={{ left: [\"name\"], right: [\"action\"]}}\n\t\t/>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Link",
        "description": "This component extends the <a> HTML element (or anchor element) and is used to display hyperlinks.",
        "docs": {
            "import": "import { Link } from \"@govtechmy/myds-react/link\";",
            "use": "export default () => (\n  <Link href=\"/\" primary>\n    {/* The link's destination should be indicated here. */}\n    Malaysia's Official Design System\n  </Link>\n);",
            "props": {
                "Link": {
                    "asChild": {
                        "description": "Renders the child element instead of the default element, while preserving the component's props and functionality.",
                        "type": "boolean"
                    },
                    "href": {
                        "description": "The URL that the hyperlink points to.",
                        "type": "string"
                    },
                    "newTab": {
                        "description": "Controls whether the link opens in a new tab.",
                        "type": "boolean",
                        "default": "false"
                    },
                    "primary": {
                        "description": "Sets the text colour to primary or inherit it from parent.",
                        "type": "boolean",
                        "default": "false"
                    },
                    "underline": {
                        "description": "Controls when the link should have an underline.",
                        "type": "enum",
                        "typeDescription": "always | hover | none",
                        "default": "always"
                    }
                }
            },
            "examples": [
                "import { Link } from \"@govtechmy/myds-react/link\";\nexport default function component() {\n\treturn (import { Link } from \"@govtechmy/myds-react/link\";\n\t\timport NextLink from \"next/link\";\n\t\t\n\t\t<Link asChild>\n\t\t  <NextLink href=\"#\">Custom Link</NextLink>\n\t\t</Link>\n\t);\n}",
                "import { Link } from \"@govtechmy/myds-react/link\";\nexport default function component() {\n\treturn (import { Link as LinkPrimitive } from \"@govtechmy/myds-react/link\";\n\t\timport NextLink from \"next/link\";\n\t\t\n\t\texport const Link = (props) => (\n\t\t  <LinkPrimitive asChild>\n\t\t    <NextLink {...props} />\n\t\t  </LinkPrimitive>\n\t\t);\n\t);\n}",
                "import { Link } from \"@govtechmy/myds-react/link\";\nexport default function component() {\n\treturn (import { Link } from \"@govtechmy/myds-react/link\";\n\t\t\n\t\t<Link href=\"https://digital.gov.my\" newTab>Ministry of Digital</Link>\n\t);\n}",
                "import { Link } from \"@govtechmy/myds-react/link\";\nexport default function component() {\n\treturn (import { Link } from \"@govtechmy/myds-react/link\";\n\t\t\n\t\t<Link href=\"#\" primary>Primary</Link>\n\t\t<Link href=\"#\">Inherit from parent</Link>\n\t);\n}",
                "import { Link } from \"@govtechmy/myds-react/link\";\nexport default function component() {\n\treturn (import { Link } from \"@govtechmy/myds-react/link\";\n\t\t\n\t\t<Link href=\"#underline\" underline=\"always\">Always</Link>\n\t\t<Link href=\"#underline\" underline=\"hover\">Hover</Link>\n\t\t<Link href=\"#underline\" underline=\"none\">None</Link>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Navbar",
        "description": "The Navbar component establishes a clear navigation menu for users to browse the site.",
        "docs": {
            "import": "import {\n  Navbar,\n  NavbarLogo,\n  NavbarMenu,\n  NavbarMenuItem,\n  NavbarMenuDropdown,\n  NavbarAction,\n} from \"@govtechmy/myds-react/navbar\";",
            "use": "export default () => {\n  return (\n    <Navbar>\n      <NavbarLogo />\n      <NavbarMenu>\n        <NavbarMenuItem />\n        <NavbarMenuDropdown>\n          <NavbarMenuItem />\n        </NavbarMenuDropdown>\n      </NavbarMenu>\n      <NavbarActionGroup />\n    </Navbar>\n  );\n};",
            "props": {
                "Navbar": {
                    "children": {
                        "description": "Content to be rendered inside the Navbar.",
                        "type": "ReactNode"
                    },
                    "className": {
                        "description": "Additional styles for the Navbar.",
                        "type": "string"
                    }
                },
                "NavbarLogo": {
                    "children": {
                        "description": "Title of the Navbar logo.",
                        "type": "ReactNode"
                    },
                    "href": {
                        "description": "URL to navigate to when the logo is clicked.",
                        "type": "string",
                        "defaultValue": "/"
                    },
                    "src": {
                        "description": "Image URL for the Navbar logo.",
                        "type": "string"
                    },
                    "alt": {
                        "description": "Alternative text for the Navbar logo.",
                        "type": "string"
                    }
                },
                "NavbarMenu": {
                    "children": {
                        "description": "Content to be rendered inside the NavbarMenu.",
                        "type": "string"
                    }
                },
                "NavbarMenuItem": {
                    "children": {
                        "description": "Menu item content.",
                        "type": "ReactNode"
                    },
                    "href": {
                        "description": "URL for the navigation item.",
                        "type": "string"
                    },
                    "className": {
                        "description": "Additional styles for the navigation item.",
                        "type": "string"
                    }
                },
                "NavbarMenuDropdown": {
                    "children": {
                        "description": "Content to be rendered inside the NavbarMenuDropdown.",
                        "type": "ReactNode"
                    },
                    "title": {
                        "description": "Dropdown title text.",
                        "type": "string"
                    },
                    "className": {
                        "description": "Additional styles for the dropdown content.",
                        "type": "boolean",
                        "defaultValue": "false"
                    }
                },
                "NavbarAction": {
                    "children": {
                        "description": "Content to be rendered inside the NavbarAction.",
                        "type": "ReactNode"
                    }
                }
            },
            "examples": [
                "import {\n  Navbar,\n  NavbarLogo,\n  NavbarMenu,\n  NavbarMenuItem,\n  NavbarMenuDropdown,\n  NavbarAction,\n} from \"@govtechmy/myds-react/navbar\";\nexport default function component() {\n\treturn (<NavbarLogo\n\t\t  src=\"https://d2391uizq0pg2.cloudfront.net/common/logo.svg\"\n\t\t  alt=\"Malaysian Government Design System\"\n\t\t>\n\t\t  MYDS\n\t\t</NavbarLogo>\n\t);\n}",
                "import {\n  Navbar,\n  NavbarLogo,\n  NavbarMenu,\n  NavbarMenuItem,\n  NavbarMenuDropdown,\n  NavbarAction,\n} from \"@govtechmy/myds-react/navbar\";\nexport default function component() {\n\treturn (<Navbar>\n\t\t  <NavbarMenu>\n\t\t    <NavbarMenuItem href=\"/menu1\">Menu 1</NavbarMenuItem>\n\t\t    <NavbarMenuItem href=\"/menu2\">Menu 2</NavbarMenuItem>\n\t\t    <NavbarMenuDropdown title=\"Menu Dropdown\">\n\t\t      <NavbarMenuItem href=\"/submenu1\">Submenu 1</NavbarMenuItem>\n\t\t      <NavbarMenuItem href=\"/submenu2\">Submenu 2</NavbarMenuItem>\n\t\t      <NavbarMenuItem href=\"/submenu3\">Submenu 3</NavbarMenuItem>\n\t\t      <NavbarMenuItem href=\"/submenu1\">Submenu 4</NavbarMenuItem>\n\t\t    </NavbarMenuDropdown>\n\t\t    <NavbarMenuItem href=\"/menu3\">Menu 3</NavbarMenuItem>\n\t\t  </NavbarMenu>\n\t\t</Navbar>\n\t);\n}",
                "import {\n  Navbar,\n  NavbarLogo,\n  NavbarMenu,\n  NavbarMenuItem,\n  NavbarMenuDropdown,\n  NavbarAction,\n} from \"@govtechmy/myds-react/navbar\";\nexport default function component() {\n\treturn (<NavbarAction>\n\t\t  {/* Button Search  : mobile hide if needed  */}\n\t\t  <Button\n\t\t    variant=\"default-ghost\"\n\t\t    iconOnly\n\t\t    aria-label=\"search-button\"\n\t\t    size={\"small\"}\n\t\t  >\n\t\t    <ButtonIcon>\n\t\t      <SearchIcon />\n\t\t    </ButtonIcon>\n\t\t  </Button>\n\t\t\n\t\t  {/* Button Light Mode Toggle  : mobile hide if needed  */}\n\t\t  <ThemeSwitch as=\"toggle\" />\n\t\t\n\t\t  {/* Select Language Toggle  : mobile hide if needed  */}\n\t\t  <div className=\"hidden sm:block\">\n\t\t    <Select defaultValue=\"EN\" variant=\"outline\" size=\"small\">\n\t\t      <SelectTrigger aria-label=\"language-selection\">\n\t\t        <GlobeIcon className=\"h-4 w-4\"></GlobeIcon>\n\t\t        <SelectValue />\n\t\t      </SelectTrigger>\n\t\t      <SelectContent align=\"end\" className=\"font-body rounded-[4px] py-1\">\n\t\t        <SelectItem value=\"EN\">EN</SelectItem>\n\t\t        <SelectItem value=\"BM\">BM</SelectItem>\n\t\t      </SelectContent>\n\t\t    </Select>\n\t\t  </div>\n\t\t</NavbarAction>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Text Area",
        "description": "This component is a multi-line text input component designed for longer form content. Unlike the Input component which is limited to a single line, it expands vertically to accommodate multiple lines of text.",
        "docs": {
            "import": "import { TextArea } from \"@govtechmy/myds-react/textarea\";",
            "use": "export default () => (\n  <TextArea\n    placeholder=\"Placeholder text displayed when the text area is empty.\"\n    size={\"small\"}\n    disabled={false}\n  />\n);",
            "props": {
                "TextArea": {
                    "size": {
                        "description": "Sizes of the TextArea",
                        "type": "enum",
                        "typeDescription": "small | medium | large",
                        "default": "medium"
                    },
                    "disabled": {
                        "description": "Makes the TextArea non-interactive and visually indicates it's disabled.",
                        "type": "boolean",
                        "typeDescription": "true | false ",
                        "default": "false"
                    },
                    "placeholder": {
                        "description": "Displays placeholder text when the input field is empty.",
                        "type": "string",
                        "typeDescription": "-",
                        "default": "-"
                    }
                }
            },
            "examples": [
                "import { TextArea } from \"@govtechmy/myds-react/textarea\";\nexport default function component() {\n\treturn (import { TextArea } from \"@govtechmy/myds-react/textarea\";\n\t\t\n\t\t/\\*_ Size props_/\n\t\t\n\t\t<TextArea size=\"small\" placeholder=\"Enter your text for your small TextArea.\"/>\n\t\t<TextArea size=\"medium\" placeholder=\"Enter your text for your medium TextArea.\"/>\n\t\t<TextArea size=\"large\"placeholder=\"Enter your text for your large TextArea.\" />\n\t);\n}",
                "import { TextArea } from \"@govtechmy/myds-react/textarea\";\nexport default function component() {\n\treturn (import { TextArea } from \"@govtechmy/myds-react/textarea\";\n\t\t\n\t\t/\\*_ Size props_/\n\t\t\n\t\t<TextArea size=\"small\" placeholder=\"The TextArea has been disabled.\" disabled/>\n\t\t<TextArea size=\"medium\" placeholder=\"The TextArea has been disabled.\" disabled/>\n\t\t<TextArea size=\"large\" placeholder=\"The TextArea has been disabled.\" disabled/>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Date Picker",
        "description": "Allows users to select a date from an interactive calendar.",
        "docs": {
            "import": "import { DatePicker } from \"@govtechmy/myds-react/date-picker\";",
            "use": "export default () => <DatePicker />;",
            "props": {
                "DatePicker": {
                    "size": {
                        "description": "Size of the date picker",
                        "type": "enum",
                        "typeDescription": "small | medium | large",
                        "default": "small"
                    },
                    "defaultValue": {
                        "description": "Initial state of the date picker (uncontrolled)",
                        "type": "boolean | indeterminate",
                        "default": "false"
                    },
                    "value": {
                        "description": "State of the date picker (controlled)",
                        "type": "boolean | indeterminate",
                        "default": "false"
                    },
                    "onValueChange": {
                        "description": "Change event listener (controlled)",
                        "type": "(date: Date ) => void"
                    },
                    "placeholder": {
                        "description": "Placeholder text for the date picker",
                        "type": "string",
                        "default": "dd / mm / yyyy"
                    },
                    "disabled": {
                        "description": "Disabled state for date picker",
                        "type": "boolean | Matcher | Matcher[]",
                        "default": "false"
                    },
                    "maxYear": {
                        "description": "Maximum year for the date picker",
                        "type": "number",
                        "default": "2099"
                    },
                    "minYear": {
                        "description": "Minimum year for the date picker",
                        "type": "number",
                        "default": "1900"
                    },
                    "yearOrder": {
                        "description": "Sorting order for the year selection",
                        "type": "asc | desc",
                        "default": "asc"
                    },
                    "locale": {
                        "description": "Locale for the date picker",
                        "type": "en | ms",
                        "default": "en"
                    }
                }
            },
            "examples": [
                "import { DatePicker } from \"@govtechmy/myds-react/date-picker\";\nexport default function component() {\n\treturn (<DatePicker size=\"small\" />\n\t\t<DatePicker size=\"medium\" />\n\t\t<DatePicker size=\"large\" />\n\t);\n}",
                "import { DatePicker } from \"@govtechmy/myds-react/date-picker\";\nexport default function component() {\n\treturn (// Uncontrolled state\n\t\t<DatePicker defaultValue={new Date().toISOString().split(\"T\")[0]} />\n\t\t\n\t\t// Controlled state\n\t\t<DatePicker value={new Date().toISOString().split(\"T\")[0]} />\n\t);\n}",
                "import { DatePicker } from \"@govtechmy/myds-react/date-picker\";\nexport default function component() {\n\treturn (// Disable all dates\n\t\t<DatePicker defaultValue={new Date()} disabled />\n\t\t\n\t\t// Disable dates before today\n\t\t<DatePicker defaultValue={new Date()} disabled={{ before: new Date() }} />\n\t\t\n\t\t// Disable dates after today\n\t\t<DatePicker defaultValue={new Date()} disabled={{ after: new Date() }} />\n\t\t\n\t\t// Disable dates outside of range\n\t\t<DatePicker\n\t\t  defaultValue={new Date()}\n\t\t  disabled={{\n\t\t    before: new Date().setDate(new Date().getDate() - 1),\n\t\t    after: new Date().setDate(new Date().getDate() + 1),\n\t\t  }}\n\t\t/>\n\t\t\n\t\t// Disable dates by days of week (eg. Saturday and Sunday)\n\t\t<DatePicker\n\t\t  defaultValue={new Date()}\n\t\t  disabled={{\n\t\t    dayOfWeek: [0, 6],\n\t\t  }}\n\t\t/>\n\t\t\n\t\t// Disable dates by callback function (eg. disable every 13th of the month)\n\t\t<DatePicker\n\t\t  defaultValue={new Date()}\n\t\t  disabled={(date) => date.getDate() === 13}\n\t\t/>\n\t);\n}",
                "import { DatePicker } from \"@govtechmy/myds-react/date-picker\";\nexport default function component() {\n\treturn (<DatePicker defaultValue={new Date()} maxYear={2030} minYear={2020} />\n\t\t    \n\t);\n}",
                "import { DatePicker } from \"@govtechmy/myds-react/date-picker\";\nexport default function component() {\n\treturn (<DatePicker defaultValue={new Date()} yearOrder=\"asc\" />\n\t\t\n\t\t<DatePicker defaultValue={new Date()} yearOrder=\"desc\" />\n\t);\n}",
                "import { DatePicker } from \"@govtechmy/myds-react/date-picker\";\nexport default function component() {\n\treturn (<DatePicker defaultValue={new Date()} locale=\"en\" />\n\t\t\n\t\t<DatePicker defaultValue={new Date()} locale=\"ms\" />\n\t);\n}"
            ]
        }
    },
    {
        "name": "Date Field",
        "description": "Allows users to input a date in a structured format using separate fields for day, month, and year.",
        "docs": {
            "import": "import { DateField } from \"@govtechmy/myds-react/date-field\";",
            "use": "export default () => <DateField />;",
            "props": {
                "DateField": {
                    "size": {
                        "description": "Size of the date field",
                        "type": "enum",
                        "typeDescription": "small | medium | large",
                        "default": "small"
                    },
                    "defaultValue": {
                        "description": "Initial state of the date field (uncontrolled)",
                        "type": "string"
                    },
                    "value": {
                        "description": "State of the date field (controlled)",
                        "type": "string"
                    },
                    "onChange": {
                        "description": "Change event listener (controlled)",
                        "type": "(date: string ) => void",
                        "typeDescription": "date: yyyy-mm-dd",
                        "default": ""
                    },
                    "disabled": {
                        "description": "Disabled state for date field",
                        "type": "boolean",
                        "default": "false"
                    },
                    "invalid": {
                        "description": "Invalid state for date field",
                        "type": "boolean",
                        "default": "false"
                    }
                }
            },
            "examples": [
                "import { DateField } from \"@govtechmy/myds-react/date-field\";\nexport default function component() {\n\treturn (<DateField size=\"small\" />\n\t\t<DateField size=\"medium\" />\n\t\t<DateField size=\"large\" />\n\t);\n}",
                "import { DateField } from \"@govtechmy/myds-react/date-field\";\nexport default function component() {\n\treturn (// Uncontrolled state\n\t\t<DateField defaultValue={new Date().toISOString().split(\"T\")[0]} />\n\t\t\n\t\t// Controlled state\n\t\t<DateField value={new Date().toISOString().split(\"T\")[0]} />\n\t);\n}",
                "import { DateField } from \"@govtechmy/myds-react/date-field\";\nexport default function component() {\n\treturn (<DateField defaultValue={new Date().toISOString().split(\"T\")[0]} disabled />\n\t\t    \n\t);\n}",
                "import { DateField } from \"@govtechmy/myds-react/date-field\";\nexport default function component() {\n\treturn (<DateField defaultValue={new Date().toISOString().split(\"T\")[0]} invalid />\n\t\t    \n\t);\n}"
            ]
        }
    },
    {
        "name": "Radio",
        "description": "Radio buttons allow users to select exactly one choice from a group",
        "docs": {
            "import": "import {\n  Radio,\n  RadioButton,\n  RadioHintText,\n  RadioItem,\n  RadioLabel,\n} from \"@govtechmy/myds-react/radio\";",
            "use": "<Radio>\n  <RadioItem>\n    <RadioButton value=\"apple\" id=\"apple\" />\n    <RadioLabel htmlFor=\"apple\">Apple</RadioLabel>\n  </RadioItem>\n  <RadioItem>\n    <RadioButton value=\"banana\" id=\"banana\" />\n    <div>\n      <RadioLabel htmlFor=\"banana\">Banana</RadioLabel>\n      <RadioHintText htmlFor=\"banana\">Comes pre-packaged.</RadioHintText>\n    </div>\n  </RadioItem>\n</Radio>",
            "props": {
                "Radio": {
                    "value": {
                        "description": "The controlled value of the radio item to check. Should be used in conjunction with `onValueChange`.",
                        "type": "string"
                    },
                    "onValueChange": {
                        "description": "Event handler called when the value changes",
                        "type": "function",
                        "typeDescription": "(value: string) => void"
                    },
                    "size": {
                        "description": "Sizes of the radio",
                        "type": "enum",
                        "typeDescription": "small | medium | large",
                        "default": "medium"
                    },
                    "disabled": {
                        "description": "Disables ALL radio items if set to true",
                        "type": "boolean",
                        "default": "false"
                    }
                },
                "RadioItem": {
                    "disabled": {
                        "description": "Disables the radio item if set to true",
                        "type": "boolean",
                        "default": "false"
                    }
                }
            },
            "examples": [
                "import {\n  Radio,\n  RadioButton,\n  RadioHintText,\n  RadioItem,\n  RadioLabel,\n} from \"@govtechmy/myds-react/radio\";\nexport default function component() {\n\treturn (import {\n\t\t  Radio,\n\t\t  RadioButton,\n\t\t  RadioHintText,\n\t\t  RadioItem,\n\t\t  RadioLabel,\n\t\t} from \"@govtechmy/myds-react/radio\";\n\t\t\n\t\t<Radio size=\"small\">\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"email\" id=\"email\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"email\">Email</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"email\">\n\t\t        We will send notifications to your registered email address.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"phone_call\" id=\"phone_call\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"phone_call\">Phone Call</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"phone_call\">\n\t\t        Our representative will call you on your provided phone number.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t</Radio>\n\t\t\n\t\t<Radio size=\"medium\">\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"email\" id=\"email\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"email\">Email</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"email\">\n\t\t        We will send notifications to your registered email address.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"phone_call\" id=\"phone_call\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"phone_call\">Phone Call</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"phone_call\">\n\t\t        Our representative will call you on your provided phone number.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t</Radio>\n\t\t\n\t\t<Radio size=\"large\">\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"email\" id=\"email\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"email\">Email</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"email\">\n\t\t        We will send notifications to your registered email address.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"phone_call\" id=\"phone_call\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"phone_call\">Phone Call</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"phone_call\">\n\t\t        Our representative will call you on your provided phone number.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t</Radio>\n\t);\n}",
                "import {\n  Radio,\n  RadioButton,\n  RadioHintText,\n  RadioItem,\n  RadioLabel,\n} from \"@govtechmy/myds-react/radio\";\nexport default function component() {\n\treturn (import {\n\t\t  Radio,\n\t\t  RadioButton,\n\t\t  RadioHintText,\n\t\t  RadioItem,\n\t\t  RadioLabel,\n\t\t} from \"@govtechmy/myds-react/radio\";\n\t\t\n\t\t<Radio disabled>\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"email\" id=\"email\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"email\">Email</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"email\">\n\t\t        We will send notifications to your registered email address.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"phone_call\" id=\"phone_call\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"phone_call\">Phone Call</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"phone_call\">\n\t\t        Our representative will call you on your provided phone number.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"text_message\" id=\"text_message\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"text_message\">Text Message</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"text_message\">\n\t\t        You will receive SMS updates on your mobile phone.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"postal_mail\" id=\"postal_mail\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"postal_mail\">Postal Mail</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"postal_mail\">\n\t\t        Not available at the moment.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t  <RadioItem>\n\t\t    <RadioButton\n\t\t      value=\"disable_notifications\"\n\t\t      id=\"disable_notifications\"\n\t\t    />\n\t\t    <RadioLabel htmlFor=\"disable_notifications\">\n\t\t      Disable Notifications\n\t\t    </RadioLabel>\n\t\t  </RadioItem>\n\t\t</Radio>\n\t);\n}",
                "import {\n  Radio,\n  RadioButton,\n  RadioHintText,\n  RadioItem,\n  RadioLabel,\n} from \"@govtechmy/myds-react/radio\";\nexport default function component() {\n\treturn (import {\n\t\t  Radio,\n\t\t  RadioButton,\n\t\t  RadioHintText,\n\t\t  RadioItem,\n\t\t  RadioLabel,\n\t\t} from \"@govtechmy/myds-react/radio\";\n\t\t\n\t\t<Radio>\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"email\" id=\"email\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"email\">Email</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"email\">\n\t\t        We will send notifications to your registered email address.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"phone_call\" id=\"phone_call\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"phone_call\">Phone Call</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"phone_call\">\n\t\t        Our representative will call you on your provided phone number.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"text_message\" id=\"text_message\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"text_message\">Text Message</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"text_message\">\n\t\t        You will receive SMS updates on your mobile phone.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t  <RadioItem disabled>\n\t\t    <RadioButton value=\"postal_mail\" id=\"postal_mail\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"postal_mail\">Postal Mail</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"postal_mail\">\n\t\t        Not available at the moment.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t  <RadioItem>\n\t\t    <RadioButton\n\t\t      value=\"disable_notifications\"\n\t\t      id=\"disable_notifications\"\n\t\t    />\n\t\t    <RadioLabel htmlFor=\"disable_notifications\">\n\t\t      Disable Notifications\n\t\t    </RadioLabel>\n\t\t  </RadioItem>\n\t\t</Radio>\n\t);\n}",
                "import {\n  Radio,\n  RadioButton,\n  RadioHintText,\n  RadioItem,\n  RadioLabel,\n} from \"@govtechmy/myds-react/radio\";\nexport default function component() {\n\treturn (const [value, setValue] = useState(\"\")\n\t\t\n\t\t<Radio value={value} onValueChange={setValue}>\n\t\t  {/* ... */}\n\t\t</Radio>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Input OTP",
        "description": "The Input OTP (One-Time Password) component allows users to enter a code sent to their email or phone to verify their identity. This component is commonly used in two-factor authentication (2FA) and account recovery processes.",
        "docs": {
            "import": "import { InputOTP, InputOTPSlot } from \"@/components/myds\";",
            "use": "<InputOTP maxLength={4}>\n  <InputOTPSlot index={0} />\n  <InputOTPSlot index={1} />\n  <InputOTPSlot index={2} />\n  <InputOTPSlot index={3} />\n</InputOTP>",
            "props": {
                "InputOTP": {
                    "maxLength": {
                        "description": "The max length of the OTP - it should correspond to the number of slots",
                        "type": "number"
                    },
                    "defaultValue": {
                        "description": "The default value of the input",
                        "type": "string"
                    },
                    "value": {
                        "description": "The value of the input (controlled)",
                        "type": "string"
                    },
                    "onChange": {
                        "description": "Callback function when the value of the input changes (controlled)",
                        "type": "function",
                        "typeDescription": "(value: string) => void"
                    },
                    "disabled": {
                        "type": "boolean",
                        "default": "false"
                    },
                    "invalid": {
                        "type": "boolean",
                        "default": "false"
                    },
                    "pattern": {
                        "description": "A regex to only accept values of a certain pattern",
                        "type": "string"
                    }
                },
                "InputOTPSlot": {
                    "index": {
                        "description": "The index of the slot",
                        "type": "number"
                    }
                }
            },
            "examples": [
                "import { InputOTP, InputOTPSlot } from \"@/components/myds\";\nexport default function component() {\n\treturn (import { InputOTP, InputOTPSlot } from \"@/components/myds\"\n\t\t\n\t\t<InputOTP maxLength={4} invalid>\n\t\t  <InputOTPSlot index={0} />\n\t\t  <InputOTPSlot index={1} />\n\t\t  <InputOTPSlot index={2} />\n\t\t  <InputOTPSlot index={3} />\n\t\t</InputOTP>\n\t);\n}",
                "import { InputOTP, InputOTPSlot } from \"@/components/myds\";\nexport default function component() {\n\treturn (import { InputOTP, InputOTPSlot } from \"@/components/myds\"\n\t\t\n\t\t<InputOTP maxLength={4} disabled defaultValue=\"AB12\">\n\t\t  <InputOTPSlot index={0} />\n\t\t  <InputOTPSlot index={1} />\n\t\t  <InputOTPSlot index={2} />\n\t\t  <InputOTPSlot index={3} />\n\t\t</InputOTP>\n\t);\n}",
                "import { InputOTP, InputOTPSlot } from \"@/components/myds\";\nexport default function component() {\n\treturn (import { InputOTP, InputOTPSlot } from \"@/components/myds\"\n\t\t\n\t\tconst [value, setValue] = useState(\"\");\n\t\t\n\t\t<InputOTP\n\t\t  maxLength={4}\n\t\t  value={value}\n\t\t  onChange={(value) => {\n\t\t    setValue(value.toUpperCase());\n\t\t  }}\n\t\t>\n\t\t  <InputOTPSlot index={0} />\n\t\t  <InputOTPSlot index={1} />\n\t\t  <InputOTPSlot index={2} />\n\t\t  <InputOTPSlot index={3} />\n\t\t</InputOTP>\n\t);\n}",
                "import { InputOTP, InputOTPSlot } from \"@/components/myds\";\nexport default function component() {\n\treturn (import { InputOTP, InputOTPSlot } from \"@/components/myds\"\n\t\t\n\t\t<InputOTP maxLength={4} pattern=\"^[0-9]{0,4}$\">\n\t\t  <InputOTPSlot index={0} />\n\t\t  <InputOTPSlot index={1} />\n\t\t  <InputOTPSlot index={2} />\n\t\t  <InputOTPSlot index={3} />\n\t\t</InputOTP>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Tabs",
        "description": "Allows users to navigate between different views or content sections within the same context by clicking on tab.",
        "docs": {
            "import": "import {\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  TabsCounter,\n} from \"@govtechmy/myds-react/tabs\";",
            "use": "export default () => (\n  <Tabs>\n    <TabsList>\n      <TabsTrigger />\n    </TabsList>\n    <TabsContent />\n  </Tabs>\n);",
            "props": {
                "Tabs": {
                    "variant": {
                        "description": "Style variant of the tab",
                        "type": "enum",
                        "typeDescription": "pill | enclosed | line",
                        "default": "line"
                    },
                    "size": {
                        "description": "Sizes of the tab",
                        "type": "enum",
                        "typeDescription": "small | medium",
                        "default": "small"
                    }
                },
                "TabsList": {
                    "width": {
                        "description": "Width of the TabList",
                        "type": "enum",
                        "typeDescription": "full | fit",
                        "default": "fit"
                    }
                }
            },
            "examples": [
                "import {\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  TabsCounter,\n} from \"@govtechmy/myds-react/tabs\";\nexport default function component() {\n\treturn (import {\n\t\t    Tabs,\n\t\t    TabsContent,\n\t\t    TabsCounter,\n\t\t} from \"@/components/myds\";\n\t\t\n\t\t<Tabs\n\t\t    defaultValue=\"1\"\n\t\t    size=\"small\"\n\t\t    variant=\"line\"\n\t\t>\n\t\t    <TabsList>\n\t\t        <TabsTrigger value=\"1\">Novel</TabsTrigger>\n\t\t        <TabsTrigger value=\"2\">Short Story</TabsTrigger>\n\t\t        <TabsTrigger value=\"3\">Poetry</TabsTrigger>\n\t\t        <TabsTrigger value=\"4\">Drama</TabsTrigger>\n\t\t    </TabsList>\n\t\t    <TabsContent value=\"1\" className=\"py-6\">\n\t\t         A novel is a long work of fiction that presents a complete story with\n\t\t         characters, plot, and setting. It typically encompasses various themes\n\t\t         such as love, family, life struggles, and societal challenges. Novels\n\t\t         allow readers to immerse themselves in new worlds through the author's\n\t\t         imagination.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"2\" className=\"py-6\">\n\t\t         A short story is a brief work of fiction that can be read in one\n\t\t         sitting. Despite its concise format, it still contains engaging plots\n\t\t         and impactful characters. This compact format requires precise writing\n\t\t         to effectively deliver its message.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"3\" className=\"py-6\">\n\t\t         Poetry is a creative form of writing that uses beautiful and rhythmic\n\t\t         language to convey feelings and ideas. Each line of poetry is carefully\n\t\t         chosen to create a deep impact on the reader, whether through rhyme,\n\t\t         metaphor, or symbolism.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"4\" className=\"py-6\">\n\t\t         Drama is a work written for stage performance. It contains dialogue\n\t\t         between characters and clear stage directions. Drama can evoke various\n\t\t         emotions in the audience, from comedy to tragedy, while delivering\n\t\t         meaningful social messages.\n\t\t     </TabsContent>\n\t\t</Tabs>\n\t\t\n\t\t// for pill variant\n\t\t<Tabs\n\t\t    defaultValue=\"1\"\n\t\t    size=\"small\"\n\t\t    variant=\"pill\"\n\t\t>\n\t\t    <TabsList>\n\t\t        <TabsTrigger value=\"1\">Novel</TabsTrigger>\n\t\t        <TabsTrigger value=\"2\">Short Story</TabsTrigger>\n\t\t        <TabsTrigger value=\"3\">Poetry</TabsTrigger>\n\t\t        <TabsTrigger value=\"4\">Drama</TabsTrigger>\n\t\t    </TabsList>\n\t\t    <TabsContent value=\"1\" className=\"py-6\">\n\t\t         A novel is a long work of fiction that presents a complete story with\n\t\t         characters, plot, and setting. It typically encompasses various themes\n\t\t         such as love, family, life struggles, and societal challenges. Novels\n\t\t         allow readers to immerse themselves in new worlds through the author's\n\t\t         imagination.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"2\" className=\"py-6\">\n\t\t         A short story is a brief work of fiction that can be read in one\n\t\t         sitting. Despite its concise format, it still contains engaging plots\n\t\t         and impactful characters. This compact format requires precise writing\n\t\t         to effectively deliver its message.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"3\" className=\"py-6\">\n\t\t         Poetry is a creative form of writing that uses beautiful and rhythmic\n\t\t         language to convey feelings and ideas. Each line of poetry is carefully\n\t\t         chosen to create a deep impact on the reader, whether through rhyme,\n\t\t         metaphor, or symbolism.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"4\" className=\"py-6\">\n\t\t         Drama is a work written for stage performance. It contains dialogue\n\t\t         between characters and clear stage directions. Drama can evoke various\n\t\t         emotions in the audience, from comedy to tragedy, while delivering\n\t\t         meaningful social messages.\n\t\t     </TabsContent>\n\t\t</Tabs>\n\t\t\n\t\t// for enclosed variant\n\t\t<Tabs\n\t\t    defaultValue=\"1\"\n\t\t    size=\"small\"\n\t\t    variant=\"enclosed\"\n\t\t>\n\t\t   <TabsContent value=\"1\" className=\"py-6\">\n\t\t     A novel is a long work of fiction that presents a complete story with\n\t\t     characters, plot, and setting. It typically encompasses various themes\n\t\t     such as love, family, life struggles, and societal challenges. Novels\n\t\t     allow readers to immerse themselves in new worlds through the author's\n\t\t     imagination.\n\t\t </TabsContent>\n\t\t\n\t\t <TabsContent value=\"2\" className=\"py-6\">\n\t\t     A short story is a brief work of fiction that can be read in one\n\t\t     sitting. Despite its concise format, it still contains engaging plots\n\t\t     and impactful characters. This compact format requires precise writing\n\t\t     to effectively deliver its message.\n\t\t </TabsContent>\n\t\t\n\t\t <TabsContent value=\"3\" className=\"py-6\">\n\t\t     Poetry is a creative form of writing that uses beautiful and rhythmic\n\t\t     language to convey feelings and ideas. Each line of poetry is carefully\n\t\t     chosen to create a deep impact on the reader, whether through rhyme,\n\t\t     metaphor, or symbolism.\n\t\t </TabsContent>\n\t\t\n\t\t <TabsContent value=\"4\" className=\"py-6\">\n\t\t     Drama is a work written for stage performance. It contains dialogue\n\t\t     between characters and clear stage directions. Drama can evoke various\n\t\t     emotions in the audience, from comedy to tragedy, while delivering\n\t\t     meaningful social messages.\n\t\t </TabsContent>\n\t\t</Tabs>\n\t);\n}",
                "import {\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  TabsCounter,\n} from \"@govtechmy/myds-react/tabs\";\nexport default function component() {\n\treturn (import {\n\t\t    Tabs,\n\t\t    TabsContent,\n\t\t    TabsCounter,\n\t\t} from \"@/components/myds\";\n\t\t\n\t\t<Tabs\n\t\t    defaultValue=\"1\"\n\t\t    size=\"small\"\n\t\t    variant=\"line\"\n\t\t>\n\t\t    <TabsList>\n\t\t        <TabsTrigger value=\"1\">Novel</TabsTrigger>\n\t\t        <TabsTrigger value=\"2\">Short Story</TabsTrigger>\n\t\t        <TabsTrigger value=\"3\">Poetry</TabsTrigger>\n\t\t        <TabsTrigger value=\"4\">Drama</TabsTrigger>\n\t\t    </TabsList>\n\t\t    <TabsContent value=\"1\" className=\"py-6\">\n\t\t         A novel is a long work of fiction that presents a complete story with\n\t\t         characters, plot, and setting. It typically encompasses various themes\n\t\t         such as love, family, life struggles, and societal challenges. Novels\n\t\t         allow readers to immerse themselves in new worlds through the author's\n\t\t         imagination.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"2\" className=\"py-6\">\n\t\t         A short story is a brief work of fiction that can be read in one\n\t\t         sitting. Despite its concise format, it still contains engaging plots\n\t\t         and impactful characters. This compact format requires precise writing\n\t\t         to effectively deliver its message.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"3\" className=\"py-6\">\n\t\t         Poetry is a creative form of writing that uses beautiful and rhythmic\n\t\t         language to convey feelings and ideas. Each line of poetry is carefully\n\t\t         chosen to create a deep impact on the reader, whether through rhyme,\n\t\t         metaphor, or symbolism.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"4\" className=\"py-6\">\n\t\t         Drama is a work written for stage performance. It contains dialogue\n\t\t         between characters and clear stage directions. Drama can evoke various\n\t\t         emotions in the audience, from comedy to tragedy, while delivering\n\t\t         meaningful social messages.\n\t\t     </TabsContent>\n\t\t</Tabs>\n\t\t\n\t\t<Tabs\n\t\t    defaultValue=\"1\"\n\t\t    size=\"medium\"\n\t\t    variant=\"line\"\n\t\t>\n\t\t    <TabsList>\n\t\t        <TabsTrigger value=\"1\">Novel</TabsTrigger>\n\t\t        <TabsTrigger value=\"2\">Short Story</TabsTrigger>\n\t\t        <TabsTrigger value=\"3\">Poetry</TabsTrigger>\n\t\t        <TabsTrigger value=\"4\">Drama</TabsTrigger>\n\t\t    </TabsList>\n\t\t    <TabsContent value=\"1\" className=\"py-6\">\n\t\t         A novel is a long work of fiction that presents a complete story with\n\t\t         characters, plot, and setting. It typically encompasses various themes\n\t\t         such as love, family, life struggles, and societal challenges. Novels\n\t\t         allow readers to immerse themselves in new worlds through the author's\n\t\t         imagination.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"2\" className=\"py-6\">\n\t\t         A short story is a brief work of fiction that can be read in one\n\t\t         sitting. Despite its concise format, it still contains engaging plots\n\t\t         and impactful characters. This compact format requires precise writing\n\t\t         to effectively deliver its message.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"3\" className=\"py-6\">\n\t\t         Poetry is a creative form of writing that uses beautiful and rhythmic\n\t\t         language to convey feelings and ideas. Each line of poetry is carefully\n\t\t         chosen to create a deep impact on the reader, whether through rhyme,\n\t\t         metaphor, or symbolism.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"4\" className=\"py-6\">\n\t\t         Drama is a work written for stage performance. It contains dialogue\n\t\t         between characters and clear stage directions. Drama can evoke various\n\t\t         emotions in the audience, from comedy to tragedy, while delivering\n\t\t         meaningful social messages.\n\t\t     </TabsContent>\n\t\t</Tabs>\n\t\t\n\t\t// for pill variant\n\t\t<Tabs\n\t\t    defaultValue=\"1\"\n\t\t    size=\"small\"\n\t\t    variant=\"pill\"\n\t\t>\n\t\t    <TabsList>\n\t\t        <TabsTrigger value=\"1\">Novel</TabsTrigger>\n\t\t        <TabsTrigger value=\"2\">Short Story</TabsTrigger>\n\t\t        <TabsTrigger value=\"3\">Poetry</TabsTrigger>\n\t\t        <TabsTrigger value=\"4\">Drama</TabsTrigger>\n\t\t    </TabsList>\n\t\t    <TabsContent value=\"1\" className=\"py-6\">\n\t\t         A novel is a long work of fiction that presents a complete story with\n\t\t         characters, plot, and setting. It typically encompasses various themes\n\t\t         such as love, family, life struggles, and societal challenges. Novels\n\t\t         allow readers to immerse themselves in new worlds through the author's\n\t\t         imagination.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"2\" className=\"py-6\">\n\t\t         A short story is a brief work of fiction that can be read in one\n\t\t         sitting. Despite its concise format, it still contains engaging plots\n\t\t         and impactful characters. This compact format requires precise writing\n\t\t         to effectively deliver its message.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"3\" className=\"py-6\">\n\t\t         Poetry is a creative form of writing that uses beautiful and rhythmic\n\t\t         language to convey feelings and ideas. Each line of poetry is carefully\n\t\t         chosen to create a deep impact on the reader, whether through rhyme,\n\t\t         metaphor, or symbolism.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"4\" className=\"py-6\">\n\t\t         Drama is a work written for stage performance. It contains dialogue\n\t\t         between characters and clear stage directions. Drama can evoke various\n\t\t         emotions in the audience, from comedy to tragedy, while delivering\n\t\t         meaningful social messages.\n\t\t     </TabsContent>\n\t\t</Tabs>\n\t\t\n\t\t<Tabs\n\t\t    defaultValue=\"1\"\n\t\t    size=\"medium\"\n\t\t    variant=\"pill\"\n\t\t>\n\t\t    <TabsList>\n\t\t        <TabsTrigger value=\"1\">Novel</TabsTrigger>\n\t\t        <TabsTrigger value=\"2\">Short Story</TabsTrigger>\n\t\t        <TabsTrigger value=\"3\">Poetry</TabsTrigger>\n\t\t        <TabsTrigger value=\"4\">Drama</TabsTrigger>\n\t\t    </TabsList>\n\t\t    <TabsContent value=\"1\" className=\"py-6\">\n\t\t         A novel is a long work of fiction that presents a complete story with\n\t\t         characters, plot, and setting. It typically encompasses various themes\n\t\t         such as love, family, life struggles, and societal challenges. Novels\n\t\t         allow readers to immerse themselves in new worlds through the author's\n\t\t         imagination.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"2\" className=\"py-6\">\n\t\t         A short story is a brief work of fiction that can be read in one\n\t\t         sitting. Despite its concise format, it still contains engaging plots\n\t\t         and impactful characters. This compact format requires precise writing\n\t\t         to effectively deliver its message.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"3\" className=\"py-6\">\n\t\t         Poetry is a creative form of writing that uses beautiful and rhythmic\n\t\t         language to convey feelings and ideas. Each line of poetry is carefully\n\t\t         chosen to create a deep impact on the reader, whether through rhyme,\n\t\t         metaphor, or symbolism.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"4\" className=\"py-6\">\n\t\t         Drama is a work written for stage performance. It contains dialogue\n\t\t         between characters and clear stage directions. Drama can evoke various\n\t\t         emotions in the audience, from comedy to tragedy, while delivering\n\t\t         meaningful social messages.\n\t\t     </TabsContent>\n\t\t</Tabs>\n\t\t\n\t\t// for enclosed variant\n\t\t<Tabs\n\t\t    defaultValue=\"1\"\n\t\t    size=\"small\"\n\t\t    variant=\"enclosed\"\n\t\t>\n\t\t    <TabsList>\n\t\t        <TabsTrigger value=\"1\">Novel</TabsTrigger>\n\t\t        <TabsTrigger value=\"2\">Short Story</TabsTrigger>\n\t\t        <TabsTrigger value=\"3\">Poetry</TabsTrigger>\n\t\t        <TabsTrigger value=\"4\">Drama</TabsTrigger>\n\t\t    </TabsList>\n\t\t    <TabsContent value=\"1\" className=\"py-6\">\n\t\t         A novel is a long work of fiction that presents a complete story with\n\t\t         characters, plot, and setting. It typically encompasses various themes\n\t\t         such as love, family, life struggles, and societal challenges. Novels\n\t\t         allow readers to immerse themselves in new worlds through the author's\n\t\t         imagination.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"2\" className=\"py-6\">\n\t\t         A short story is a brief work of fiction that can be read in one\n\t\t         sitting. Despite its concise format, it still contains engaging plots\n\t\t         and impactful characters. This compact format requires precise writing\n\t\t         to effectively deliver its message.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"3\" className=\"py-6\">\n\t\t         Poetry is a creative form of writing that uses beautiful and rhythmic\n\t\t         language to convey feelings and ideas. Each line of poetry is carefully\n\t\t         chosen to create a deep impact on the reader, whether through rhyme,\n\t\t         metaphor, or symbolism.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"4\" className=\"py-6\">\n\t\t         Drama is a work written for stage performance. It contains dialogue\n\t\t         between characters and clear stage directions. Drama can evoke various\n\t\t         emotions in the audience, from comedy to tragedy, while delivering\n\t\t         meaningful social messages.\n\t\t     </TabsContent>\n\t\t</Tabs>\n\t\t\n\t\t<Tabs\n\t\t    defaultValue=\"1\"\n\t\t    size=\"medium\"\n\t\t    variant=\"enclosed\"\n\t\t>\n\t\t    <TabsList>\n\t\t        <TabsTrigger value=\"1\">Novel</TabsTrigger>\n\t\t        <TabsTrigger value=\"2\">Short Story</TabsTrigger>\n\t\t        <TabsTrigger value=\"3\">Poetry</TabsTrigger>\n\t\t        <TabsTrigger value=\"4\">Drama</TabsTrigger>\n\t\t    </TabsList>\n\t\t    <TabsContent value=\"1\" className=\"py-6\">\n\t\t         A novel is a long work of fiction that presents a complete story with\n\t\t         characters, plot, and setting. It typically encompasses various themes\n\t\t         such as love, family, life struggles, and societal challenges. Novels\n\t\t         allow readers to immerse themselves in new worlds through the author's\n\t\t         imagination.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"2\" className=\"py-6\">\n\t\t         A short story is a brief work of fiction that can be read in one\n\t\t         sitting. Despite its concise format, it still contains engaging plots\n\t\t         and impactful characters. This compact format requires precise writing\n\t\t         to effectively deliver its message.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"3\" className=\"py-6\">\n\t\t         Poetry is a creative form of writing that uses beautiful and rhythmic\n\t\t         language to convey feelings and ideas. Each line of poetry is carefully\n\t\t         chosen to create a deep impact on the reader, whether through rhyme,\n\t\t         metaphor, or symbolism.\n\t\t     </TabsContent>\n\t\t\n\t\t     <TabsContent value=\"4\" className=\"py-6\">\n\t\t         Drama is a work written for stage performance. It contains dialogue\n\t\t         between characters and clear stage directions. Drama can evoke various\n\t\t         emotions in the audience, from comedy to tragedy, while delivering\n\t\t         meaningful social messages.\n\t\t     </TabsContent>\n\t\t</Tabs>\n\t);\n}",
                "import {\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  TabsCounter,\n} from \"@govtechmy/myds-react/tabs\";\nexport default function component() {\n\treturn (import {\n\t\t    Tabs,\n\t\t    TabsContent,\n\t\t    TabsCounter,\n\t\t} from \"@/components/myds\";\n\t\t\n\t\t<TabsList>\n\t\t    <TabsTrigger value=\"1\">\n\t\t        <TabsIcon>\n\t\t            <ArrowForwardIcon/>\n\t\t        </TabsIcon>\n\t\t        Novel\n\t\t    </TabsTrigger>\n\t\t    <TabsTrigger value=\"2\">\n\t\t        <TabsIcon>\n\t\t            <ArrowForwardIcon/>\n\t\t        </TabsIcon>\n\t\t        Short Story\n\t\t    </TabsTrigger>\n\t\t    <TabsTrigger value=\"3\">\n\t\t        <TabsIcon>\n\t\t            <ArrowForwardIcon/>\n\t\t        </TabsIcon>\n\t\t        Poem\n\t\t    </TabsTrigger>\n\t\t    <TabsTrigger value=\"4\">\n\t\t        <TabsIcon>\n\t\t            <ArrowForwardIcon/>\n\t\t        </TabsIcon>\n\t\t        Drama\n\t\t    </TabsTrigger>\n\t\t</TabsList>\n\t\t<TabsContent value=\"1\" className=\"py-6\">\n\t\t    A novel is a long work of fiction that presents a complete story with\n\t\t    characters, plot, and setting. It typically encompasses various themes\n\t\t    such as love, family, life struggles, and societal challenges. Novels\n\t\t    allow readers to immerse themselves in new worlds through the author's\n\t\t    imagination.\n\t\t</TabsContent>\n\t\t<TabsContent value=\"2\" className=\"py-6\">\n\t\t    A short story is a brief work of fiction that can be read in one\n\t\t    sitting. Despite its concise format, it still contains engaging plots\n\t\t    and impactful characters. This compact format requires precise writing\n\t\t    to effectively deliver its message.\n\t\t</TabsContent>\n\t\t<TabsContent value=\"3\" className=\"py-6\">\n\t\t    Poetry is a creative form of writing that uses beautiful and rhythmic\n\t\t    language to convey feelings and ideas. Each line of poetry is carefully\n\t\t    chosen to create a deep impact on the reader, whether through rhyme,\n\t\t    metaphor, or symbolism.\n\t\t</TabsContent>\n\t\t<TabsContent value=\"4\" className=\"py-6\">\n\t\t    Drama is a work written for stage performance. It contains dialogue\n\t\t    between characters and clear stage directions. Drama can evoke various\n\t\t    emotions in the audience, from comedy to tragedy, while delivering\n\t\t    meaningful social messages.\n\t\t</TabsContent>\n\t);\n}",
                "import {\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  TabsCounter,\n} from \"@govtechmy/myds-react/tabs\";\nexport default function component() {\n\treturn (import {\n\t\t    Tabs,\n\t\t    TabsContent,\n\t\t    TabsCounter,\n\t\t} from \"@/components/myds\";\n\t\t\n\t\t<Tabs\n\t\t    defaultValue=\"1\"\n\t\t    size=\"small\"\n\t\t    variant=\"line\"\n\t\t>\n\t\t    <TabsList>\n\t\t        <TabsTrigger value=\"1\">\n\t\t            Novel\n\t\t            <TabsCounter>1</TabsCounter>\n\t\t        </TabsTrigger>\n\t\t        <TabsTrigger value=\"2\">\n\t\t            Short Story\n\t\t            <TabsCounter>1</TabsCounter>\n\t\t        </TabsTrigger>\n\t\t        <TabsTrigger value=\"3\">\n\t\t            Short Story\n\t\t            <TabsCounter>1</TabsCounter>\n\t\t        </TabsTrigger>\n\t\t        <TabsTrigger value=\"4\">\n\t\t            Drama\n\t\t            <TabsCounter>1</TabsCounter>\n\t\t        </TabsTrigger>\n\t\t    </TabsList>\n\t\t    <TabsContent value=\"1\" className=\"py-6\">\n\t\t        A novel is a long work of fiction that presents a complete story with\n\t\t        characters, plot, and setting. It typically encompasses various themes\n\t\t        such as love, family, life struggles, and societal challenges. Novels\n\t\t        allow readers to immerse themselves in new worlds through the author's\n\t\t        imagination.\n\t\t    </TabsContent>\n\t\t\n\t\t    <TabsContent value=\"2\" className=\"py-6\">\n\t\t        A short story is a brief work of fiction that can be read in one\n\t\t        sitting. Despite its concise format, it still contains engaging plots\n\t\t        and impactful characters. This compact format requires precise writing\n\t\t        to effectively deliver its message.\n\t\t    </TabsContent>\n\t\t\n\t\t    <TabsContent value=\"3\" className=\"py-6\">\n\t\t        Poetry is a creative form of writing that uses beautiful and rhythmic\n\t\t        language to convey feelings and ideas. Each line of poetry is carefully\n\t\t        chosen to create a deep impact on the reader, whether through rhyme,\n\t\t        metaphor, or symbolism.\n\t\t    </TabsContent>\n\t\t\n\t\t    <TabsContent value=\"4\" className=\"py-6\">\n\t\t        Drama is a work written for stage performance. It contains dialogue\n\t\t        between characters and clear stage directions. Drama can evoke various\n\t\t        emotions in the audience, from comedy to tragedy, while delivering\n\t\t        meaningful social messages.\n\t\t    </TabsContent>\n\t\t</Tabs>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Button",
        "description": "A fundamental UI element used to trigger actions or events. It ensures consistency, accessibility, and a clear call to action.",
        "docs": {
            "import": "import {\n  Button,\n  ButtonIcon,\n  ButtonCounter,\n} from \"@govtechmy/myds-react/button\";",
            "use": "export default () => (\n  <Button>\n    <ButtonIcon />\n    <ButtonCounter />\n  </Button>\n);",
            "props": {
                "Button": {
                    "variant": {
                        "description": "Style variant of the button",
                        "type": "enum",
                        "typeDescription": "primary-fill | primary-outline | primary-ghost | danger-fill | danger-outline | danger-ghost | default-outline | default-ghost",
                        "default": "default-outline"
                    },
                    "size": {
                        "description": "Sizes of the button",
                        "type": "enum",
                        "typeDescription": "small | medium | large",
                        "default": "small"
                    },
                    "iconOnly": {
                        "description": "Button with sole icon",
                        "type": "boolean",
                        "default": "false"
                    },
                    "children": {
                        "description": "Content of the button",
                        "type": "ReactNode"
                    },
                    "className": {
                        "description": "Additional styles",
                        "type": "string"
                    }
                },
                "ButtonIcon": {
                    "children": {
                        "description": "Import any icon component from @govtechmy/myds-react/icon",
                        "type": "ReactNode"
                    },
                    "className": {
                        "description": "Additional styles",
                        "type": "string"
                    }
                },
                "ButtonCounter": {
                    "children": {
                        "description": "Numeric information to be displayed",
                        "type": "ReactNode"
                    },
                    "className": {
                        "description": "Additional styles",
                        "type": "string"
                    }
                }
            },
            "examples": [
                "import {\n  Button,\n  ButtonIcon,\n  ButtonCounter,\n} from \"@govtechmy/myds-react/button\";\nexport default function component() {\n\treturn (import { Button } from \"@govtechmy/myds-react/button\";\n\t\t\n\t\t/** Varian: Primary **/\n\t\t\n\t\t<Button variant=\"primary-fill\">Primary Fill</Button>;\n\t\t<Button variant=\"primary-outline\">Primary Outline</Button>;\n\t\t<Button variant=\"primary-ghost\">Primary Ghost</Button>;\n\t\t\n\t\t/** Varian: Danger **/\n\t\t\n\t\t<Button variant=\"danger-fill\">Danger Fill</Button>;\n\t\t<Button variant=\"danger-outline\">Danger Outline</Button>;\n\t\t<Button variant=\"danger-ghost\">Danger Ghost</Button>;\n\t\t\n\t\t/** Varian: Default **/\n\t\t\n\t\t<Button variant=\"default-outline\">Default Outline</Button>;\n\t\t<Button variant=\"default-ghost\">Default Ghost</Button>;\n\t);\n}",
                "import {\n  Button,\n  ButtonIcon,\n  ButtonCounter,\n} from \"@govtechmy/myds-react/button\";\nexport default function component() {\n\treturn (import { Button } from \"@govtechmy/myds-react/button\";\n\t\t\n\t\t/** Size **/\n\t\t\n\t\t<Button size=\"small\" variant=\"default-outline\">small</Button>;\n\t\t<Button size=\"medium\" variant=\"default-outline\">medium</Button>;\n\t\t<Button size=\"large\" variant=\"default-outline\">large</Button>;\n\t);\n}",
                "import {\n  Button,\n  ButtonIcon,\n  ButtonCounter,\n} from \"@govtechmy/myds-react/button\";\nexport default function component() {\n\treturn (import { Button, ButtonIcon } from \"@govtechmy/myds-react/button\";\n\t\timport {\n\t\t  ArrowForwardIcon,\n\t\t  ArrowBackIcon,\n\t\t} from \"@govtechmy/myds-react/icon\";\n\t\t\n\t\t/** With Icon; Position: Start **/\n\t\t\n\t\t<Button variant=\"default-outline\" size=\"medium\">\n\t\t  <ButtonIcon>\n\t\t    <ArrowBackIcon />\n\t\t  </ButtonIcon>\n\t\t  <span>Go back</span>\n\t\t</Button>\n\t\t\n\t\t/** With Icon; Position: End **/\n\t\t\n\t\t<Button variant=\"default-outline\" size=\"medium\">\n\t\t  <span>Go forward</span>\n\t\t  <ButtonIcon>\n\t\t    <ArrowForwardIcon />\n\t\t  </ButtonIcon>\n\t\t</Button>\n\t);\n}",
                "import {\n  Button,\n  ButtonIcon,\n  ButtonCounter,\n} from \"@govtechmy/myds-react/button\";\nexport default function component() {\n\treturn (import { Button, ButtonIcon } from \"@govtechmy/myds-react/button\";\n\t\timport {\n\t\t  UploadIcon,\n\t\t  CopyIcon,\n\t\t  TrashIcon,\n\t\t} from \"@govtechmy/myds-react/icon\";\n\t\t\n\t\t<Button variant=\"primary-fill\" size=\"small\" iconOnly>\n\t\t  <ButtonIcon>\n\t\t    <UploadIcon />\n\t\t  </ButtonIcon>\n\t\t</Button>\n\t\t\n\t\t<Button variant=\"default-outline\" size=\"small\" iconOnly>\n\t\t  <ButtonIcon>\n\t\t    <CopyIcon />\n\t\t  </ButtonIcon>\n\t\t</Button>\n\t\t\n\t\t<Button variant=\"danger-fill\" size=\"small\" iconOnly>\n\t\t  <ButtonIcon>\n\t\t    <TrashIcon />\n\t\t  </ButtonIcon>\n\t\t</Button>\n\t);\n}",
                "import {\n  Button,\n  ButtonIcon,\n  ButtonCounter,\n} from \"@govtechmy/myds-react/button\";\nexport default function component() {\n\treturn (import { Button, ButtonCounter } from \"@govtechmy/myds-react/button\";\n\t\t\n\t\t<Button variant=\"primary-fill\" size=\"medium\">\n\t\t  Filter\n\t\t  <ButtonCounter>5</ButtonCounter>\n\t\t</Button>\n\t\t\n\t\t<Button variant=\"default-outline\" size=\"medium\">\n\t\t  Filter\n\t\t  <ButtonCounter>5</ButtonCounter>\n\t\t</Button>\n\t\t\n\t\t<Button variant=\"danger-fill\" size=\"medium\">\n\t\t  Filter\n\t\t  <ButtonCounter>5</ButtonCounter>\n\t\t</Button>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Toggle",
        "description": "The Toggle component is a versatile switch that allows users to toggle between two states.",
        "docs": {
            "import": "import { Toggle, ToggleThumb } from \"@govtechmy/myds-react/toggle\";",
            "use": "export default () => (\n  <Toggle>\n    <ToggleThumb />\n  </Toggle>\n);",
            "props": {
                "Toggle": {
                    "size": {
                        "description": "Sizes of the toggle",
                        "type": "enum",
                        "typeDescription": "small | medium | large",
                        "default": "medium"
                    },
                    "disabled": {
                        "description": "Indicates whether the toggle is disabled",
                        "type": "boolean",
                        "typeDescription": "true | false",
                        "default": "false"
                    }
                }
            },
            "examples": [
                "import { Toggle, ToggleThumb } from \"@govtechmy/myds-react/toggle\";\nexport default function component() {\n\treturn (import { Toggle, ToggleThumb } from \"@govtechmy/myds-react/toggle\";\n\t\t\n\t\t<Toggle size=\"small\">\n\t\t  <ToggleThumb />\n\t\t</Toggle>\n\t\t\n\t\t<Toggle size=\"medium\">\n\t\t  <ToggleThumb />\n\t\t</Toggle>\n\t\t\n\t\t<Toggle size=\"large\">\n\t\t  <ToggleThumb />\n\t\t</Toggle>\n\t);\n}",
                "import { Toggle, ToggleThumb } from \"@govtechmy/myds-react/toggle\";\nexport default function component() {\n\treturn (import { Toggle, ToggleThumb } from \"@govtechmy/myds-react/toggle\";\n\t\t\n\t\t<Toggle disabled = {true}>\n\t\t    <ToggleThumb />\n\t\t</Toggle>\n\t\t\n\t\t<Toggle disabled = {true} defaultChecked = {true}>\n\t\t    <ToggleThumb />\n\t\t</Toggle>\n\t);\n}",
                "import { Toggle, ToggleThumb } from \"@govtechmy/myds-react/toggle\";\nexport default function component() {\n\treturn (import { Toggle, ToggleThumb } from \"@govtechmy/myds-react/toggle\";\n\t\t\n\t\tconst ControlledToggle = () => {\n\t\tconst [isChecked, setIsChecked] = React.useState(false);\n\t\treturn (\n\t\t\n\t\t<div className=\"flex flex-col items-center justify-center\">\n\t\t  <p>Current state: {isChecked ? \"On\" : \"Off\"}</p>\n\t\t  <Toggle checked={isChecked} onCheckedChange={setIsChecked}>\n\t\t    <ToggleThumb />\n\t\t  </Toggle>\n\t\t</div>\n\t\t); };\n\t);\n}",
                "import { Toggle, ToggleThumb } from \"@govtechmy/myds-react/toggle\";\nexport default function component() {\n\treturn (import { Toggle, ToggleThumb } from \"@govtechmy/myds-react/toggle\";\n\t\t\n\t\t<p className=\"\">This toggle manages its own state internally.</p>\n\t\t<Toggle defaultChecked={false}>\n\t\t  <ToggleThumb />\n\t\t</Toggle>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Toast",
        "description": "Non-intrusive notification that appears temporarily on the screen to provide feedback or alert the user of an event.",
        "docs": {
            "import": "import { AutoToast } from \"@govtechmy/myds-react/toast\";\n\n// Put the component high up in the DOM tree\n<AutoToast />;",
            "use": "// Then, publish or emit a new event to the Toast\nimport { useToast } from \"@govtechmy/myds-react/hooks\";\n\nexport default () => {\n  const { toast } = useToast();\n  return (\n    <button\n      onClick={() => {\n        toast({\n          variant: \"message\",\n          title: \"Hello, world!\",\n          description: \"this is a message toast description\",\n        });\n      }}\n    >\n      Message\n    </button>\n  );\n};",
            "props": {
                "ToastRoot": {
                    "variant": {
                        "description": "Style variant of the toast",
                        "type": "enum",
                        "typeDescription": "message | success | info | warning | error",
                        "default": "message"
                    },
                    "duration": {
                        "description": "Time (ms) before toast disappears",
                        "type": "number",
                        "default": "5000"
                    }
                }
            },
            "examples": [
                "import { AutoToast } from \"@govtechmy/myds-react/toast\";\n\n// Put the component high up in the DOM tree\n<AutoToast />;\nexport default function component() {\n\treturn (// autotoast for simple usage\n\t\timport { Button } from \"@govtechmy/myds-react/button\";\n\t\timport { AutoToast }from \"@govtechmy/myds-react/toast\";\n\t\t\n\t\t// put the component high up the layout tree\n\t\t\n\t\t<AutoToast />\n\t\t\n\t\t// to publish or emit a new event to the Toast\n\t\timport { useToast } from \"@govtechmy/myds-react/hooks\";\n\t\t\n\t\tconst { toast } = useToast();\n\t\t\n\t\t<button\n\t\t  onClick={() => {\n\t\t    toast({\n\t\t      variant: \"message\",\n\t\t      title: \"Hello, world!\",\n\t\t      description: \"this is a message toast description\",\n\t\t    });\n\t\t  }}\n\t\t>\n\t\t  Message\n\t\t</button>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Input OTP",
        "description": "The Input OTP (One-Time Password) component allows users to enter a code sent to their email or phone to verify their identity. This component is commonly used in two-factor authentication (2FA) and account recovery processes.",
        "docs": {
            "import": "import { InputOTP, InputOTPSlot } from \"@/components/myds\";",
            "use": "<InputOTP maxLength={4}>\n  <InputOTPSlot index={0} />\n  <InputOTPSlot index={1} />\n  <InputOTPSlot index={2} />\n  <InputOTPSlot index={3} />\n</InputOTP>",
            "props": {
                "InputOTP": {
                    "maxLength": {
                        "description": "The max length of the OTP - it should correspond to the number of slots",
                        "type": "number"
                    },
                    "defaultValue": {
                        "description": "The default value of the input",
                        "type": "string"
                    },
                    "value": {
                        "description": "The value of the input (controlled)",
                        "type": "string"
                    },
                    "onChange": {
                        "description": "Callback function when the value of the input changes (controlled)",
                        "type": "function",
                        "typeDescription": "(value: string) => void"
                    },
                    "disabled": {
                        "type": "boolean",
                        "default": "false"
                    },
                    "invalid": {
                        "type": "boolean",
                        "default": "false"
                    },
                    "pattern": {
                        "description": "A regex to only accept values of a certain pattern",
                        "type": "string"
                    }
                },
                "InputOTPSlot": {
                    "index": {
                        "description": "The index of the slot",
                        "type": "number"
                    }
                }
            },
            "examples": [
                "import { InputOTP, InputOTPSlot } from \"@/components/myds\";\nexport default function component() {\n\treturn (import { InputOTP, InputOTPSlot } from \"@/components/myds\"\n\t\t\n\t\t<InputOTP maxLength={4} invalid>\n\t\t  <InputOTPSlot index={0} />\n\t\t  <InputOTPSlot index={1} />\n\t\t  <InputOTPSlot index={2} />\n\t\t  <InputOTPSlot index={3} />\n\t\t</InputOTP>\n\t);\n}",
                "import { InputOTP, InputOTPSlot } from \"@/components/myds\";\nexport default function component() {\n\treturn (import { InputOTP, InputOTPSlot } from \"@/components/myds\"\n\t\t\n\t\t<InputOTP maxLength={4} disabled defaultValue=\"AB12\">\n\t\t  <InputOTPSlot index={0} />\n\t\t  <InputOTPSlot index={1} />\n\t\t  <InputOTPSlot index={2} />\n\t\t  <InputOTPSlot index={3} />\n\t\t</InputOTP>\n\t);\n}",
                "import { InputOTP, InputOTPSlot } from \"@/components/myds\";\nexport default function component() {\n\treturn (import { InputOTP, InputOTPSlot } from \"@/components/myds\"\n\t\t\n\t\tconst [value, setValue] = useState(\"\");\n\t\t\n\t\t<InputOTP\n\t\t  maxLength={4}\n\t\t  value={value}\n\t\t  onChange={(value) => {\n\t\t    setValue(value.toUpperCase());\n\t\t  }}\n\t\t>\n\t\t  <InputOTPSlot index={0} />\n\t\t  <InputOTPSlot index={1} />\n\t\t  <InputOTPSlot index={2} />\n\t\t  <InputOTPSlot index={3} />\n\t\t</InputOTP>\n\t);\n}",
                "import { InputOTP, InputOTPSlot } from \"@/components/myds\";\nexport default function component() {\n\treturn (import { InputOTP, InputOTPSlot } from \"@/components/myds\"\n\t\t\n\t\t<InputOTP maxLength={4} pattern=\"^[0-9]{0,4}$\">\n\t\t  <InputOTPSlot index={0} />\n\t\t  <InputOTPSlot index={1} />\n\t\t  <InputOTPSlot index={2} />\n\t\t  <InputOTPSlot index={3} />\n\t\t</InputOTP>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Radio",
        "description": "Radio buttons allow users to select exactly one choice from a group",
        "docs": {
            "import": "import {\n  Radio,\n  RadioButton,\n  RadioHintText,\n  RadioItem,\n  RadioLabel,\n} from \"@govtechmy/myds-react/radio\";",
            "use": "<Radio>\n  <RadioItem>\n    <RadioButton value=\"apple\" id=\"apple\" />\n    <RadioLabel htmlFor=\"apple\">Apple</RadioLabel>\n  </RadioItem>\n  <RadioItem>\n    <RadioButton value=\"banana\" id=\"banana\" />\n    <div>\n      <RadioLabel htmlFor=\"banana\">Banana</RadioLabel>\n      <RadioHintText htmlFor=\"banana\">Comes pre-packaged.</RadioHintText>\n    </div>\n  </RadioItem>\n</Radio>",
            "props": {
                "Radio": {
                    "value": {
                        "description": "The controlled value of the radio item to check. Should be used in conjunction with `onValueChange`.",
                        "type": "string"
                    },
                    "onValueChange": {
                        "description": "Event handler called when the value changes",
                        "type": "function",
                        "typeDescription": "(value: string) => void"
                    },
                    "size": {
                        "description": "Sizes of the radio",
                        "type": "enum",
                        "typeDescription": "small | medium | large",
                        "default": "medium"
                    },
                    "disabled": {
                        "description": "Disables ALL radio items if set to true",
                        "type": "boolean",
                        "default": "false"
                    }
                },
                "RadioItem": {
                    "disabled": {
                        "description": "Disables the radio item if set to true",
                        "type": "boolean",
                        "default": "false"
                    }
                }
            },
            "examples": [
                "import {\n  Radio,\n  RadioButton,\n  RadioHintText,\n  RadioItem,\n  RadioLabel,\n} from \"@govtechmy/myds-react/radio\";\nexport default function component() {\n\treturn (import {\n\t\t  Radio,\n\t\t  RadioButton,\n\t\t  RadioHintText,\n\t\t  RadioItem,\n\t\t  RadioLabel,\n\t\t} from \"@govtechmy/myds-react/radio\";\n\t\t\n\t\t<Radio size=\"small\">\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"email\" id=\"email\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"email\">Email</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"email\">\n\t\t        We will send notifications to your registered email address.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"phone_call\" id=\"phone_call\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"phone_call\">Phone Call</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"phone_call\">\n\t\t        Our representative will call you on your provided phone number.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t</Radio>\n\t\t\n\t\t<Radio size=\"medium\">\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"email\" id=\"email\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"email\">Email</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"email\">\n\t\t        We will send notifications to your registered email address.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"phone_call\" id=\"phone_call\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"phone_call\">Phone Call</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"phone_call\">\n\t\t        Our representative will call you on your provided phone number.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t</Radio>\n\t\t\n\t\t<Radio size=\"large\">\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"email\" id=\"email\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"email\">Email</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"email\">\n\t\t        We will send notifications to your registered email address.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"phone_call\" id=\"phone_call\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"phone_call\">Phone Call</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"phone_call\">\n\t\t        Our representative will call you on your provided phone number.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t</Radio>\n\t);\n}",
                "import {\n  Radio,\n  RadioButton,\n  RadioHintText,\n  RadioItem,\n  RadioLabel,\n} from \"@govtechmy/myds-react/radio\";\nexport default function component() {\n\treturn (import {\n\t\t  Radio,\n\t\t  RadioButton,\n\t\t  RadioHintText,\n\t\t  RadioItem,\n\t\t  RadioLabel,\n\t\t} from \"@govtechmy/myds-react/radio\";\n\t\t\n\t\t<Radio disabled>\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"email\" id=\"email\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"email\">Email</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"email\">\n\t\t        We will send notifications to your registered email address.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"phone_call\" id=\"phone_call\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"phone_call\">Phone Call</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"phone_call\">\n\t\t        Our representative will call you on your provided phone number.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"text_message\" id=\"text_message\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"text_message\">Text Message</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"text_message\">\n\t\t        You will receive SMS updates on your mobile phone.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"postal_mail\" id=\"postal_mail\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"postal_mail\">Postal Mail</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"postal_mail\">\n\t\t        Not available at the moment.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t  <RadioItem>\n\t\t    <RadioButton\n\t\t      value=\"disable_notifications\"\n\t\t      id=\"disable_notifications\"\n\t\t    />\n\t\t    <RadioLabel htmlFor=\"disable_notifications\">\n\t\t      Disable Notifications\n\t\t    </RadioLabel>\n\t\t  </RadioItem>\n\t\t</Radio>\n\t);\n}",
                "import {\n  Radio,\n  RadioButton,\n  RadioHintText,\n  RadioItem,\n  RadioLabel,\n} from \"@govtechmy/myds-react/radio\";\nexport default function component() {\n\treturn (import {\n\t\t  Radio,\n\t\t  RadioButton,\n\t\t  RadioHintText,\n\t\t  RadioItem,\n\t\t  RadioLabel,\n\t\t} from \"@govtechmy/myds-react/radio\";\n\t\t\n\t\t<Radio>\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"email\" id=\"email\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"email\">Email</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"email\">\n\t\t        We will send notifications to your registered email address.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"phone_call\" id=\"phone_call\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"phone_call\">Phone Call</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"phone_call\">\n\t\t        Our representative will call you on your provided phone number.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t  <RadioItem>\n\t\t    <RadioButton value=\"text_message\" id=\"text_message\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"text_message\">Text Message</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"text_message\">\n\t\t        You will receive SMS updates on your mobile phone.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t  <RadioItem disabled>\n\t\t    <RadioButton value=\"postal_mail\" id=\"postal_mail\" />\n\t\t    <div className=\"grid\">\n\t\t      <RadioLabel htmlFor=\"postal_mail\">Postal Mail</RadioLabel>\n\t\t      <RadioHintText htmlFor=\"postal_mail\">\n\t\t        Not available at the moment.\n\t\t      </RadioHintText>\n\t\t    </div>\n\t\t  </RadioItem>\n\t\t  <RadioItem>\n\t\t    <RadioButton\n\t\t      value=\"disable_notifications\"\n\t\t      id=\"disable_notifications\"\n\t\t    />\n\t\t    <RadioLabel htmlFor=\"disable_notifications\">\n\t\t      Disable Notifications\n\t\t    </RadioLabel>\n\t\t  </RadioItem>\n\t\t</Radio>\n\t);\n}",
                "import {\n  Radio,\n  RadioButton,\n  RadioHintText,\n  RadioItem,\n  RadioLabel,\n} from \"@govtechmy/myds-react/radio\";\nexport default function component() {\n\treturn (const [value, setValue] = useState(\"\")\n\t\t\n\t\t<Radio value={value} onValueChange={setValue}>\n\t\t  {/* ... */}\n\t\t</Radio>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Search Bar",
        "description": "Allow users to enter a query or keyword to search through content within a website.",
        "docs": {
            "import": "import {\n  SearchBar,\n  SearchBarInput,\n  SearchBarInputContainer,\n  SearchBarSearchButton,\n  SearchBarResults,\n  SearchBarResultsList,\n  SearchBarResultsItem,\n  SearchBarClearButton,\n  SearchBarHint,\n} from \"@govtechmy/myds-react/search-bar\";",
            "use": "export default () => (\n  <SearchBar size=\"large\">\n    <SearchBarInputContainer>\n      <SearchBarInput value={query} onValueChange={setQuery} />\n      <SearchBarHint>\n        Press <Pill size=\"small\">/</Pill> to search\n      </SearchBarHint>\n      <SearchBarClearButton />\n      <SearchBarSearchButton />\n    </SearchBarInputContainer>\n    <SearchBarResults open={true}>\n      <SearchBarResultsList>\n        <SearchBarResultsItem value=\"foo\" onSelect={...} >\n          Foo\n        </SearchBarResultsItem>\n        <SearchBarResultsItem value=\"bar\" onSelect={...} >\n          Bar\n        </SearchBarResultsItem>\n      </SearchBarResultsList>\n    </SearchBarResults>\n  </SearchBar>\n);",
            "props": {
                "SearchBar": {
                    "size": {
                        "description": "Sizes of the search bar",
                        "type": "enum",
                        "typeDescription": "small | medium | large",
                        "default": "medium"
                    }
                },
                "SearchBarInput": {
                    "value": {
                        "description": "Input value",
                        "type": "string"
                    },
                    "onValueChange": {
                        "description": "Callback function when the input changes",
                        "type": "function",
                        "typeDescription": "(value: string) => void"
                    }
                },
                "SearchBarResults": {
                    "open": {
                        "description": "Whether the results pop-up is open or closed",
                        "type": "boolean"
                    }
                }
            },
            "examples": [
                "import {\n  SearchBar,\n  SearchBarInput,\n  SearchBarInputContainer,\n  SearchBarSearchButton,\n  SearchBarResults,\n  SearchBarResultsList,\n  SearchBarResultsItem,\n  SearchBarClearButton,\n  SearchBarHint,\n} from \"@govtechmy/myds-react/search-bar\";\nexport default function component() {\n\treturn (import {\n\t\t    SearchBar,\n\t\t    SearchBarInput,\n\t\t    SearchBarInputContainer,\n\t\t    SearchBarSearchButton,\n\t\t} from \"@govtechmy/myds-react/search-bar\";\n\t\t\n\t\t<SearchBar size=\"small\">\n\t\t  <SearchBarInputContainer>\n\t\t    <SearchBarInput placeholder=\"Search by name\" />\n\t\t    <SearchBarSearchButton />\n\t\t  </SearchBarInputContainer>\n\t\t</SearchBar>\n\t\t\n\t\t<SearchBar size=\"medium\">\n\t\t  <SearchBarInputContainer>\n\t\t    <SearchBarInput placeholder=\"Search by name\" />\n\t\t    <SearchBarSearchButton />\n\t\t  </SearchBarInputContainer>\n\t\t</SearchBar>\n\t\t\n\t\t<SearchBar size=\"large\">\n\t\t  <SearchBarInputContainer>\n\t\t    <SearchBarInput placeholder=\"Search by name\" />\n\t\t    <SearchBarSearchButton />\n\t\t  </SearchBarInputContainer>\n\t\t</SearchBar>\n\t);\n}",
                "import {\n  SearchBar,\n  SearchBarInput,\n  SearchBarInputContainer,\n  SearchBarSearchButton,\n  SearchBarResults,\n  SearchBarResultsList,\n  SearchBarResultsItem,\n  SearchBarClearButton,\n  SearchBarHint,\n} from \"@govtechmy/myds-react/search-bar\";\nexport default function component() {\n\treturn (import {\n\t\t    SearchBar,\n\t\t    SearchBarInput,\n\t\t    SearchBarInputContainer,\n\t\t    SearchBarSearchButton,\n\t\t    SearchBarClearButton,\n\t\t} from \"@govtechmy/myds-react/search-bar\";\n\t\t\n\t\tconst [query, setQuery] = useState(\"Hello world!\");\n\t\tconst showClearButton = query.length > 0;\n\t\t\n\t\t<SearchBar size=\"large\">\n\t\t  <SearchBarInputContainer>\n\t\t    <SearchBarInput\n\t\t      placeholder=\"Search by name\"\n\t\t      value={query}\n\t\t      onValueChange={setQuery}\n\t\t    />\n\t\t    {showClearButton && (\n\t\t      <SearchBarClearButton onClick={() => setQuery(\"\")} />\n\t\t    )}\n\t\t    <SearchBarSearchButton />\n\t\t  </SearchBarInputContainer>\n\t\t</SearchBar>\n\t);\n}",
                "import {\n  SearchBar,\n  SearchBarInput,\n  SearchBarInputContainer,\n  SearchBarSearchButton,\n  SearchBarResults,\n  SearchBarResultsList,\n  SearchBarResultsItem,\n  SearchBarClearButton,\n  SearchBarHint,\n} from \"@govtechmy/myds-react/search-bar\";\nexport default function component() {\n\treturn (import {\n\t\t    SearchBar,\n\t\t    SearchBarInput,\n\t\t    SearchBarInputContainer,\n\t\t    SearchBarSearchButton,\n\t\t    SearchBarHint,\n\t\t} from \"@govtechmy/myds-react/search-bar\";\n\t\timport { Pill } from \"@govtechmy/myds-react/pill\";\n\t\t\n\t\t<SearchBar size=\"large\">\n\t\t  <SearchBarInputContainer>\n\t\t    <SearchBarInput placeholder=\"Search by name\" />\n\t\t    <SearchBarHint className=\"hidden lg:flex\">\n\t\t      Press <Pill size=\"small\">/</Pill> to search\n\t\t    </SearchBarHint>\n\t\t    <SearchBarSearchButton />\n\t\t  </SearchBarInputContainer>\n\t\t</SearchBar>\n\t);\n}",
                "import {\n  SearchBar,\n  SearchBarInput,\n  SearchBarInputContainer,\n  SearchBarSearchButton,\n  SearchBarResults,\n  SearchBarResultsList,\n  SearchBarResultsItem,\n  SearchBarClearButton,\n  SearchBarHint,\n} from \"@govtechmy/myds-react/search-bar\";\nexport default function component() {\n\treturn (import {\n\t\t  SearchBar,\n\t\t  SearchBarInput,\n\t\t  SearchBarInputContainer,\n\t\t  SearchBarSearchButton,\n\t\t  SearchBarResults,\n\t\t  SearchBarResultsList,\n\t\t  SearchBarResultsItem,\n\t\t} from \"@govtechmy/myds-react/search-bar\";\n\t\timport {\n\t\t  ChevronRightIcon,\n\t\t  UserIcon,\n\t\t} from \"@govtechmy/myds-react/icon\";\n\t\t\n\t\t<SearchBar size=\"large\">\n\t\t  <SearchBarInputContainer>\n\t\t    <SearchBarInput placeholder=\"Search by name\" />\n\t\t    <SearchBarSearchButton />\n\t\t  </SearchBarInputContainer>\n\t\t  <SearchBarResults open>\n\t\t    <SearchBarResultsList className=\"max-h-[400px] overflow-y-scroll\">\n\t\t      {results.map((item) => (\n\t\t        <SearchBarResultsItem key={item.name} value={item.name}>\n\t\t          <span className=\"bg-primary-50 text-txt-primary rounded-full p-px\">\n\t\t            <UserIcon className=\"size-4\" />\n\t\t          </span>\n\t\t          <p className=\"line-clamp-1 flex-1\">\n\t\t            {item.name}{\" \"}\n\t\t            <span className=\"text-txt-black-500 text-xs\">\n\t\t              {item.note}\n\t\t            </span>\n\t\t          </p>\n\t\t          <ChevronRightIcon />\n\t\t        </SearchBarResultsItem>\n\t\t      ))}\n\t\t    </SearchBarResultsList>\n\t\t  </SearchBarResults>\n\t\t</SearchBar>\n\t);\n}",
                "import {\n  SearchBar,\n  SearchBarInput,\n  SearchBarInputContainer,\n  SearchBarSearchButton,\n  SearchBarResults,\n  SearchBarResultsList,\n  SearchBarResultsItem,\n  SearchBarClearButton,\n  SearchBarHint,\n} from \"@govtechmy/myds-react/search-bar\";\nexport default function component() {\n\treturn (import {\n\t\t  SearchBar,\n\t\t  SearchBarInput,\n\t\t  SearchBarInputContainer,\n\t\t  SearchBarSearchButton,\n\t\t  SearchBarResults,\n\t\t  SearchBarResultsList,\n\t\t  SearchBarResultsItem,\n\t\t} from \"@govtechmy/myds-react/search-bar\";\n\t\timport {\n\t\t  ChevronRightIcon,\n\t\t  MoneyIcon,\n\t\t  StarIcon,\n\t\t  TrophyIcon,\n\t\t  UserIcon,\n\t\t} from \"@govtechmy/myds-react/icon\";\n\t\t\n\t\t<SearchBar size=\"large\">\n\t\t  <SearchBarInputContainer>\n\t\t    <SearchBarInput placeholder=\"Search by name\" />\n\t\t    <SearchBarSearchButton />\n\t\t  </SearchBarInputContainer>\n\t\t  <SearchBarResults open>\n\t\t    <SearchBarResultsList className=\"max-h-[400px] overflow-y-scroll\">\n\t\t      {Object.entries(groupedResults).map(([group, items]) => (\n\t\t        <SearchBarResultsGroup key={group} heading={group}>\n\t\t          {items.map((item) => (\n\t\t            <SearchBarResultsItem key={item.name} value={item.name}>\n\t\t              <span className=\"bg-primary-50 text-txt-primary rounded-full p-px\">\n\t\t                {group === \"Arts\" ? (\n\t\t                  <StarIcon className=\"size-4\" />\n\t\t                ) : group === \"Sports\" ? (\n\t\t                  <TrophyIcon className=\"size-4\" />\n\t\t                ) : (\n\t\t                  <MoneyIcon className=\"size-4\" />\n\t\t                )}\n\t\t              </span>\n\t\t              <p className=\"line-clamp-1 flex-1\">\n\t\t                {item.name}{\" \"}\n\t\t                <span className=\"text-txt-black-500 text-xs\">\n\t\t                  {item.note}\n\t\t                </span>\n\t\t              </p>\n\t\t              <ChevronRightIcon />\n\t\t            </SearchBarResultsItem>\n\t\t          ))}\n\t\t        </SearchBarResultsGroup>\n\t\t      ))}\n\t\t    </SearchBarResultsList>\n\t\t  </SearchBarResults>\n\t\t</SearchBar>\n\t);\n}",
                "import {\n  SearchBar,\n  SearchBarInput,\n  SearchBarInputContainer,\n  SearchBarSearchButton,\n  SearchBarResults,\n  SearchBarResultsList,\n  SearchBarResultsItem,\n  SearchBarClearButton,\n  SearchBarHint,\n} from \"@govtechmy/myds-react/search-bar\";\nexport default function component() {\n\treturn (import {\n\t\t  SearchBar,\n\t\t  SearchBarInput,\n\t\t  SearchBarInputContainer,\n\t\t  SearchBarSearchButton,\n\t\t  SearchBarResults,\n\t\t  SearchBarResultsList,\n\t\t  SearchBarResultsItem,\n\t\t  SearchBarClearButton,\n\t\t  SearchBarHint,\n\t\t} from \"@govtechmy/myds-react/search-bar\";\n\t\timport { Pill } from \"@govtechmy/myds-react/pill\";\n\t\timport {\n\t\t  ChevronRightIcon,\n\t\t  MoneyIcon,\n\t\t  StarIcon,\n\t\t  TrophyIcon,\n\t\t  UserIcon,\n\t\t} from \"@govtechmy/myds-react/icon\";\n\t\t\n\t\tconst [hasFocus, setHasFocus] = useState(false);\n\t\tconst [query, setQuery] = useState(\"\");\n\t\tconst hasQuery = query.length > 0;\n\t\t\n\t\tconst results = notableMalaysians.filter((person) =>\n\t\t  person.name.toLowerCase().includes(query.toLocaleLowerCase()),\n\t\t);\n\t\t\n\t\t<SearchBar\n\t\t  size=\"large\"\n\t\t  onBlur={(e) => {\n\t\t    const blurredByChild = e.currentTarget.contains(e.relatedTarget);\n\t\t    if (blurredByChild) return;\n\t\t    setHasFocus(false);\n\t\t  }}\n\t\t>\n\t\t  <SearchBarInputContainer>\n\t\t    <SearchBarInput\n\t\t      placeholder=\"Search by name\"\n\t\t      value={query}\n\t\t      onValueChange={setQuery}\n\t\t      onFocus={() => setHasFocus(true)}\n\t\t      onBlur={() => setHasFocus(false)}\n\t\t    />\n\t\t    {query && <SearchBarClearButton onClick={() => setQuery(\"\")} />}\n\t\t    <SearchBarSearchButton />\n\t\t    {!hasFocus && (\n\t\t      <SearchBarHint className=\"hidden lg:flex\">\n\t\t        Press <Pill size=\"small\">/</Pill> to search\n\t\t      </SearchBarHint>\n\t\t    )}\n\t\t  </SearchBarInputContainer>\n\t\t  <SearchBarResults open={hasQuery && hasFocus}>\n\t\t    {hasQuery && !results.length && (\n\t\t      <p className=\"text-txt-black-900 text-center\">No results found</p>\n\t\t    )}\n\t\t    {hasQuery && results.length > 0 && (\n\t\t      <SearchBarResultsList className=\"max-h-[400px] overflow-y-scroll\">\n\t\t        {results.map((item) => (\n\t\t          <SearchBarResultsItem key={item.name} value={item.name}>\n\t\t            <span className=\"bg-primary-50 text-txt-primary rounded-full p-px\">\n\t\t              <UserIcon className=\"size-4\" />\n\t\t            </span>\n\t\t            <p className=\"line-clamp-1 flex-1\">\n\t\t              {item.name}{\" \"}\n\t\t              <span className=\"text-txt-black-500 text-xs\">\n\t\t                {item.note}\n\t\t              </span>\n\t\t            </p>\n\t\t            <ChevronRightIcon />\n\t\t          </SearchBarResultsItem>\n\t\t        ))}\n\t\t      </SearchBarResultsList>\n\t\t    )}\n\t\t  </SearchBarResults>\n\t\t</SearchBar>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Table",
        "description": "Organizes information into rows and columns for easy readability. It accommodates various data types, including text, numbers, codes, call-to-action and links, enabling efficient presentation and comparison.",
        "docs": {
            "import": "import {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@govtechmy/myds-react/table\";",
            "use": "export default () => (\n  <Table>\n    <TableHeader>\n      <TableRow>\n        <TableHead />\n      </TableRow>\n    </TableHeader>\n    <TableBody>\n      <TableRow>\n        <TableCell />\n      </TableRow>\n    </TableBody>\n    <TableCaption />\n  </Table>\n);",
            "props": {
                "TableHead": {
                    "rowSpan": {
                        "description": "Number of rows that the cell is to span",
                        "type": "boolean",
                        "default": "false"
                    },
                    "colSpan": {
                        "description": "Number of columns that the cell is to span",
                        "type": "boolean",
                        "default": "false"
                    },
                    "scope": {
                        "description": "Specifies the type of data in the cell",
                        "type": "col | row | colgroup | rowgroup"
                    }
                },
                "TableCell": {
                    "rowSpan": {
                        "description": "Number of rows that the cell is to span",
                        "type": "boolean",
                        "default": "false"
                    },
                    "colSpan": {
                        "description": "Number of columns that the cell is to span",
                        "type": "boolean",
                        "default": "false"
                    },
                    "scope": {
                        "description": "Specifies the type of data in the cell",
                        "type": "col | row | colgroup | rowgroup"
                    }
                }
            },
            "examples": [
                "import {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@govtechmy/myds-react/table\";\nexport default function component() {\n\treturn (<Table>\n\t\t  <TableCaption>Audit log</TableCaption>\n\t\t  <TableHeader>\n\t\t    <TableRow>\n\t\t      <TableHead>Timestamp</TableHead>\n\t\t      <TableHead>Activity</TableHead>\n\t\t      <TableHead className=\"text-center\">Action Taken</TableHead>\n\t\t    </TableRow>\n\t\t  </TableHeader>\n\t\t  <TableBody>\n\t\t    <TableRow>\n\t\t      <TableCell> 2021-09-01 12:00:00 </TableCell>\n\t\t      <TableCell> Login attempt successful </TableCell>\n\t\t      <TableCell className=\"text-center\"> Ali </TableCell>\n\t\t    </TableRow>\n\t\t    <TableRow>\n\t\t      <TableCell> 2021-09-01 12:01:32 </TableCell>\n\t\t      <TableCell> Page visited: /company-a/inventory </TableCell>\n\t\t      <TableCell className=\"text-center\"> Ali </TableCell>\n\t\t    </TableRow>\n\t\t    <TableRow>\n\t\t      <TableCell> 2021-09-01 12:02:03 </TableCell>\n\t\t      <TableCell> New inventory item added: MacBook Pro </TableCell>\n\t\t      <TableCell className=\"text-center\"> Ali </TableCell>\n\t\t    </TableRow>\n\t\t    <TableRow>\n\t\t      <TableCell> 2021-09-01 12:03:45 </TableCell>\n\t\t      <TableCell>\n\t\t        Inventory: MacBook Pro stock count updated: 100 units\n\t\t      </TableCell>\n\t\t      <TableCell className=\"text-center\"> Ali </TableCell>\n\t\t    </TableRow>\n\t\t  </TableBody>\n\t\t</Table>\n\t);\n}",
                "import {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@govtechmy/myds-react/table\";\nexport default function component() {\n\treturn (<Table>\n\t\t    <TableCaption>Tax Assessment Year 2023</TableCaption>\n\t\t    <TableHeader>\n\t\t        <TableRow>\n\t\t        <TableHead>Category</TableHead>\n\t\t        <TableHead>Chargeable Income</TableHead>\n\t\t        <TableHead>Calculation (RM)</TableHead>\n\t\t        <TableHead className=\"text-center\">Rate</TableHead>\n\t\t        <TableHead className=\"text-end\">Tax</TableHead>\n\t\t        </TableRow>\n\t\t    </TableHeader>\n\t\t    <TableBody>\n\t\t        <TableRow>\n\t\t        <TableCell>A</TableCell>\n\t\t        <TableCell>0 - 5,000</TableCell>\n\t\t        <TableCell>On the First 5,000</TableCell>\n\t\t        <TableCell className=\"text-center\">0</TableCell>\n\t\t        <TableCell className=\"text-end\">RM 0</TableCell>\n\t\t        </TableRow>\n\t\t        <TableRow>\n\t\t        <TableCell rowSpan={2}>B</TableCell>\n\t\t        <TableCell rowSpan={2}>5,000 - 20,000</TableCell>\n\t\t        <TableCell>On the First 5,000</TableCell>\n\t\t        <TableCell className=\"text-center\" rowSpan={2}>1%</TableCell>\n\t\t        <TableCell className=\"text-end\">RM 0</TableCell>\n\t\t        </TableRow>\n\t\t        <TableRow>\n\t\t        <TableCell>Next 15,000</TableCell>\n\t\t        <TableCell className=\"text-end\">RM 150</TableCell>\n\t\t        </TableRow>\n\t\t        <TableRow>\n\t\t        <TableCell rowSpan={2}>C</TableCell>\n\t\t        <TableCell rowSpan={2}>20,001 - 35,000</TableCell>\n\t\t        <TableCell>On the First 20,000</TableCell>\n\t\t        <TableCell className=\"text-center\" rowSpan={2}>3%</TableCell>\n\t\t        <TableCell className=\"text-end\">RM 150</TableCell>\n\t\t        </TableRow>\n\t\t        <TableRow>\n\t\t        <TableCell>Next 15,000</TableCell>\n\t\t        <TableCell className=\"text-end\">RM 450</TableCell>\n\t\t        </TableRow>\n\t\t    </TableBody>\n\t\t</Table>\n\t);\n}",
                "import {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@govtechmy/myds-react/table\";\nexport default function component() {\n\treturn (<Table>\n\t\t    <TableCaption>Tax Assessment Year 2023</TableCaption>\n\t\t    <TableHeader>\n\t\t        <TableRow>\n\t\t        <TableHead>Category</TableHead>\n\t\t        <TableHead>Chargeable Income</TableHead>\n\t\t        <TableHead>Calculation (RM)</TableHead>\n\t\t        <TableHead className=\"text-center\">Rate</TableHead>\n\t\t        <TableHead className=\"text-end\">Tax</TableHead>\n\t\t        </TableRow>\n\t\t    </TableHeader>\n\t\t    <TableBody>\n\t\t        <TableRow>\n\t\t        <TableCell>A</TableCell>\n\t\t        <TableCell>0 - 5,000</TableCell>\n\t\t        <TableCell>On the First 5,000</TableCell>\n\t\t        <TableCell className=\"text-center\">0</TableCell>\n\t\t        <TableCell className=\"text-end\">RM 0</TableCell>\n\t\t        </TableRow>\n\t\t        <TableRow>\n\t\t        <TableCell rowSpan={2}>B</TableCell>\n\t\t        <TableCell rowSpan={2}>5,000 - 20,000</TableCell>\n\t\t        <TableCell>On the First 5,000</TableCell>\n\t\t        <TableCell className=\"text-center\" rowSpan={2}>1%</TableCell>\n\t\t        <TableCell className=\"text-end\">RM 0</TableCell>\n\t\t        </TableRow>\n\t\t        <TableRow>\n\t\t        <TableCell>Next 15,000</TableCell>\n\t\t        <TableCell className=\"text-end\">RM 150</TableCell>\n\t\t        </TableRow>\n\t\t        <TableRow>\n\t\t        <TableCell rowSpan={2}>C</TableCell>\n\t\t        <TableCell rowSpan={2}>20,001 - 35,000</TableCell>\n\t\t        <TableCell>On the First 20,000</TableCell>\n\t\t        <TableCell className=\"text-center\" rowSpan={2}>3%</TableCell>\n\t\t        <TableCell className=\"text-end\">RM 150</TableCell>\n\t\t        </TableRow>\n\t\t        <TableRow>\n\t\t        <TableCell>Next 15,000</TableCell>\n\t\t        <TableCell className=\"text-end\">RM 450</TableCell>\n\t\t        </TableRow>\n\t\t    </TableBody>\n\t\t    <TableFooter>\n\t\t        <TableRow>\n\t\t            <TableCell className=\"text-end font-medium\" colSpan={4}>Total Tax</TableCell>\n\t\t            <TableCell className=\"text-end font-medium\">RM 600</TableCell>\n\t\t        </TableRow>\n\t\t    </TableFooter>\n\t\t</Table>\n\t);\n}",
                "import {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@govtechmy/myds-react/table\";\nexport default function component() {\n\treturn (<Table>\n\t\t    <TableCaption>Tax Assessment Year 2023</TableCaption>\n\t\t    <TableHeader>\n\t\t        <TableRow>\n\t\t        <TableHead>Category</TableHead>\n\t\t        <TableHead>Chargeable Income</TableHead>\n\t\t        <TableHead>Calculation (RM)</TableHead>\n\t\t        <TableHead className=\"text-center\">Rate</TableHead>\n\t\t        <TableHead className=\"text-end\">Tax</TableHead>\n\t\t        </TableRow>\n\t\t    </TableHeader>\n\t\t    <TableBody>\n\t\t        <TableRow>\n\t\t        <TableCell>A</TableCell>\n\t\t        <TableCell>0 - 5,000</TableCell>\n\t\t        <TableCell>On the First 5,000</TableCell>\n\t\t        <TableCell className=\"text-center\">0</TableCell>\n\t\t        <TableCell className=\"text-end\">RM 0</TableCell>\n\t\t        </TableRow>\n\t\t        <TableRow>\n\t\t        <TableCell rowSpan={2}>B</TableCell>\n\t\t        <TableCell rowSpan={2}>5,000 - 20,000</TableCell>\n\t\t        <TableCell>On the First 5,000</TableCell>\n\t\t        <TableCell className=\"text-center\" rowSpan={2}>1%</TableCell>\n\t\t        <TableCell className=\"text-end\">RM 0</TableCell>\n\t\t        </TableRow>\n\t\t        <TableRow>\n\t\t        <TableCell>Next 15,000</TableCell>\n\t\t        <TableCell className=\"text-end\">RM 150</TableCell>\n\t\t        </TableRow>\n\t\t        <TableRow>\n\t\t        <TableCell rowSpan={2}>C</TableCell>\n\t\t        <TableCell rowSpan={2}>20,001 - 35,000</TableCell>\n\t\t        <TableCell>On the First 20,000</TableCell>\n\t\t        <TableCell className=\"text-center\" rowSpan={2}>3%</TableCell>\n\t\t        <TableCell className=\"text-end\">RM 150</TableCell>\n\t\t        </TableRow>\n\t\t        <TableRow>\n\t\t        <TableCell>Next 15,000</TableCell>\n\t\t        <TableCell className=\"text-end\">RM 450</TableCell>\n\t\t        </TableRow>\n\t\t    </TableBody>\n\t\t    <TableFooter>\n\t\t        <TableRow>\n\t\t            <TableCell className=\"text-end font-medium\" colSpan={4}>Total Tax</TableCell>\n\t\t            <TableCell className=\"text-end font-medium\">RM 600</TableCell>\n\t\t        </TableRow>\n\t\t    </TableFooter>\n\t\t</Table>\n\t);\n}",
                "import {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@govtechmy/myds-react/table\";\nexport default function component() {\n\treturn (<Table>\n\t\t  <TableCaption>Audit log</TableCaption>\n\t\t  <TableHeader>\n\t\t    <TableRow>\n\t\t      <TableHead>Timestamp</TableHead>\n\t\t      <TableHead>Activity</TableHead>\n\t\t      <TableHead>Action Taken</TableHead>\n\t\t    </TableRow>\n\t\t  </TableHeader>\n\t\t  <TableBody>\n\t\t    <TableRow>\n\t\t      <TableEmpty />\n\t\t    </TableRow>\n\t\t    </TableBody>\n\t\t</Table>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Spinner",
        "description": "A customizable loading spinner component that provides visual feedback for loading states.",
        "docs": {
            "import": "import { Spinner } from \"@govtechmy/myds-react/spinner\";",
            "use": "export default () => <Spinner />;",
            "props": {
                "Spinner": {
                    "color": {
                        "description": "Color variant of the spinner",
                        "type": "enum",
                        "typeDescription": "white | gray ",
                        "default": "gray"
                    },
                    "size": {
                        "description": "Sizes of the spinner",
                        "type": "enum",
                        "typeDescription": "small | medium | large",
                        "default": "small"
                    },
                    "show": {
                        "description": "Show or Hide Spinner",
                        "type": "boolean",
                        "typeDescription": "true | false",
                        "default": "true"
                    }
                }
            },
            "examples": [
                "import { Spinner } from \"@govtechmy/myds-react/spinner\";\nexport default function component() {\n\treturn (import { Spinner } from \"@govtechmy/myds-react/spinner\";\n\t\t\n\t\t/** Color: Gray **/\n\t\t\n\t\t<Button variant=\"default-outline\">\n\t\t  Loading Gray\n\t\t  <Spinner color={\"gray\"} />\n\t\t</Button>\n\t\t\n\t\t/** Color: White **/\n\t\t\n\t\t<Button>\n\t\t  Loading White\n\t\t  <Spinner color={\"white\"} />\n\t\t</Button>\n\t\t\n\t\t/** Varian: Default **/\n\t\t\n\t\t<Button variant=\"default-outline\">\n\t\t  Loading Default\n\t\t  <Spinner />\n\t\t</Button>\n\t);\n}",
                "import { Spinner } from \"@govtechmy/myds-react/spinner\";\nexport default function component() {\n\treturn (import { Button } from \"@govtechmy/myds-react/button\";\n\t\t\n\t\t/** Size **/\n\t\t\n\t\t<Button variant=\"default-outline\">\n\t\t  <span>small</span>\n\t\t  <Spinner size={\"small\"} />\n\t\t</Button>\n\t\t\n\t\t<Button variant=\"default-outline\">\n\t\t  <span>medium</span>\n\t\t  <Spinner size={\"medium\"} />\n\t\t</Button>\n\t\t\n\t\t<Button variant=\"default-outline\">\n\t\t  <span>large</span>\n\t\t  <Spinner size={\"large\"} />\n\t\t</Button>\n\t\t\n\t\t<Button variant=\"default-outline\">\n\t\t  <span>default</span>\n\t\t  <Spinner />\n\t\t</Button>\n\t);\n}",
                "import { Spinner } from \"@govtechmy/myds-react/spinner\";\nexport default function component() {\n\treturn (import { Button } from \"@govtechmy/myds-react/button\";\n\t\t\n\t\t/** Show or Hide **/\n\t\t\n\t\t<Button variant=\"default-outline\">\n\t\t  <span>Spinner Show</span>\n\t\t  <Spinner show={true} />\n\t\t</Button>\n\t\t\n\t\t<Button variant=\"default-outline\">\n\t\t  <span>Spinner Hide</span>\n\t\t  <Spinner show={false} />\n\t\t</Button>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Checkbox",
        "description": "Allows users to make a binary choice, such as selecting or not selecting an option. It is commonly used in forms, settings, and filters to capture user input and preferences.",
        "docs": {
            "import": "import { Checkbox } from \"@govtechmy/myds-react/checkbox\";",
            "use": "export default () => <Checkbox />;",
            "props": {
                "Checkbox": {
                    "size": {
                        "description": "Size of the checkbox",
                        "type": "enum",
                        "typeDescription": "small | medium | large",
                        "default": "small"
                    },
                    "defaultChecked": {
                        "description": "Initial checked state of the checkbox (uncontrolled)",
                        "type": "boolean | indeterminate",
                        "default": "false"
                    },
                    "checked": {
                        "description": "State of the checkbox (controlled)",
                        "type": "boolean | indeterminate",
                        "default": "false"
                    },
                    "onCheckedChange": {
                        "description": "Checked event listener (controlled)",
                        "type": "(checked: boolean | indeterminate) => void",
                        "default": "false"
                    }
                }
            },
            "examples": [
                "import { Checkbox } from \"@govtechmy/myds-react/checkbox\";\nexport default function component() {\n\treturn (<Checkbox defaultChecked size=\"small\" />\n\t\t<Checkbox defaultChecked size=\"medium\" />\n\t\t<Checkbox defaultChecked size=\"large\" />\n\t);\n}",
                "import { Checkbox } from \"@govtechmy/myds-react/checkbox\";\nexport default function component() {\n\treturn (// Uncontrolled state\n\t\t<Label>\n\t\t  <Checkbox defaultChecked />\n\t\t  <span>Uncontrolled state</span>\n\t\t</Label>\n\t\t\n\t\t// Controlled state\n\t\t<Label>\n\t\t  <Checkbox checked={true} />\n\t\t  <span>Controlled state</span>\n\t\t</Label>\n\t);\n}",
                "import { Checkbox } from \"@govtechmy/myds-react/checkbox\";\nexport default function component() {\n\treturn (<Label>\n\t\t  <Checkbox defaultChecked disabled />\n\t\t  <span>Disabled state</span>\n\t\t</Label>\n\t);\n}",
                "import { Checkbox } from \"@govtechmy/myds-react/checkbox\";\nexport default function component() {\n\treturn (<Label>\n\t\t  <Checkbox defaultChecked=\"indeterminate\" />\n\t\t  <span>Indeterminate state</span>\n\t\t</Label>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Callout",
        "description": "Notifies users about important information related to their actions inside a Forms. Callouts can indicate success, warnings, errors, or provide additional information depending on the context inside a form.",
        "docs": {
            "import": "import {\n  Callout,\n  CalloutAction,\n  CalloutTitle,\n  CalloutContent,\n} from \"@govtechmy/myds-react/callout\";",
            "use": "export default () => (\n  <Callout>\n    <CalloutTitle />\n    <CalloutContent />\n    <CalloutAction>\n      <CalloutClose />\n    </CalloutAction>\n  </Callout>\n);",
            "props": {
                "Callout": {
                    "variant": {
                        "description": "Style variant of the callout",
                        "type": "enum",
                        "typeDescription": "info | success | warning | danger",
                        "default": "info"
                    },
                    "dismissible": {
                        "description": "Whether to display the dismiss button [X] on the top-right",
                        "type": "boolean"
                    },
                    "onDismiss": {
                        "description": "To capture the dismiss event",
                        "type": "() => void"
                    }
                }
            },
            "examples": [
                "import {\n  Callout,\n  CalloutAction,\n  CalloutTitle,\n  CalloutContent,\n} from \"@govtechmy/myds-react/callout\";\nexport default function component() {\n\treturn (/** Variant: Info **/\n\t\t\n\t\t<Callout variant=\"info\">\n\t\t  <CalloutTitle>Title</CalloutTitle>\n\t\t  <CalloutContent>\n\t\t    A description to explain the success, warning, info or error event\n\t\t  </CalloutContent>\n\t\t  <CalloutAction>\n\t\t    <Button variant=\"default-outline\">Call to Action</Button>\n\t\t  </CalloutAction>\n\t\t</Callout>\n\t\t\n\t\t/** Variant: Success **/\n\t\t\n\t\t<Callout variant=\"success\">\n\t\t  <CalloutTitle>Title</CalloutTitle>\n\t\t  <CalloutContent>\n\t\t    A description to explain the success, warning, info or error event\n\t\t  </CalloutContent>\n\t\t  <CalloutAction>\n\t\t    <Button variant=\"default-outline\">Call to Action</Button>\n\t\t  </CalloutAction>\n\t\t</Callout>\n\t\t\n\t\t/** Variant: Warning **/\n\t\t\n\t\t<Callout variant=\"warning\">\n\t\t  <CalloutTitle>Title</CalloutTitle>\n\t\t  <CalloutContent>\n\t\t    A description to explain the success, warning, info or error event\n\t\t  </CalloutContent>\n\t\t  <CalloutAction>\n\t\t    <Button variant=\"default-outline\">Call to Action</Button>\n\t\t  </CalloutAction>\n\t\t</Callout>\n\t\t\n\t\t/** Variant: Danger **/\n\t\t\n\t\t<Callout variant=\"danger\">\n\t\t  <CalloutTitle>Title</CalloutTitle>\n\t\t  <CalloutContent>\n\t\t    A description to explain the success, warning, info or error event\n\t\t  </CalloutContent>\n\t\t  <CalloutAction>\n\t\t    <Button variant=\"default-outline\">Call to Action</Button>\n\t\t  </CalloutAction>\n\t\t</Callout>\n\t);\n}",
                "import {\n  Callout,\n  CalloutAction,\n  CalloutTitle,\n  CalloutContent,\n} from \"@govtechmy/myds-react/callout\";\nexport default function component() {\n\treturn (/** Layout: Inline **/\n\t\t\n\t\t<Callout variant=\"info\">\n\t\t  <CalloutTitle>Title</CalloutTitle>\n\t\t  <CalloutAction>\n\t\t    <Button variant=\"default-outline\">Call to Action</Button>\n\t\t  </CalloutAction>\n\t\t</Callout>\n\t\t\n\t\t/** Layout: Stacked **/\n\t\t\n\t\t<Callout variant=\"success\">\n\t\t  <CalloutTitle>Title</CalloutTitle>\n\t\t  <CalloutContent>\n\t\t    A description to explain the success, warning, info or error event\n\t\t  </CalloutContent>\n\t\t  <CalloutAction>\n\t\t    <Button variant=\"default-outline\">Call to Action</Button>\n\t\t  </CalloutAction>\n\t\t</Callout>\n\t);\n}",
                "import {\n  Callout,\n  CalloutAction,\n  CalloutTitle,\n  CalloutContent,\n} from \"@govtechmy/myds-react/callout\";\nexport default function component() {\n\treturn (// Basic - Uncontrolled Dismiss State\n\t\t<Callout\n\t\t  dismissible\n\t\t  onDismiss={() => {\n\t\t    console.log(\"MYDS: Dismissed event captured!\");\n\t\t  }}\n\t\t>\n\t\t  <CalloutTitle>Title</CalloutTitle>\n\t\t  <CalloutContent>\n\t\t    A description to explain the success, warning, info or error event\n\t\t  </CalloutContent>\n\t\t  <CalloutAction>\n\t\t    <Button variant=\"default-outline\">Call to Action</Button>\n\t\t  </CalloutAction>\n\t\t</Callout>\n\t\t\n\t\t// Action - Dismiss Callout via CalloutAction Render Prop\n\t\t<Callout\n\t\t  dismissible\n\t\t  onDismiss={() => {\n\t\t    alert(\"Action taken before callout gets dismissed\");\n\t\t    console.log(\"MYDS: Dismissed event captured!\");\n\t\t  }}\n\t\t>\n\t\t  <CalloutTitle>Title</CalloutTitle>\n\t\t  <CalloutContent>\n\t\t    A description to explain the success, warning, info or error event\n\t\t  </CalloutContent>\n\t\t  <CalloutAction>\n\t\t    <CalloutClose>\n\t\t      <Button variant=\"default-outline\">Call to Action</Button>\n\t\t    </CalloutClose>\n\t\t  </CalloutAction>\n\t\t</Callout>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Input",
        "description": "The input component is a text input field that allows users to input text.",
        "docs": {
            "import": "import { Input } from \"@govtechmy/myds-react/input\";",
            "use": "<Input />",
            "props": {
                "Input": {
                    "size": {
                        "description": "Size of the input field",
                        "type": "enum",
                        "typeDescription": "small | medium | large",
                        "default": "small"
                    },
                    "placeholder": {
                        "description": "Placeholder text",
                        "type": "string"
                    },
                    "defaultValue": {
                        "description": "The default value of the input (uncontrolled)",
                        "type": "string"
                    },
                    "value": {
                        "description": "The value of the input (controlled)",
                        "type": "string"
                    },
                    "onChange": {
                        "description": "Callback function when the value of the input changes (controlled)",
                        "type": "function",
                        "typeDescription": "(value: string) => void"
                    },
                    "disabled": {
                        "type": "boolean",
                        "default": "false"
                    }
                },
                "InputIcon": {
                    "position": {
                        "description": "Position of the input icon",
                        "type": "left | right"
                    },
                    "children": {
                        "description": "Pass an icon component. Must be used within Input",
                        "type": "ReactNode"
                    }
                },
                "InputAddon": {
                    "children": {
                        "description": "Must be used within Input.append or Input.prepend",
                        "type": "ReactNode"
                    }
                }
            },
            "examples": [
                "import { Input } from \"@govtechmy/myds-react/input\";\nexport default function component() {\n\treturn (<Input size=\"small\" placeholder=\"Small\" />\n\t\t<Input size=\"medium\" placeholder=\"Medium\" />\n\t\t<Input size=\"large\" placeholder=\"Large\" />\n\t);\n}",
                "import { Input } from \"@govtechmy/myds-react/input\";\nexport default function component() {\n\treturn (<Input disabled placeholder=\"Disabled\" />\n\t\t    \n\t);\n}",
                "import { Input } from \"@govtechmy/myds-react/input\";\nexport default function component() {\n\treturn (<Input defaultValue=\"Uncontrolled\" />\n\t\t<Input value=\"Controlled\" />\n\t);\n}",
                "import { Input } from \"@govtechmy/myds-react/input\";\nexport default function component() {\n\treturn (// Left Icon\n\t\t\n\t\t<Input placeholder=\"Input + Left Icon\">\n\t\t  <InputIcon position=\"left\">\n\t\t    <ArrowBackIcon />\n\t\t  </InputIcon>\n\t\t</Input>\n\t\t\n\t\t// Right Icon\n\t\t\n\t\t<Input placeholder=\"Input + Right Icon\">\n\t\t  <InputIcon position=\"right\">\n\t\t    <ArrowForwardIcon />\n\t\t  </InputIcon>\n\t\t</Input>\n\t\t\n\t\t// Left & Right Icon\n\t\t\n\t\t<Input placeholder=\"Input + Left & Right Icon\">\n\t\t  <InputIcon position=\"left\">\n\t\t    <ArrowBackIcon />\n\t\t  </InputIcon>\n\t\t  <InputIcon position=\"right\">\n\t\t    <ArrowForwardIcon />\n\t\t  </InputIcon>\n\t\t</Input>\n\t);\n}",
                "import { Input } from \"@govtechmy/myds-react/input\";\nexport default function component() {\n\treturn (// Prepend\n\t\t<Input\n\t\t  placeholder=\"Type something here\"\n\t\t  prepend={<InputAddon>RM</InputAddon>}\n\t\t/>\n\t\t\n\t\t// Append\n\t\t<Input\n\t\t  placeholder=\"Type something here\"\n\t\t  append={\n\t\t    <InputAddon>\n\t\t      <button>Submit</button>\n\t\t    </InputAddon>\n\t\t  }\n\t\t/>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Select",
        "description": "Allowing users to choose from a list of options. The component often appears as a popup menu where user clicks on the select button, to make a list of options appear.",
        "docs": {
            "import": "import {\n  Select,\n  SelectGroup,\n  SelectGroupTitle,\n  SelectValue,\n  SelectTrigger,\n  SelectLabel,\n  SelectContent,\n  SelectHeader,\n  SelectFooter,\n  SelectItem,\n  SelectSeparator,\n} from \"@govtechmy/myds-react/select\";",
            "use": "export default () => (\n  <Select>\n    <SelectTrigger>\n      <SelectValue />\n    </SelectTrigger>\n    <SelectContent>\n      <SelectHeader />\n      <SelectGroup>\n        <SelectGroupTitle />\n        <SelectItem />\n      </SelectGroup>\n      <SelectSeparator />\n      <SelectFooter />\n    </SelectContent>\n  </Select>\n);",
            "props": {
                "Select": {
                    "multiple": {
                        "description": "Whether the select allows multiple selection",
                        "type": "boolean",
                        "default": "false"
                    },
                    "size": {
                        "description": "Size of the select",
                        "type": "enum",
                        "typeDescription": "small | medium | large",
                        "default": "small"
                    },
                    "variant": {
                        "description": "Variant of the select value display",
                        "type": "enum",
                        "typeDescription": "default | ghost",
                        "default": "default"
                    },
                    "defaultValue": {
                        "description": "Initial state of the select (uncontrolled)",
                        "type": "string | string[]",
                        "default": "false"
                    },
                    "value": {
                        "description": "State of the select (controlled)",
                        "type": "string | string[]",
                        "default": "false"
                    },
                    "onValueChange": {
                        "description": "Change event listener (controlled)",
                        "type": "(date: Date ) => void"
                    },
                    "disabled": {
                        "description": "Disabled state for select trigger",
                        "type": "boolean",
                        "default": "false"
                    }
                },
                "SelectValue": {
                    "label": {
                        "description": "Label of the select value",
                        "type": "string"
                    },
                    "children": {
                        "description": "(Optional) Custom value display",
                        "type": "(value: string | string[]) => ReactNode"
                    },
                    "placeholder": {
                        "description": "Placeholder content",
                        "type": "ReactNode"
                    }
                },
                "SelectItem": {
                    "value": {
                        "description": "Value of the select option. Returned when selected",
                        "type": "string",
                        "default": "string"
                    },
                    "disabled": {
                        "description": "Whether the select option is disabled",
                        "type": "boolean",
                        "default": "false"
                    }
                }
            },
            "examples": [
                "import {\n  Select,\n  SelectGroup,\n  SelectGroupTitle,\n  SelectValue,\n  SelectTrigger,\n  SelectLabel,\n  SelectContent,\n  SelectHeader,\n  SelectFooter,\n  SelectItem,\n  SelectSeparator,\n} from \"@govtechmy/myds-react/select\";\nexport default function component() {\n\treturn (// Small\n\t\t<Select size=\"small\" variant=\"outline\">\n\t\t  <SelectTrigger>\n\t\t    <SelectValue label=\"Fruit\" placeholder=\"Select\" />\n\t\t  </SelectTrigger>\n\t\t  <SelectContent>\n\t\t    <SelectItem value=\"apple\">Apple</SelectItem>\n\t\t    <SelectItem value=\"banana\">Banana</SelectItem>\n\t\t    <SelectItem value=\"blueberry\">Blueberry</SelectItem>\n\t\t    <SelectItem value=\"grapes\">Grapes</SelectItem>\n\t\t    <SelectItem value=\"pineapple\">Pineapple</SelectItem>\n\t\t  </SelectContent>\n\t\t</Select>\n\t\t\n\t\t// Medium\n\t\t<Select size=\"medium\" variant=\"outline\">\n\t\t  <SelectTrigger>\n\t\t    <SelectValue label=\"Fruit\" placeholder=\"Select\" />\n\t\t  </SelectTrigger>\n\t\t  <SelectContent>\n\t\t    <SelectItem value=\"apple\">Apple</SelectItem>\n\t\t    <SelectItem value=\"banana\">Banana</SelectItem>\n\t\t    <SelectItem value=\"blueberry\">Blueberry</SelectItem>\n\t\t    <SelectItem value=\"grapes\">Grapes</SelectItem>\n\t\t    <SelectItem value=\"pineapple\">Pineapple</SelectItem>\n\t\t  </SelectContent>\n\t\t</Select>\n\t\t\n\t\t\n\t\t// Large\n\t\t<Select size=\"large\" variant=\"outline\">\n\t\t  <SelectTrigger>\n\t\t    <SelectValue label=\"Fruit\" placeholder=\"Select\" />\n\t\t  </SelectTrigger>\n\t\t  <SelectContent>\n\t\t    <SelectItem value=\"apple\">Apple</SelectItem>\n\t\t    <SelectItem value=\"banana\">Banana</SelectItem>\n\t\t    <SelectItem value=\"blueberry\">Blueberry</SelectItem>\n\t\t    <SelectItem value=\"grapes\">Grapes</SelectItem>\n\t\t    <SelectItem value=\"pineapple\">Pineapple</SelectItem>\n\t\t  </SelectContent>\n\t\t</Select>\n\t);\n}",
                "import {\n  Select,\n  SelectGroup,\n  SelectGroupTitle,\n  SelectValue,\n  SelectTrigger,\n  SelectLabel,\n  SelectContent,\n  SelectHeader,\n  SelectFooter,\n  SelectItem,\n  SelectSeparator,\n} from \"@govtechmy/myds-react/select\";\nexport default function component() {\n\treturn (<Select size=\"small\" variant=\"outline\">\n\t\t  <SelectTrigger>\n\t\t    <SelectValue label=\"Fruit\" placeholder=\"Select\" />\n\t\t  </SelectTrigger>\n\t\t  <SelectContent>\n\t\t    <SelectItem value=\"apple\">Apple</SelectItem>\n\t\t    <SelectItem value=\"banana\">Banana</SelectItem>\n\t\t    <SelectItem value=\"blueberry\">Blueberry</SelectItem>\n\t\t    <SelectItem value=\"grapes\">Grapes</SelectItem>\n\t\t    <SelectItem value=\"pineapple\">Pineapple</SelectItem>\n\t\t  </SelectContent>\n\t\t</Select>\n\t\t\n\t\t<Select size=\"small\" variant=\"ghost\">\n\t\t  <SelectTrigger>\n\t\t    <SelectValue label=\"Fruit\" placeholder=\"Select\" />\n\t\t  </SelectTrigger>\n\t\t  <SelectContent>\n\t\t    <SelectItem value=\"apple\">Apple</SelectItem>\n\t\t    <SelectItem value=\"banana\">Banana</SelectItem>\n\t\t    <SelectItem value=\"blueberry\">Blueberry</SelectItem>\n\t\t    <SelectItem value=\"grapes\">Grapes</SelectItem>\n\t\t    <SelectItem value=\"pineapple\">Pineapple</SelectItem>\n\t\t  </SelectContent>\n\t\t</Select>\n\t);\n}",
                "import {\n  Select,\n  SelectGroup,\n  SelectGroupTitle,\n  SelectValue,\n  SelectTrigger,\n  SelectLabel,\n  SelectContent,\n  SelectHeader,\n  SelectFooter,\n  SelectItem,\n  SelectSeparator,\n} from \"@govtechmy/myds-react/select\";\nexport default function component() {\n\treturn (// Disable the entire select\n\t\t<Select size=\"small\" variant=\"outline\" disabled>\n\t\t    <SelectTrigger>\n\t\t        <SelectValue label=\"Fruit\" placeholder=\"Select\" />\n\t\t    </SelectTrigger>\n\t\t    <SelectContent>\n\t\t        <SelectItem value=\"apple\">Apple</SelectItem>\n\t\t        <SelectItem value=\"banana\">Banana</SelectItem>\n\t\t        <SelectItem value=\"blueberry\">Blueberry</SelectItem>\n\t\t        <SelectItem value=\"grapes\">Grapes</SelectItem>\n\t\t        <SelectItem value=\"pineapple\">Pineapple</SelectItem>\n\t\t    </SelectContent>\n\t\t</Select>\n\t\t\n\t\t//  Disable individual options\n\t\t<Select size=\"small\" variant=\"outline\">\n\t\t    <SelectTrigger>\n\t\t        <SelectValue label=\"Fruit\" placeholder=\"Select\" />\n\t\t    </SelectTrigger>\n\t\t    <SelectContent>\n\t\t        <SelectItem value=\"apple\" disabled>Apple</SelectItem>\n\t\t        <SelectItem value=\"banana\">Banana</SelectItem>\n\t\t        <SelectItem value=\"blueberry\" disabled>Blueberry</SelectItem>\n\t\t        <SelectItem value=\"grapes\">Grapes</SelectItem>\n\t\t        <SelectItem value=\"pineapple\">Pineapple</SelectItem>\n\t\t    </SelectContent>\n\t\t</Select>\n\t);\n}",
                "import {\n  Select,\n  SelectGroup,\n  SelectGroupTitle,\n  SelectValue,\n  SelectTrigger,\n  SelectLabel,\n  SelectContent,\n  SelectHeader,\n  SelectFooter,\n  SelectItem,\n  SelectSeparator,\n} from \"@govtechmy/myds-react/select\";\nexport default function component() {\n\treturn (<Select size=\"small\" variant=\"outline\">\n\t\t  <SelectTrigger>\n\t\t    <SelectValue placeholder=\"Grouped Option Select \" />\n\t\t  </SelectTrigger>\n\t\t  <SelectContent>\n\t\t    <SelectGroup>\n\t\t      <SelectGroupTitle>Fruits</SelectGroupTitle>\n\t\t      <SelectItem value=\"apple\">Apple</SelectItem>\n\t\t      <SelectItem value=\"banana\">Banana</SelectItem>\n\t\t      <SelectItem value=\"blueberry\">Blueberry</SelectItem>\n\t\t      <SelectItem value=\"grapes\">Grapes</SelectItem>\n\t\t      <SelectItem value=\"pineapple\">Pineapple</SelectItem>\n\t\t    </SelectGroup>\n\t\t    <SelectGroup>\n\t\t      <SelectGroupTitle>Meat</SelectGroupTitle>\n\t\t      <SelectItem value=\"chicken\">Chicken</SelectItem>\n\t\t      <SelectItem value=\"beef\">Beef</SelectItem>\n\t\t      <SelectItem value=\"lamb\">Lamb</SelectItem>\n\t\t      <SelectItem value=\"fish\">Fish</SelectItem>\n\t\t    </SelectGroup>\n\t\t  </SelectContent>\n\t\t</Select>\n\t);\n}",
                "import {\n  Select,\n  SelectGroup,\n  SelectGroupTitle,\n  SelectValue,\n  SelectTrigger,\n  SelectLabel,\n  SelectContent,\n  SelectHeader,\n  SelectFooter,\n  SelectItem,\n  SelectSeparator,\n} from \"@govtechmy/myds-react/select\";\nexport default function component() {\n\treturn (<Select size=\"small\" variant=\"outline\">\n\t\t  <SelectTrigger>\n\t\t    <SelectValue placeholder=\"With Header\" />\n\t\t  </SelectTrigger>\n\t\t  <SelectContent>\n\t\t    <SelectHeader>\n\t\t      <Input size=\"small\">\n\t\t        <InputIcon position=\"right\">\n\t\t          <SearchIcon className=\"text-otl-gray-300\" />\n\t\t        </InputIcon>\n\t\t      </Input>\n\t\t    </SelectHeader>\n\t\t    <SelectItem value=\"apple\">Apple</SelectItem>\n\t\t    <SelectItem value=\"banana\">Banana</SelectItem>\n\t\t    <SelectItem value=\"blueberry\">Blueberry</SelectItem>\n\t\t    <SelectItem value=\"grapes\">Grapes</SelectItem>\n\t\t    <SelectItem value=\"pineapple\">Pineapple</SelectItem>\n\t\t  </SelectContent>\n\t\t</Select>\n\t);\n}",
                "import {\n  Select,\n  SelectGroup,\n  SelectGroupTitle,\n  SelectValue,\n  SelectTrigger,\n  SelectLabel,\n  SelectContent,\n  SelectHeader,\n  SelectFooter,\n  SelectItem,\n  SelectSeparator,\n} from \"@govtechmy/myds-react/select\";\nexport default function component() {\n\treturn (<Select size=\"small\" variant=\"outline\">\n\t\t  <SelectTrigger>\n\t\t    <SelectValue placeholder=\"With Header\" />\n\t\t  </SelectTrigger>\n\t\t  <SelectContent>\n\t\t    <SelectItem value=\"apple\">Apple</SelectItem>\n\t\t    <SelectItem value=\"banana\">Banana</SelectItem>\n\t\t    <SelectItem value=\"blueberry\">Blueberry</SelectItem>\n\t\t    <SelectItem value=\"grapes\">Grapes</SelectItem>\n\t\t    <SelectItem value=\"pineapple\">Pineapple</SelectItem>\n\t\t    <SelectFooter>\n\t\t      <Button variant={\"default-ghost\"} size={\"small\"}>\n\t\t        Reset\n\t\t      </Button>\n\t\t    </SelectFooter>\n\t\t  </SelectContent>\n\t\t</Select>\n\t);\n}",
                "import {\n  Select,\n  SelectGroup,\n  SelectGroupTitle,\n  SelectValue,\n  SelectTrigger,\n  SelectLabel,\n  SelectContent,\n  SelectHeader,\n  SelectFooter,\n  SelectItem,\n  SelectSeparator,\n} from \"@govtechmy/myds-react/select\";\nexport default function component() {\n\treturn (<Select multiple size=\"small\" variant=\"outline\">\n\t\t    <SelectTrigger>\n\t\t        <SelectValue label=\"Fruit\" />\n\t\t    </SelectTrigger>\n\t\t    <SelectContent>\n\t\t        <SelectItem value=\"apple\">Apple</SelectItem>\n\t\t        <SelectItem value=\"banana\">Banana</SelectItem>\n\t\t        <SelectItem value=\"blueberry\">Blueberry</SelectItem>\n\t\t        <SelectItem value=\"grapes\">Grapes</SelectItem>\n\t\t        <SelectItem value=\"pineapple\">Pineapple</SelectItem>\n\t\t    </SelectContent>\n\t\t</Select>\n\t);\n}",
                "import {\n  Select,\n  SelectGroup,\n  SelectGroupTitle,\n  SelectValue,\n  SelectTrigger,\n  SelectLabel,\n  SelectContent,\n  SelectHeader,\n  SelectFooter,\n  SelectItem,\n  SelectSeparator,\n} from \"@govtechmy/myds-react/select\";\nexport default function component() {\n\treturn (<Select multiple size=\"small\" variant=\"outline\">\n\t\t  <SelectTrigger>\n\t\t    <SelectValue label=\"Fruit\">\n\t\t      {(value) => (\n\t\t        <div className=\"flex gap-1\">\n\t\t          {Array.isArray(value)\n\t\t            ? value.map((v) => <Pill>{v}</Pill>)\n\t\t            : value}\n\t\t        </div>\n\t\t      )}\n\t\t    </SelectValue>\n\t\t  </SelectTrigger>\n\t\t  <SelectContent>\n\t\t    <SelectItem value=\"apple\">Apple</SelectItem>\n\t\t    <SelectItem value=\"banana\">Banana</SelectItem>\n\t\t    <SelectItem value=\"blueberry\">Blueberry</SelectItem>\n\t\t    <SelectItem value=\"grapes\">Grapes</SelectItem>\n\t\t    <SelectItem value=\"pineapple\">Pineapple</SelectItem>\n\t\t  </SelectContent>\n\t\t</Select>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Dropdown",
        "description": "Dropdowns are toggleable, contextual overlays for displaying lists of links and more.",
        "docs": {
            "import": "import {\n  Dropdown,\n  DropdownContent,\n  DropdownItem,\n  DropdownItemIcon,\n  DropdownTrigger,\n} from \"@govtechmy/myds-react/dropdown\";",
            "use": "export default () => (\n  <Dropdown>\n    <DropdownTrigger />\n    <DropdownContent>\n      <DropdownItem>\n        <DropdownItemIcon />\n      </DropdownItem>\n    </DropdownContent>\n  </Dropdown>\n);",
            "props": {
                "Dropdown": {
                    "open": {
                        "description": "State of the dropdown (controlled)",
                        "type": "boolean",
                        "default": "false"
                    },
                    "defaultOpen": {
                        "description": "Initial state of the dropdown (uncontrolled)",
                        "type": "boolean",
                        "default": "false"
                    },
                    "onOpenChange": {
                        "description": "Change event listener (controlled)",
                        "type": "(open: boolean) => void"
                    }
                },
                "DropdownTrigger": {
                    "asChild": {
                        "description": "Flag to inherit child component directly",
                        "type": "boolean",
                        "default": "false"
                    }
                },
                "DropdownContent": {
                    "align": {
                        "description": "Alignment of the dropdown wrt to the trigger",
                        "type": "enum",
                        "typeDescription": "start | end | center",
                        "default": "end"
                    },
                    "side": {
                        "description": "Position of the dropdown wrt to the trigger",
                        "type": "enum",
                        "typeDescription": "top | bottom | left | right",
                        "default": "bottom"
                    }
                },
                "DropdownItem": {
                    "disabled": {
                        "description": "Whether the dropdown item is disabled",
                        "type": "boolean",
                        "default": "false"
                    },
                    "variant": {
                        "description": "Variant of the dropdown item",
                        "type": "default | danger",
                        "default": "default"
                    },
                    "onSelect": {
                        "description": "Event listener when dropdown item is selected",
                        "type": "(event: Event) => void"
                    }
                }
            },
            "examples": [
                "import {\n  Dropdown,\n  DropdownContent,\n  DropdownItem,\n  DropdownItemIcon,\n  DropdownTrigger,\n} from \"@govtechmy/myds-react/dropdown\";\nexport default function component() {\n\treturn (<Dropdown>\n\t\t  <DropdownTrigger asChild>\n\t\t    <Button variant=\"primary-fill\">Dropdown Menu</Button>\n\t\t  </DropdownTrigger>\n\t\t  <DropdownContent>\n\t\t    <DropdownItem>Profile</DropdownItem>\n\t\t    <DropdownItem>Billing</DropdownItem>\n\t\t    <DropdownItem>Team</DropdownItem>\n\t\t    <DropdownItem>Subscription</DropdownItem>\n\t\t  </DropdownContent>\n\t\t</Dropdown>\n\t);\n}",
                "import {\n  Dropdown,\n  DropdownContent,\n  DropdownItem,\n  DropdownItemIcon,\n  DropdownTrigger,\n} from \"@govtechmy/myds-react/dropdown\";\nexport default function component() {\n\treturn (// Uncontrolled state\n\t\t<Dropdown defaultOpen={false}>\n\t\t    <DropdownTrigger asChild>\n\t\t        <Button variant=\"primary-fill\">Dropdown Menu</Button>\n\t\t    </DropdownTrigger>\n\t\t    <DropdownContent>\n\t\t        <DropdownItem>Profile</DropdownItem>\n\t\t        <DropdownItem>Billing</DropdownItem>\n\t\t        <DropdownItem>Team</DropdownItem>\n\t\t        <DropdownItem>Subscription</DropdownItem>\n\t\t    </DropdownContent>\n\t\t</Dropdown>\n\t\t\n\t\t// Controlled state\n\t\t<Dropdown open={false}>\n\t\t    <DropdownTrigger asChild>\n\t\t        <Button variant=\"primary-fill\">Dropdown Menu</Button>\n\t\t    </DropdownTrigger>\n\t\t    <DropdownContent>\n\t\t        <DropdownItem>Profile</DropdownItem>\n\t\t        <DropdownItem>Billing</DropdownItem>\n\t\t        <DropdownItem>Team</DropdownItem>\n\t\t        <DropdownItem>Subscription</DropdownItem>\n\t\t    </DropdownContent>\n\t\t</Dropdown>\n\t);\n}",
                "import {\n  Dropdown,\n  DropdownContent,\n  DropdownItem,\n  DropdownItemIcon,\n  DropdownTrigger,\n} from \"@govtechmy/myds-react/dropdown\";\nexport default function component() {\n\treturn (<Dropdown>\n\t\t    <DropdownTrigger asChild>\n\t\t        <Button variant=\"primary-fill\">Dropdown Menu + Icon</Button>\n\t\t    </DropdownTrigger>\n\t\t    <DropdownContent side=\"bottom\" align=\"end\">\n\t\t        <DropdownItem>\n\t\t            <DropdownItemIcon>\n\t\t                <EditIcon />\n\t\t            </DropdownItemIcon>\n\t\t            Edit\n\t\t        </DropdownItem>\n\t\t        <DropdownItem>\n\t\t            <DropdownItemIcon>\n\t\t                <CopyIcon />\n\t\t            </DropdownItemIcon>\n\t\t            Copy link\n\t\t        </DropdownItem>\n\t\t        <DropdownItem>\n\t\t            <DropdownItemIcon>\n\t\t                <SettingIcon />\n\t\t            </DropdownItemIcon>\n\t\t            Settings\n\t\t        </DropdownItem>\n\t\t        <DropdownItem variant=\"danger\">\n\t\t            <DropdownItemIcon>\n\t\t                <LogoutIcon />\n\t\t            </DropdownItemIcon>\n\t\t            Logout\n\t\t        </DropdownItem>\n\t\t    </DropdownContent>\n\t\t</Dropdown>\n\t);\n}",
                "import {\n  Dropdown,\n  DropdownContent,\n  DropdownItem,\n  DropdownItemIcon,\n  DropdownTrigger,\n} from \"@govtechmy/myds-react/dropdown\";\nexport default function component() {\n\treturn (<Dropdown>\n\t\t    <DropdownTrigger asChild>\n\t\t        <Button variant=\"primary-fill\">With Variant: Danger </Button>\n\t\t    </DropdownTrigger>\n\t\t    <DropdownContent side=\"bottom\" align=\"end\">\n\t\t        <DropdownItem variant=\"danger\">\n\t\t            <DropdownItemIcon>\n\t\t                <LogoutIcon />\n\t\t            </DropdownItemIcon>\n\t\t            Logout\n\t\t        </DropdownItem>\n\t\t    </DropdownContent>\n\t\t</Dropdown>\n\t);\n}",
                "import {\n  Dropdown,\n  DropdownContent,\n  DropdownItem,\n  DropdownItemIcon,\n  DropdownTrigger,\n} from \"@govtechmy/myds-react/dropdown\";\nexport default function component() {\n\treturn (<Dropdown>\n\t\t    <DropdownTrigger asChild>\n\t\t        <Button variant=\"primary-fill\">With Disabled Item </Button>\n\t\t    </DropdownTrigger>\n\t\t    <DropdownContent>\n\t\t        <DropdownItem disabled>\n\t\t            <DropdownItemIcon>\n\t\t                <LogoutIcon />\n\t\t            </DropdownItemIcon>\n\t\t            <span className=\"text-inherit\">Logout</span>\n\t\t        </DropdownItem>\n\t\t    </DropdownContent>\n\t\t</Dropdown>\n\t);\n}",
                "import {\n  Dropdown,\n  DropdownContent,\n  DropdownItem,\n  DropdownItemIcon,\n  DropdownTrigger,\n} from \"@govtechmy/myds-react/dropdown\";\nexport default function component() {\n\treturn (// Start\n\t\t<Dropdown>\n\t\t    <DropdownTrigger asChild>\n\t\t        <Button variant=\"primary-fill\">Align: Start </Button>\n\t\t    </DropdownTrigger>\n\t\t    <DropdownContent align=\"start\">\n\t\t        <DropdownItem>Option 1</DropdownItem>\n\t\t        <DropdownItem>Option 2</DropdownItem>\n\t\t        <DropdownItem>Option 3</DropdownItem>\n\t\t    </DropdownContent>\n\t\t</Dropdown>\n\t\t\n\t\t// Center\n\t\t\n\t\t<Dropdown>\n\t\t  <DropdownTrigger asChild>\n\t\t    <Button variant=\"primary-fill\">Align: Center </Button>\n\t\t  </DropdownTrigger>\n\t\t  <DropdownContent align=\"center\">\n\t\t    <DropdownItem>Option 1</DropdownItem>\n\t\t    <DropdownItem>Option 2</DropdownItem>\n\t\t    <DropdownItem>Option 3</DropdownItem>\n\t\t  </DropdownContent>\n\t\t</Dropdown>\n\t\t\n\t\t// End\n\t\t\n\t\t<Dropdown>\n\t\t  <DropdownTrigger asChild>\n\t\t    <Button variant=\"primary-fill\">Align: End </Button>\n\t\t  </DropdownTrigger>\n\t\t  <DropdownContent align=\"end\">\n\t\t    <DropdownItem>Option 1</DropdownItem>\n\t\t    <DropdownItem>Option 2</DropdownItem>\n\t\t    <DropdownItem>Option 3</DropdownItem>\n\t\t  </DropdownContent>\n\t\t</Dropdown>\n\t);\n}",
                "import {\n  Dropdown,\n  DropdownContent,\n  DropdownItem,\n  DropdownItemIcon,\n  DropdownTrigger,\n} from \"@govtechmy/myds-react/dropdown\";\nexport default function component() {\n\treturn (// Bottom\n\t\t <Dropdown>\n\t\t    <DropdownTrigger asChild>\n\t\t        <Button variant=\"primary-fill\">Side: Bottom </Button>\n\t\t    </DropdownTrigger>\n\t\t    <DropdownContent side=\"bottom\">\n\t\t        <DropdownItem>Option 1</DropdownItem>\n\t\t        <DropdownItem>Option 2</DropdownItem>\n\t\t        <DropdownItem>Option 3</DropdownItem>\n\t\t    </DropdownContent>\n\t\t</Dropdown>\n\t\t\n\t\t// Top\n\t\t\n\t\t<Dropdown>\n\t\t  <DropdownTrigger asChild>\n\t\t    <Button variant=\"primary-fill\">Side: Top </Button>\n\t\t  </DropdownTrigger>\n\t\t  <DropdownContent side=\"top\">\n\t\t    <DropdownItem>Option 1</DropdownItem>\n\t\t    <DropdownItem>Option 2</DropdownItem>\n\t\t    <DropdownItem>Option 3</DropdownItem>\n\t\t  </DropdownContent>\n\t\t</Dropdown>\n\t\t\n\t\t// Left\n\t\t\n\t\t<Dropdown>\n\t\t  <DropdownTrigger asChild>\n\t\t    <Button variant=\"primary-fill\">Side: Left </Button>\n\t\t  </DropdownTrigger>\n\t\t  <DropdownContent side=\"left\">\n\t\t    <DropdownItem>Option 1</DropdownItem>\n\t\t    <DropdownItem>Option 2</DropdownItem>\n\t\t    <DropdownItem>Option 3</DropdownItem>\n\t\t  </DropdownContent>\n\t\t</Dropdown>\n\t\t\n\t\t// Right\n\t\t\n\t\t<Dropdown>\n\t\t  <DropdownTrigger asChild>\n\t\t    <Button variant=\"primary-fill\">Side: Right </Button>\n\t\t  </DropdownTrigger>\n\t\t  <DropdownContent side=\"right\">\n\t\t    <DropdownItem>Option 1</DropdownItem>\n\t\t    <DropdownItem>Option 2</DropdownItem>\n\t\t    <DropdownItem>Option 3</DropdownItem>\n\t\t  </DropdownContent>\n\t\t</Dropdown>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Pill",
        "description": "Represent tags or categories in a textfield. Pills can contain text and may include an \"x\" button to allow for easy removal.",
        "docs": {
            "import": "import { Pill } from \"@govtechmy/myds-react/pill\";",
            "use": "export default () => <Pill>Trending</Pill>;",
            "props": {
                "Pill": {
                    "size": {
                        "description": "Sizes of the pill",
                        "type": "enum",
                        "typeDescription": "small | medium | large",
                        "default": "small"
                    },
                    "disabled": {
                        "type": "boolean",
                        "default": "false"
                    },
                    "onDismiss": {
                        "description": "A callback function that is called when the trailing \"x\" button is clicked",
                        "type": "function"
                    }
                }
            },
            "examples": [
                "import { Pill } from \"@govtechmy/myds-react/pill\";\nexport default function component() {\n\treturn (import { Pill } from \"@govtechmy/myds-react/pill\";\n\t\t\n\t\t<Pill size=\"small\">small</Pill>;\n\t\t<Pill size=\"medium\">medium</Pill>;\n\t\t<Pill size=\"large\">large</Pill>;\n\t);\n}",
                "import { Pill } from \"@govtechmy/myds-react/pill\";\nexport default function component() {\n\treturn (import { Pill } from \"@govtechmy/myds-react/pill\";\n\t\t\n\t\t<Pill onDismiss={...}>With trailing \"x\" button</Pill>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Announce Bar",
        "description": "Informs users about the service's development stage and includes a link for submitting feedback. The phase banner is typically placed below the navigation menu to display the current status of the service, such as Alpha, Beta, or Maintenance.",
        "docs": {
            "import": "import {\n  AnnounceBar,\n  AnnounceBarTag,\n  AnnounceBarDescription,\n} from \"@govtechmy/myds-react/announce-bar\";",
            "use": "export default () => (\n  <AnnounceBar>\n    <AnnounceBarTag />\n    <AnnounceBarDescription />\n  </AnnounceBar>\n);",
            "props": {
                "AnnounceBarTag": {
                    "variant": {
                        "description": "Style variant of the button",
                        "type": "enum",
                        "typeDescription": "primary-fill | primary-outline | primary-ghost | danger-fill | danger-outline | danger-ghost | default-outline | default-ghost",
                        "default": "default-outline"
                    }
                }
            },
            "examples": [
                "import {\n  AnnounceBar,\n  AnnounceBarTag,\n  AnnounceBarDescription,\n} from \"@govtechmy/myds-react/announce-bar\";\nexport default function component() {\n\treturn (/** Variant: Primary **/\n\t\t\n\t\t<AnnounceBar>\n\t\t    <AnnounceBarTag variant=\"primary\">Alpha</AnnounceBarTag>\n\t\t    <AnnounceBarDescription>\n\t\t        This is a new service. Help us improve it.\n\t\t        <Link underline=\"always\" primary href=\"#\">\n\t\t        Send us your feedback here.\n\t\t        </Link>\n\t\t    </AnnounceBarDescription>\n\t\t</AnnounceBar>\n\t\t\n\t\t/** Variant: Default **/\n\t\t\n\t\t<AnnounceBar>\n\t\t    <AnnounceBarTag variant=\"default\">Alpha</AnnounceBarTag>\n\t\t    <AnnounceBarDescription>\n\t\t        This is a new service. Help us improve it.\n\t\t        <Link underline=\"always\" primary href=\"#\">\n\t\t        Send us your feedback here.\n\t\t        </Link>\n\t\t    </AnnounceBarDescription>\n\t\t</AnnounceBar>\n\t\t\n\t\t/** Variant: Success **/\n\t\t\n\t\t<AnnounceBar>\n\t\t    <AnnounceBarTag variant=\"success\">Alpha</AnnounceBarTag>\n\t\t    <AnnounceBarDescription>\n\t\t        This is a new service. Help us improve it.\n\t\t        <Link underline=\"always\" primary href=\"#\">\n\t\t        Send us your feedback here.\n\t\t        </Link>\n\t\t    </AnnounceBarDescription>\n\t\t</AnnounceBar>\n\t\t\n\t\t/** Variant: Warning **/\n\t\t\n\t\t<AnnounceBar>\n\t\t    <AnnounceBarTag variant=\"warning\">Alpha</AnnounceBarTag>\n\t\t    <AnnounceBarDescription>\n\t\t        This is a new service. Help us improve it.\n\t\t        <Link underline=\"always\" primary href=\"#\">\n\t\t        Send us your feedback here.\n\t\t        </Link>\n\t\t    </AnnounceBarDescription>\n\t\t</AnnounceBar>\n\t\t\n\t\t/** Variant: Danger **/\n\t\t\n\t\t<AnnounceBar>\n\t\t    <AnnounceBarTag variant=\"danger\">Alpha</AnnounceBarTag>\n\t\t    <AnnounceBarDescription>\n\t\t        This is a new service. Help us improve it.\n\t\t        <Link underline=\"always\" primary href=\"#\">\n\t\t            Send us your feedback here.\n\t\t        </Link>\n\t\t    </AnnounceBarDescription>\n\t\t</AnnounceBar>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Footer",
        "description": "The Footer component is a standardized footer for Malaysian government websites.",
        "docs": {
            "import": "import {\n  Footer,\n  SiteInfo,\n  FooterSection,\n  SiteLinkGroup,\n  SiteLink,\n  FooterLogo,\n} from \"@govtechmy/myds-react/footer\";",
            "use": "export default () => (\n  <Footer>\n    <FooterSection>\n      <SiteInfo>\n        <FooterLogo />\n      </SiteInfo>\n      <SiteLinkGroup>\n        <SiteLink />\n      </SiteLinkGroup>\n    </FooterSection>\n  </Footer>\n);",
            "props": {
                "Footer": {
                    "children": {
                        "description": "Content of the footer",
                        "type": "ReactNode"
                    },
                    "className": {
                        "description": "Additional styles",
                        "type": "string"
                    }
                },
                "FooterSection": {
                    "children": {
                        "description": "Content of the footer section",
                        "type": "ReactNode"
                    },
                    "className": {
                        "description": "Additional styles",
                        "type": "string"
                    }
                },
                "SiteInfo": {
                    "children": {
                        "description": "Content of the site info section",
                        "type": "ReactNode"
                    },
                    "className": {
                        "description": "Additional styles",
                        "type": "string"
                    }
                },
                "SiteLinkGroup": {
                    "children": {
                        "description": "Content of the site link grouping",
                        "type": "ReactNode"
                    },
                    "className": {
                        "description": "Additional styles",
                        "type": "string"
                    },
                    "groupTitle": {
                        "description": "Title element for the grouping",
                        "type": "ReactNode"
                    },
                    "linkCount": {
                        "description": "The number of children to be displayed in the grouping",
                        "type": "number",
                        "default": 8
                    }
                },
                "FooterLogo": {
                    "className": {
                        "description": "Additional styles",
                        "type": "string"
                    },
                    "logoTitle": {
                        "description": "Brand name of the footer",
                        "type": "ReactNode"
                    },
                    "logo": {
                        "description": "Brand logo of the footer",
                        "type": "ReactNode"
                    }
                },
                "SiteLink": {
                    "className": {
                        "description": "Additional styles",
                        "type": "string"
                    },
                    "children": {
                        "description": "Content of the site link",
                        "type": "ReactNode"
                    },
                    "asChild": {
                        "description": "Flag to inherit child component directly",
                        "type": "boolean",
                        "default": "false"
                    }
                }
            },
            "examples": []
        }
    },
    {
        "name": "Breadcrumb",
        "description": "A navigation aid that helps users understand their current location within a website or application and allows them to easily navigate back to previous levels.",
        "docs": {
            "import": "import {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbSeparator,\n  BreadcrumbPage,\n} from \"@govtechmy/myds-react/breadcrumb\";",
            "use": "export default () => (\n  <Breadcrumb>\n    <BreadcrumbItem>\n      <BreadcrumbLink />\n      <BreadcrumbPage />\n    </BreadcrumbItem>\n    <BreadcrumbSeparator />\n  </Breadcrumb>\n);",
            "props": {
                "Breadcrumb": {
                    "variant": {
                        "description": "Style variant of the breadcrumb",
                        "type": "enum",
                        "typeDescription": "default | fill",
                        "default": "default"
                    }
                }
            },
            "examples": [
                "import {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbSeparator,\n  BreadcrumbPage,\n} from \"@govtechmy/myds-react/breadcrumb\";\nexport default function component() {\n\treturn (/** Variant: Default **/\n\t\t\n\t\t<Breadcrumb variant=\"default\">\n\t\t  <BreadcrumbItem>\n\t\t    <BreadcrumbLink href=\"#home\">Home</BreadcrumbLink>\n\t\t  </BreadcrumbItem>\n\t\t  <BreadcrumbSeparator />\n\t\t  <BreadcrumbItem>\n\t\t    <BreadcrumbLink href=\"#collection\">Collection</BreadcrumbLink>\n\t\t  </BreadcrumbItem>\n\t\t  <BreadcrumbSeparator />\n\t\t  <BreadcrumbItem>\n\t\t    <BreadcrumbPage>Your Page</BreadcrumbPage>\n\t\t  </BreadcrumbItem>\n\t\t</Breadcrumb>\n\t\t\n\t\t/** Variant: Fill **/\n\t\t\n\t\t<Breadcrumb variant=\"fill\">\n\t\t  <BreadcrumbItem>\n\t\t    <BreadcrumbLink href=\"#home\">Home</BreadcrumbLink>\n\t\t  </BreadcrumbItem>\n\t\t  <BreadcrumbSeparator />\n\t\t  <BreadcrumbItem>\n\t\t    <BreadcrumbLink href=\"#collection\">Collection</BreadcrumbLink>\n\t\t  </BreadcrumbItem>\n\t\t  <BreadcrumbSeparator />\n\t\t  <BreadcrumbItem>\n\t\t    <BreadcrumbPage>Your Page</BreadcrumbPage>\n\t\t  </BreadcrumbItem>\n\t\t</Breadcrumb>\n\t);\n}",
                "import {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbSeparator,\n  BreadcrumbPage,\n} from \"@govtechmy/myds-react/breadcrumb\";\nexport default function component() {\n\treturn (<Breadcrumb variant=\"default\">\n\t\t  <BreadcrumbItem>\n\t\t    <BreadcrumbLink href=\"#home\">Home</BreadcrumbLink>\n\t\t  </BreadcrumbItem>\n\t\t  <BreadcrumbSeparator />\n\t\t  <BreadcrumbItem>\n\t\t    <BreadcrumbLink href=\"#collection\">Collection</BreadcrumbLink>\n\t\t  </BreadcrumbItem>\n\t\t  <BreadcrumbSeparator />\n\t\t  <BreadcrumbItem>\n\t\t    <BreadcrumbPage>Your Page</BreadcrumbPage>\n\t\t  </BreadcrumbItem>\n\t\t</Breadcrumb>\n\t);\n}",
                "import {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbSeparator,\n  BreadcrumbPage,\n} from \"@govtechmy/myds-react/breadcrumb\";\nexport default function component() {\n\treturn (<Breadcrumb variant=\"default\">\n\t\t  <BreadcrumbItem>\n\t\t    <BreadcrumbLink href=\"#home\">Home</BreadcrumbLink>\n\t\t  </BreadcrumbItem>\n\t\t  <BreadcrumbSeparator />\n\t\t  <BreadcrumbItem>\n\t\t    <BreadcrumbLink href=\"#collection\">\n\t\t      This is a very long collection name to trigger the ellipsis\n\t\t    </BreadcrumbLink>\n\t\t  </BreadcrumbItem>\n\t\t  <BreadcrumbSeparator />\n\t\t  <BreadcrumbItem>\n\t\t    <BreadcrumbPage>Your Page</BreadcrumbPage>\n\t\t  </BreadcrumbItem>\n\t\t</Breadcrumb>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Masthead",
        "description": "The Masthead component is a standardized header for Malaysian government websites.",
        "docs": {
            "import": "import {\n  Masthead,\n  MastheadHeader,\n  MastheadContent,\n  MastheadOfficialIndicator,\n  MastheadToggle,\n  MastheadSection,\n  MastheadSectionTitle,\n  MastheadSectionBody,\n} from \"@govtechmy/myds-react/masthead\";\nimport { GovMyIcon, Lock2Icon, LockFillIcon } from \"@govtechmy/myds-react/icon\";",
            "use": "export default () => (\n  <Masthead>\n    <MastheadHeader>\n      <MastheadOfficialIndicator>\n        Official Malaysia Government Website\n      </MastheadOfficialIndicator>\n      <MastheadToggle>Here's how you know</MastheadToggle>\n    </MastheadHeader>\n    <MastheadContent>\n      <MastheadSection icon={<GovMyIcon />}>\n        <MastheadSectionTitle>\n          Official government websites end with .gov.my\n        </MastheadSectionTitle>\n        <MastheadSectionBody>\n          If the link does not end with\n          <span className=\"font-semibold\"> .gov.my</span>, exit the website\n          immediately even if it looks similar.\n        </MastheadSectionBody>\n      </MastheadSection>\n      <MastheadSection icon={<Lock2Icon height={24} width={24} />}>\n        <MastheadSectionTitle>Secure websites use HTTPS</MastheadSectionTitle>\n        <MastheadSectionBody>\n          Look for a lock (\n          <SolidLockIcon className=\"mb-0.5 inline size-3.5\" />) atau\n          <span className=\"font-semibold\"> https:// </span>\n          as an added precaution. If not present, do not share any sensitive\n          information.\n        </MastheadSectionBody>\n      </MastheadSection>\n    </MastheadContent>\n  </Masthead>\n);",
            "props": {
                "Masthead": {
                    "children": {
                        "description": "Content to be displayed inside the Masthead component. Can include a MastheadHeader and MastheadContent.",
                        "type": "ReactNode",
                        "default": "<DefaultMastheadHeadHeader/>,<DefaultMastheadContent/>"
                    }
                },
                "MastheadHeader": {
                    "children": {
                        "description": "Content for the Masthead header. Typically contains the MastheadOfficialIndicator and MastheadToggle components.",
                        "type": "ReactNode"
                    }
                },
                "MastheadOfficialIndicator": {
                    "children": {
                        "description": "Text to display alongside the official Malaysia government flag icon. Defaults to 'Official Malaysia Government Website'.",
                        "type": "ReactNode",
                        "default": "Official Malaysia Government Website"
                    }
                },
                "MastheadToggle": {
                    "children": {
                        "description": "Text for the toggle section. Defaults to 'Here's how you know'.",
                        "type": "ReactNode",
                        "default": "Here's how you know"
                    }
                },
                "MastheadContent": {
                    "children": {
                        "description": "Content for the body of the Masthead component, typically containing multiple MastheadSection components.",
                        "type": "ReactNode"
                    }
                },
                "MastheadSection": {
                    "icon": {
                        "description": "Icon to display next to the section content. Typically an icon from the `icons` folder.",
                        "type": "ReactNode"
                    },
                    "children": {
                        "description": "Content to display within the section, such as a title and body of text.",
                        "type": "ReactNode"
                    }
                },
                "MastheadSectionTitle": {
                    "children": {
                        "description": "Title for the Masthead section. Typically describes the content in the section.",
                        "type": "ReactNode"
                    }
                },
                "MastheadSectionBody": {
                    "children": {
                        "description": "Body text for the Masthead section. Describes the details or additional information related to the section title.",
                        "type": "ReactNode"
                    }
                }
            },
            "examples": []
        }
    },
    {
        "name": "Theme Switch",
        "description": "A component that allows users to switching themes of the application dynamically.",
        "docs": {
            "import": "import { ThemeProvider } from \"@govtechmy/myds-react/hooks\";\nimport { ThemeSwitch } from \"@govtechmy/myds-react/theme-switch\";",
            "use": "export default () => (\n  <ThemeProvider>\n    <ThemeSwitch />\n  </ThemeProvider>\n);",
            "props": {
                "ThemeSwitch": {
                    "as": {
                        "as": "Component to appear as",
                        "type": "enum",
                        "typeDescription": "toggle | select",
                        "default": "toggle"
                    },
                    "themes": {
                        "description": "An array of theme objects, each containing a theme name and an associated icon.",
                        "type": "Theme[]",
                        "typeDescription": "type Theme = { \n  \"label\": string,\n  \"value\": string, \n  \"icon\": ReactNode; \n}",
                        "default": "[\n    { \n      \"label\": \"Light\",\n      \"value\": \"light\", \n      \"icon\": <SunIcon />; \n    },\n    { \n      \"label\": \"Dark\",\n      \"value\": \"dark\", \n      \"icon\": <MoonIcon />; \n    }\n]\n"
                    }
                },
                "ThemeProvider": {
                    "defaultTheme": {
                        "description": "The default theme to be applied.",
                        "type": "string",
                        "typeDescription": "Theme name",
                        "default": "light"
                    },
                    "children": {
                        "description": "The children components wrapped by the provider.",
                        "type": "ReactNode"
                    }
                }
            },
            "examples": [
                "import { ThemeProvider } from \"@govtechmy/myds-react/hooks\";\nimport { ThemeSwitch } from \"@govtechmy/myds-react/theme-switch\";\nexport default function component() {\n\treturn (import { ThemeProvider } from \"@govtechmy/myds-react/hooks\";\n\t\timport { ThemeSwitch } from \"@govtechmy/myds-react/theme-switch\";\n\t\t\n\t\t<ThemeProvider>\n\t\t  <ThemeSwitch as=\"toggle\" />\n\t\t</ThemeProvider>\n\t);\n}",
                "import { ThemeProvider } from \"@govtechmy/myds-react/hooks\";\nimport { ThemeSwitch } from \"@govtechmy/myds-react/theme-switch\";\nexport default function component() {\n\treturn (import { ThemeProvider } from \"@govtechmy/myds-react/hooks\";\n\t\timport { ThemeSwitch } from \"@govtechmy/myds-react/theme-switch\";\n\t\t\n\t\t<ThemeProvider>\n\t\t  <ThemeSwitch as=\"select\" />\n\t\t</ThemeProvider>\n\t);\n}",
                "import { ThemeProvider } from \"@govtechmy/myds-react/hooks\";\nimport { ThemeSwitch } from \"@govtechmy/myds-react/theme-switch\";\nexport default function component() {\n\treturn (import { ThemeProvider } from \"@govtechmy/myds-react/hooks\";\n\t\timport { ThemeSwitch } from \"@govtechmy/myds-react/theme-switch\";\n\t\t\n\t\t<ThemeProvider>\n\t\t  <ThemeSwitch\n\t\t    as=\"toggle\"\n\t\t    themes={[\n\t\t      {\n\t\t        icon: \"\ud83c\udf1e\",\n\t\t        label: \"Light\",\n\t\t        value: \"light\",\n\t\t      },\n\t\t      {\n\t\t        icon: \"\ud83c\udf1a\",\n\t\t        label: \"Dark\",\n\t\t        value: \"dark\",\n\t\t      },\n\t\t      {\n\t\t        icon: \"\ud83c\udf10\",\n\t\t        label: \"System\",\n\t\t        value: \"system\",\n\t\t      },\n\t\t    ]}\n\t\t  />\n\t\t  <ThemeSwitch\n\t\t    as=\"select\"\n\t\t    themes={[\n\t\t      {\n\t\t        icon: \"\ud83c\udf1e\",\n\t\t        label: \"Light\",\n\t\t        value: \"light\",\n\t\t      },\n\t\t      {\n\t\t        icon: \"\ud83c\udf1a\",\n\t\t        label: \"Dark\",\n\t\t        value: \"dark\",\n\t\t      },\n\t\t      {\n\t\t        icon: \"\ud83c\udf10\",\n\t\t        label: \"System\",\n\t\t        value: \"system\",\n\t\t      },\n\t\t    ]}\n\t\t  />\n\t\t</ThemeProvider>\n\t);\n}"
            ]
        }
    },
    {
        "name": "Dialog",
        "description": "A modal pop-up designed to capture user attention for important actions or messages. It consists of three main components, which are Header, Content, and Footer.",
        "docs": {
            "import": "import {\n  Dialog,\n  DialogBody,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogFooter,\n  DialogClose,\n} from \"@govtechmy/myds-react/dialog\";",
            "use": "export default () => (\n  <Dialog>\n    <DialogTrigger />\n    <DialogBody>\n      <DialogHeader>\n        <DialogTitle />\n      </DialogHeader>\n      <DialogContent>\n        <DialogDescription />\n      </DialogContent>\n      <DialogFooter>\n        <DialogClose />\n      </DialogFooter>\n    </DialogBody>\n  </Dialog>\n);",
            "props": {
                "Dialog": {
                    "open": {
                        "description": "State of the dialog (controlled)",
                        "type": "boolean",
                        "default": "false"
                    },
                    "defaultOpen": {
                        "description": "Initial state of the dialog (uncontrolled)",
                        "type": "boolean",
                        "default": "false"
                    },
                    "onOpenChange": {
                        "description": "Change event listener (controlled)",
                        "type": "(open: boolean) => void"
                    }
                },
                "DialogBody": {
                    "dismissible": {
                        "description": "Whether the dialog can be dismissed",
                        "type": "boolean",
                        "default": "true"
                    },
                    "hideClose": {
                        "description": "Hide the default dismiss button",
                        "type": "boolean",
                        "default": "false"
                    },
                    "onDismiss": {
                        "description": "Change event listener for dismiss event",
                        "type": "() => void"
                    }
                },
                "DialogHeader": {
                    "border": {
                        "description": "Whether the dialog header has border",
                        "type": "boolean",
                        "default": "false"
                    }
                },
                "DialogFooter": {
                    "border": {
                        "description": "Whether the dialog footer has border",
                        "type": "boolean",
                        "default": "false"
                    },
                    "align": {
                        "description": "Aligns the layout of the content",
                        "type": "start | end | full",
                        "default": "end"
                    },
                    "action": {
                        "description": "Additional action to be added to the footer",
                        "type": "ReactNode"
                    }
                }
            },
            "examples": [
                "import {\n  Dialog,\n  DialogBody,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogFooter,\n  DialogClose,\n} from \"@govtechmy/myds-react/dialog\";\nexport default function component() {\n\treturn (<Dialog>\n\t\t  <DialogTrigger>\n\t\t    <Button variant=\"primary-fill\">Open Dialog 1</Button>\n\t\t  </DialogTrigger>\n\t\t  <DialogTrigger>\n\t\t    <Button variant=\"primary-outline\">Open Dialog 2</Button>\n\t\t  </DialogTrigger>\n\t\t  <DialogTrigger>\n\t\t    <Button variant=\"primary-ghost\">Open Dialog 3</Button>\n\t\t  </DialogTrigger>\n\t\t\n\t\t  <DialogBody>\n\t\t    <DialogHeader>\n\t\t      <DialogTitle>Dialog Title</DialogTitle>\n\t\t    </DialogHeader>\n\t\t    <DialogContent>\n\t\t      <DialogDescription>Dialog content goes here.</DialogDescription>\n\t\t    </DialogContent>\n\t\t    <DialogFooter>\n\t\t      <DialogClose>\n\t\t        <Button variant=\"default-outline\">Secondary Action</Button>\n\t\t      </DialogClose>\n\t\t      <DialogClose>\n\t\t        <Button variant=\"primary-fill\">Primary Action</Button>\n\t\t      </DialogClose>\n\t\t    </DialogFooter>\n\t\t  </DialogBody>\n\t\t</Dialog>\n\t);\n}",
                "import {\n  Dialog,\n  DialogBody,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogFooter,\n  DialogClose,\n} from \"@govtechmy/myds-react/dialog\";\nexport default function component() {\n\treturn (// Uncontrolled state\n\t\t<Dialog defaultOpen={false}>\n\t\t  <DialogTrigger>\n\t\t    <Button variant=\"primary-fill\">Open Dialog (Uncontrolled)</Button>\n\t\t  </DialogTrigger>\n\t\t  <DialogBody>\n\t\t    <DialogHeader>\n\t\t      <DialogTitle>Dialog Title</DialogTitle>\n\t\t    </DialogHeader>\n\t\t    <DialogContent>\n\t\t      <DialogDescription>Dialog content goes here.</DialogDescription>\n\t\t    </DialogContent>\n\t\t    <DialogFooter>\n\t\t      <DialogClose>\n\t\t        <Button variant=\"default-outline\">Secondary Action</Button>\n\t\t      </DialogClose>\n\t\t      <DialogClose>\n\t\t        <Button variant=\"primary-fill\">Primary Action</Button>\n\t\t      </DialogClose>\n\t\t    </DialogFooter>\n\t\t  </DialogBody>\n\t\t</Dialog>\n\t\t\n\t\t// Controlled state\n\t\t<Dialog open={false}>\n\t\t  <DialogTrigger>\n\t\t    <Button variant=\"primary-fill\">Open Dialog (Controlled)</Button>\n\t\t  </DialogTrigger>\n\t\t  <DialogBody>\n\t\t    <DialogHeader>\n\t\t      <DialogTitle>Dialog Title</DialogTitle>\n\t\t    </DialogHeader>\n\t\t    <DialogContent>\n\t\t      <DialogDescription>Dialog content goes here.</DialogDescription>\n\t\t    </DialogContent>\n\t\t    <DialogFooter>\n\t\t      <DialogClose>\n\t\t        <Button variant=\"default-outline\">Secondary Action</Button>\n\t\t      </DialogClose>\n\t\t      <DialogClose>\n\t\t        <Button variant=\"primary-fill\">Primary Action</Button>\n\t\t      </DialogClose>\n\t\t    </DialogFooter>\n\t\t  </DialogBody>\n\t\t</Dialog>\n\t);\n}",
                "import {\n  Dialog,\n  DialogBody,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogFooter,\n  DialogClose,\n} from \"@govtechmy/myds-react/dialog\";\nexport default function component() {\n\treturn (<Dialog>\n\t\t  <DialogTrigger>\n\t\t    <Button variant=\"primary-fill\">Open Dialog (Uncontrolled)</Button>\n\t\t  </DialogTrigger>\n\t\t\n\t\t  <DialogBody\n\t\t    dismissible={true}\n\t\t    onDismiss={() => alert(\"Dialog dismissed...\")}\n\t\t  >\n\t\t    <DialogHeader>\n\t\t      <DialogTitle>Dialog Title</DialogTitle>\n\t\t    </DialogHeader>\n\t\t    <DialogContent>\n\t\t      <DialogDescription>Dialog content goes here.</DialogDescription>\n\t\t    </DialogContent>\n\t\t    <DialogFooter>\n\t\t      <DialogClose>\n\t\t        <Button variant=\"default-outline\">Secondary Action</Button>\n\t\t      </DialogClose>\n\t\t      <DialogClose>\n\t\t        <Button variant=\"primary-fill\">Primary Action</Button>\n\t\t      </DialogClose>\n\t\t    </DialogFooter>\n\t\t  </DialogBody>\n\t\t</Dialog>\n\t);\n}",
                "import {\n  Dialog,\n  DialogBody,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogFooter,\n  DialogClose,\n} from \"@govtechmy/myds-react/dialog\";\nexport default function component() {\n\treturn (<Dialog>\n\t\t  <DialogTrigger>\n\t\t    <Button variant=\"primary-fill\">Open Bordered Dialog</Button>\n\t\t  </DialogTrigger>\n\t\t  <DialogBody>\n\t\t    <DialogHeader border>\n\t\t      <DialogTitle>Dialog Title</DialogTitle>\n\t\t    </DialogHeader>\n\t\t    <DialogContent>\n\t\t      <DialogDescription>Dialog content goes here.</DialogDescription>\n\t\t    </DialogContent>\n\t\t    <DialogFooter border>\n\t\t      <DialogClose>\n\t\t        <Button variant=\"default-outline\">Secondary Action</Button>\n\t\t      </DialogClose>\n\t\t      <DialogClose>\n\t\t        <Button variant=\"primary-fill\">Primary Action</Button>\n\t\t      </DialogClose>\n\t\t    </DialogFooter>\n\t\t  </DialogBody>\n\t\t</Dialog>\n\t);\n}",
                "import {\n  Dialog,\n  DialogBody,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogFooter,\n  DialogClose,\n} from \"@govtechmy/myds-react/dialog\";\nexport default function component() {\n\treturn (// Start\n\t\t<Dialog>\n\t\t  <DialogTrigger>\n\t\t    <Button variant=\"primary-fill\">Align Dialog (start)</Button>\n\t\t  </DialogTrigger>\n\t\t  <DialogBody>\n\t\t    <DialogHeader border>\n\t\t      <DialogTitle>Dialog Title</DialogTitle>\n\t\t    </DialogHeader>\n\t\t    <DialogContent>\n\t\t      <DialogDescription>Dialog content goes here.</DialogDescription>\n\t\t    </DialogContent>\n\t\t    <DialogFooter border align=\"start\">\n\t\t      <DialogClose>\n\t\t        <Button variant=\"default-outline\">Secondary Action</Button>\n\t\t      </DialogClose>\n\t\t      <DialogClose>\n\t\t        <Button variant=\"primary-fill\">Primary Action</Button>\n\t\t      </DialogClose>\n\t\t    </DialogFooter>\n\t\t  </DialogBody>\n\t\t</Dialog>\n\t\t\n\t\t// Full\n\t\t\n\t\t<Dialog>\n\t\t  <DialogTrigger>\n\t\t    <Button variant=\"primary-fill\">Align Dialog (full)</Button>\n\t\t  </DialogTrigger>\n\t\t  <DialogBody>\n\t\t    <DialogHeader border>\n\t\t      <DialogTitle>Dialog Title</DialogTitle>\n\t\t    </DialogHeader>\n\t\t    <DialogContent>\n\t\t      <DialogDescription>Dialog content goes here.</DialogDescription>\n\t\t    </DialogContent>\n\t\t    <DialogFooter border align=\"full\">\n\t\t      <DialogClose>\n\t\t        <Button variant=\"default-outline\">Secondary Action</Button>\n\t\t      </DialogClose>\n\t\t      <DialogClose>\n\t\t        <Button variant=\"primary-fill\">Primary Action</Button>\n\t\t      </DialogClose>\n\t\t    </DialogFooter>\n\t\t  </DialogBody>\n\t\t</Dialog>\n\t\t\n\t\t// End\n\t\t\n\t\t<Dialog>\n\t\t  <DialogTrigger>\n\t\t    <Button variant=\"primary-fill\">Align Dialog (end)</Button>\n\t\t  </DialogTrigger>\n\t\t  <DialogBody>\n\t\t    <DialogHeader border>\n\t\t      <DialogTitle>Dialog Title</DialogTitle>\n\t\t    </DialogHeader>\n\t\t    <DialogContent>\n\t\t      <DialogDescription>Dialog content goes here.</DialogDescription>\n\t\t    </DialogContent>\n\t\t    <DialogFooter border align=\"end\">\n\t\t      <DialogClose>\n\t\t        <Button variant=\"default-outline\">Secondary Action</Button>\n\t\t      </DialogClose>\n\t\t      <DialogClose>\n\t\t        <Button variant=\"primary-fill\">Primary Action</Button>\n\t\t      </DialogClose>\n\t\t    </DialogFooter>\n\t\t  </DialogBody>\n\t\t</Dialog>\n\t);\n}",
                "import {\n  Dialog,\n  DialogBody,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogFooter,\n  DialogClose,\n} from \"@govtechmy/myds-react/dialog\";\nexport default function component() {\n\treturn (<Dialog>\n\t\t  <DialogTrigger>\n\t\t    <Button variant=\"primary-fill\">Additional Action Dialog</Button>\n\t\t  </DialogTrigger>\n\t\t  <DialogBody>\n\t\t    <DialogHeader border>\n\t\t      <DialogTitle>Dialog Title</DialogTitle>\n\t\t    </DialogHeader>\n\t\t    <DialogContent>\n\t\t      <DialogDescription>Dialog content goes here.</DialogDescription>\n\t\t    </DialogContent>\n\t\t    <DialogFooter action={<Button variant=\"primary-ghost\">Tertiary</Button>}>\n\t\t      <DialogClose>\n\t\t        <Button variant=\"default-outline\">Secondary Action</Button>\n\t\t      </DialogClose>\n\t\t      <DialogClose>\n\t\t        <Button variant=\"primary-fill\">Primary Action</Button>\n\t\t      </DialogClose>\n\t\t    </DialogFooter>\n\t\t  </DialogBody>\n\t\t</Dialog>\n\t);\n}"
            ]
        }
    }
]